__NEXT_REGISTER_CHUNK("src_utils_exchangeApiService_13f14042b180d01eb21e6ef6a97d6521",function(){webpackJsonp([0],{226:function(e,t,i){var s=i(141),r=i(230),a=i(27),o=i(5);e.exports=function(e,t){return(o(e)?s:r)(e,a(t,3))}},354:function(e,t,i){var s=i(10)("filter",i(226));s.placeholder=i(9),e.exports=s},394:function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){var e=y.a,t=function(t,i){return t&&e[t]?new e[t](i):(console.log("Exchange ".concat(t," is not supported")),!1)},i=(a=b(r.a.mark(function e(i,s){var a,n,d;return r.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return a=t(i,s),e.next=3,a.fetchBalance();case 3:if(n=e.sent,!(d=o()(["info","error"],n))){e.next=9;break}throw new Error(d);case 9:return e.abrupt("return",n);case 10:case"end":return e.stop()}},e,this)})),function(e,t){return a.apply(this,arguments)}),s=function(e){return e.has.privateAPI&&e.has.fetchBalance};var a;return{fetchExchangeAccountBalance:i,testExchangeConnection:(n=b(r.a.mark(function e(t,s){var a;return r.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,i(t,s);case 3:return a=e.sent,e.abrupt("return",a);case 7:throw e.prev=7,e.t0=e.catch(0),console.log(e.t0),e.t0;case 11:case"end":return e.stop()}},e,this,[[0,7]])})),function(e,t){return n.apply(this,arguments)}),getExchangesList:function(){return m()(u()(t),h()(s),u()(d()(["id","name"])))(e.exchanges)},getExchangeInstance:t,getExchangeRequiredCredentialsList:function(e){if(!e)return w;var i=t(e);return i?i.requiredCredentials:void 0}};var n};var s=i(24),r=i.n(s),a=i(16),o=i.n(a),n=i(110),d=i.n(n),c=i(354),h=i.n(c),l=i(111),u=i.n(l),p=i(63),m=i.n(p),f=i(818),y=i.n(f);function b(e){return function(){var t=this,i=arguments;return new Promise(function(s,r){var a=e.apply(t,i);function o(e,t){try{var i=a[e](t),o=i.value}catch(e){return void r(e)}i.done?s(o):Promise.resolve(o).then(n,d)}function n(e){o("next",e)}function d(e){o("throw",e)}n()})}}var w={apiKey:!0,secret:!0,uid:!1,password:!1}},787:function(e,t,i){"use strict";e.exports=function e(t,i,s={}){for(const[r,a]of Object.entries(i)){const i=Object.assign(s,{[r]:class extends t{constructor(e){super(e),this.constructor=i,this.__proto__=i.prototype,this.message=e}}})[r];e(i,a,s)}return s}(Error,{BaseError:{ExchangeError:{AuthenticationError:{PermissionDenied:{},AccountSuspended:{}},BadResponse:{NullResponse:{}},InsufficientFunds:{},InvalidAddress:{AddressPending:{}},InvalidOrder:{OrderNotFound:{},OrderNotCached:{},CancelPending:{}},NotSupported:{}},NetworkError:{DDoSProtection:{},ExchangeNotAvailable:{},InvalidNonce:{},RequestTimeout:{}}}})},788:function(e,t,i){"use strict";const s=i(801),r=i(849),{isNode:a,keys:o,values:n,deepExtend:d,extend:c,flatten:h,unique:l,indexBy:u,sortBy:p,groupBy:m,aggregate:f,uuid:b,unCamelCase:w,precisionFromString:v,throttle:k,capitalize:g,now:T,sleep:C,timeout:O,TimedOut:x,buildOHLCVC:_}=s,{ExchangeError:B,InvalidAddress:S,NotSupported:I,AuthenticationError:E,DDoSProtection:M,RequestTimeout:F,ExchangeNotAvailable:P}=i(787),{DECIMAL_PLACES:A}=s.precisionConstants,G="undefined"==typeof fetch?i(850)().fetch:fetch,D=void 0;e.exports=class{getMarket(e){this.marketClasses||(this.marketClasses={});let t=this.marketClasses[e];return t||(t=new r(this,e),this.marketClasses[e]=t,t)}describe(){return{id:void 0,name:void 0,countries:void 0,enableRateLimit:!1,rateLimit:2e3,has:{CORS:!1,publicAPI:!0,privateAPI:!0,cancelOrder:!0,cancelOrders:!1,createDepositAddress:!1,createOrder:!0,createMarketOrder:!0,createLimitOrder:!0,deposit:!1,editOrder:"emulated",fetchBalance:!0,fetchBidsAsks:!1,fetchClosedOrders:!1,fetchCurrencies:!1,fetchDepositAddress:!1,fetchFundingFees:!1,fetchL2OrderBook:!0,fetchMarkets:!0,fetchMyTrades:!1,fetchOHLCV:"emulated",fetchOpenOrders:!1,fetchOrder:!1,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!1,fetchTicker:!0,fetchTickers:!1,fetchTrades:!0,fetchTradingFees:!1,fetchTradingLimits:!1,withdraw:!1},urls:{logo:void 0,api:void 0,www:void 0,doc:void 0,fees:void 0},api:void 0,requiredCredentials:{apiKey:!0,secret:!0,uid:!1,login:!1,password:!1,twofa:!1},markets:void 0,currencies:{},timeframes:void 0,fees:{trading:{tierBased:void 0,percentage:void 0,taker:void 0,maker:void 0},funding:{tierBased:void 0,percentage:void 0,withdraw:{},deposit:{}}},parseJsonResponse:!0,skipJsonOnStatusCodes:[],exceptions:void 0,dontGetUsedBalanceFromStaleCache:!1,commonCurrencies:{XBT:"BTC",BCC:"BCH",DRK:"DASH"},precisionMode:A}}constructor(e={}){Object.assign(this,s,{encode:e=>e,decode:e=>e}),this.options={},this.fetchOptions={},this.userAgents={chrome:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36",chrome39:"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36"},this.headers={},this.proxy="",this.origin="*",this.iso8601=(e=>{const t=parseInt(e,10);if(!(isNaN(t)||t<0||t<0))try{return new Date(t).toISOString()}catch(e){return}}),this.parse8601=(e=>{if("string"==typeof e&&e&&!e.match(/^[0-9]+$/)&&!(e.indexOf("-")<0||e.indexOf(":")<0))try{const t=Date.parse(e.indexOf("+")>=0||"Z"===e.slice(-1)?e:(e+"Z").replace(/\s(\d\d):/,"T$1:"));if(isNaN(t))return;return t}catch(e){return}}),this.parseDate=(e=>{if("string"==typeof e&&e){if(e.indexOf("GMT")>=0)try{return Date.parse(e)}catch(e){return}return this.parse8601(e)}}),this.microseconds=(()=>1e3*T()),this.seconds=(()=>Math.floor(T()/1e3)),this.minFundingAddressLength=1,this.substituteCommonCurrencyCodes=!0,this.fetchImplementation=G,this.timeout=1e4,this.verbose=!1,this.debug=!1,this.journal="debug.json",this.userAgent=void 0,this.twofa=!1,this.apiKey=void 0,this.secret=void 0,this.uid=void 0,this.login=void 0,this.password=void 0,this.balance={},this.orderbooks={},this.tickers={},this.orders={},this.trades={},this.last_http_response=void 0,this.last_json_response=void 0,this.last_response_headers=void 0,this.arrayConcat=((e,t)=>e.concat(t));const t=(e=this)=>{if(null!==e){for(const t of Object.getOwnPropertyNames(e))this[w(t)]=this[t];t(Object.getPrototypeOf(e))}};t();const i=d(this.describe(),e);for(const[s,r]of Object.entries(i))this[s]=d(this[s],r);for(const s in this.has)this["has"+g(s)]=!!this.has[s];this.api&&this.defineRestApi(this.api,"request"),this.initRestRateLimiter(),this.markets&&this.setMarkets(this.markets),this.debug&&D&&D(()=>this.journal,this,Object.keys(this.has))}defaults(){return{}}nonce(){return this.seconds()}milliseconds(){return T()}encodeURIComponent(...e){return encodeURIComponent(...e)}checkRequiredCredentials(){Object.keys(this.requiredCredentials).forEach(e=>{if(this.requiredCredentials[e]&&!this[e])throw new E(this.id+" requires `"+e+"`")})}checkAddress(e){if(void 0===e)throw new S(this.id+" address is undefined");if(1===l(e).length||e.length<this.minFundingAddressLength||e.includes(" "))throw new S(this.id+" address is invalid or has less than "+this.minFundingAddressLength.toString()+' characters: "'+this.json(e)+'"');return e}initRestRateLimiter(){const e=this.fetchImplementation;if(void 0===this.rateLimit)throw new Error(this.id+".rateLimit property is not configured");this.tokenBucket=this.extend({refillRate:1/this.rateLimit,delay:1,capacity:1,defaultCost:1,maxCapacity:1e3},this.tokenBucket),this.throttle=k(this.tokenBucket),this.executeRestRequest=function(t,i="GET",s,r){let o=e(t,this.extend({method:i,headers:s,body:r,agent:this.agent||null,timeout:this.timeout},this.fetchOptions)).catch(e=>{if(a)throw new P([this.id,i,t,e.type,e.message].join(" "));throw e}).then(e=>this.handleRestResponse(e,t,i,s,r));return O(this.timeout,o).catch(e=>{if(e instanceof x)throw new F(this.id+" "+i+" "+t+" request timed out ("+this.timeout+" ms)");throw e})}}defineRestApi(e,t,i={}){for(const s of Object.keys(e))for(const r of Object.keys(e[s])){let a=e[s][r];for(let e=0;e<a.length;e++){let o=a[e].trim(),n=o.split(/[^a-zA-Z0-9]/),d=r.toUpperCase(),c=r.toLowerCase(),h=this.capitalize(c),l=n.map(this.capitalize).join(""),u=n.map(e=>e.trim().toLowerCase()).filter(e=>e.length>0).join("_"),p=s+h+this.capitalize(l),m=s+"_"+c+"_"+u;"suffixes"in i&&("camelcase"in i.suffixes&&(p+=i.suffixes.camelcase),"underscore"in i.suffixes&&(m+=i.suffixes.underscore)),"underscore_suffix"in i&&(m+=i.underscoreSuffix),"camelcase_suffix"in i&&(p+=i.camelcaseSuffix);let f=async e=>this[t](o,s,d,e||{});this[p]=f,this[m]=f}}}fetch(e,t="GET",i,s){return a&&this.userAgent&&("string"==typeof this.userAgent?i=c({"User-Agent":this.userAgent},i):"object"==typeof this.userAgent&&"User-Agent"in this.userAgent&&(i=c(this.userAgent,i))),"function"==typeof this.proxy?(e=this.proxy(e),a&&(i=c({Origin:this.origin},i))):"string"==typeof this.proxy&&(this.proxy.length&&a&&(i=c({Origin:this.origin},i)),e=this.proxy+e),i=c(this.headers,i),this.verbose&&console.log("fetch:\n",this.id,t,e,"\nRequest:\n",i,"\n",s,"\n"),this.executeRestRequest(e,t,i,s)}async fetch2(e,t="public",i="GET",s={},r,a){this.enableRateLimit&&await this.throttle();let o=this.sign(e,t,i,s,r,a);return this.fetch(o.url,o.method,o.headers,o.body)}request(e,t="public",i="GET",s={},r,a){return this.fetch2(e,t,i,s,r,a)}parseJson(e,t,i,s){try{return t.length>0?JSON.parse(t):{}}catch(r){this.verbose&&console.log("parseJson:\n",this.id,s,i,e.status,"error",r,"response body:\n'"+t+"'\n");let a=void 0,o=t.match(/<title>([^<]+)/i);o&&(a=o[1].trim());let n=t.match(/offline|busy|retry|wait|unavailable|maintain|maintenance|maintenancing/i),d=t.match(/cloudflare|incapsula|overload|ddos/i);if(r instanceof SyntaxError){let t=P,r="not accessible from this location at the moment";throw n&&(r="offline, on maintenance or unreachable from this location at the moment"),d&&(t=M),new t([this.id,s,i,e.status,a,r].join(" "))}throw r}}handleErrors(e,t,i,s,r,a,o){}defaultErrorHandler(e,t,i,s){const{status:r,statusText:a}=e;if(r>=200&&r<=299)return;let o=void 0,n=t,d=t.match(/<title>([^<]+)/i);if(d&&(n=d[1].trim()),[418,429].includes(r))o=M;else if([404,409,500,501,502,520,521,522,525].includes(r))o=P;else if([400,403,405,503,530].includes(r)){t.match(/cloudflare|incapsula/i)?o=M:(o=P,n+=" (possible reasons: "+["invalid API keys","bad or old nonce","exchange is down or offline","on maintenance","DDoS protection","rate-limiting"].join(", ")+")")}else o=[408,504].includes(r)?F:[401,511].includes(r)?E:B;throw new o([this.id,s,i,r,a,n].join(" "))}handleRestResponse(e,t,i="GET",s,r){return e.text().then(s=>{let r=this.parseJsonResponse&&!this.skipJsonOnStatusCodes.includes(e.status),a=r?this.parseJson(e,s,t,i):void 0,o={};e.headers.forEach((e,t)=>{t=t.split("-").map(e=>g(e)).join("-"),o[t]=e}),this.last_response_headers=o,this.last_http_response=s,this.last_json_response=a,this.verbose&&console.log("handleRestResponse:\n",this.id,i,t,e.status,e.statusText,"\nResponse:\n",o,"\n",s,"\n");const n=[e.status,e.statusText,t,i,o,s,a];return this.handleErrors(...n),this.defaultErrorHandler(e,s,t,i),r?a:s})}setMarkets(e,t){let i=Object.values(e).map(e=>d({limits:this.limits,precision:this.precision},this.fees.trading,e));if(this.markets=d(this.markets,u(i,"symbol")),this.marketsById=u(e,"id"),this.markets_by_id=this.marketsById,this.symbols=Object.keys(this.markets).sort(),this.ids=Object.keys(this.markets_by_id).sort(),t)this.currencies=d(t,this.currencies);else{const e=i.filter(e=>"base"in e).map(e=>({id:e.baseId||e.base,numericId:void 0!==e.baseNumericId?e.baseNumericId:void 0,code:e.base,precision:e.precision?e.precision.base||e.precision.amount:8})),t=i.filter(e=>"quote"in e).map(e=>({id:e.quoteId||e.quote,numericId:void 0!==e.quoteNumericId?e.quoteNumericId:void 0,code:e.quote,precision:e.precision?e.precision.quote||e.precision.price:8})),s=e.concat(t),r=m(s,"code"),a=Object.keys(r).map(e=>r[e].reduce((e,t)=>e.precision>t.precision?e:t,r[e][0])),o=p(h(a),"code");this.currencies=d(u(o,"code"),this.currencies)}return this.currencies_by_id=u(this.currencies,"id"),this.markets}async loadMarkets(e=!1){if(!e&&this.markets)return this.markets_by_id?this.markets:this.setMarkets(this.markets);const t=await this.fetchMarkets();let i=void 0;return this.has.fetchCurrencies&&(i=await this.fetchCurrencies()),this.setMarkets(t,i)}fetchBidsAsks(e,t={}){throw new I(this.id+" fetchBidsAsks not supported yet")}async fetchOHLCVC(e,t="1m",i,s,r={}){if(!this.has.fetchTrades)throw new I(this.id+" fetchOHLCV() not supported yet");await this.loadMarkets();let a=await this.fetchTrades(e,i,s,r);return _(a,t,i,s)}async fetchOHLCV(e,t="1m",i,s,r={}){if(!this.has.fetchTrades)throw new I(this.id+" fetchOHLCV() not supported yet");await this.loadMarkets();let a=await this.fetchTrades(e,i,s,r);return _(a,t,i,s).map(e=>e.slice(0,-1))}convertTradingViewToOHLCV(e){let t=[];for(let i=0;i<e.t.length;i++)t.push([1e3*e.t[i],e.o[i],e.h[i],e.l[i],e.c[i],e.v[i]]);return t}convertOHLCVToTradingView(e){let t={t:[],o:[],h:[],l:[],c:[],v:[]};for(let i=0;i<e.length;i++)t.t.push(parseInt(e[i][0]/1e3)),t.o.push(e[i][1]),t.h.push(e[i][2]),t.l.push(e[i][3]),t.c.push(e[i][4]),t.v.push(e[i][5]);return t}fetchTickers(e,t={}){throw new I(this.id+" fetchTickers not supported yet")}purgeCachedOrders(e){const t=Object.values(this.orders).filter(t=>"open"===t.status||t.timestamp>=e);return this.orders=u(t,"id"),this.orders}fetchOrder(e,t,i={}){throw new I(this.id+" fetchOrder not supported yet")}fetchOrders(e,t,i,s={}){throw new I(this.id+" fetchOrders not supported yet")}fetchOpenOrders(e,t,i,s={}){throw new I(this.id+" fetchOpenOrders not supported yet")}fetchClosedOrders(e,t,i,s={}){throw new I(this.id+" fetchClosedOrders not supported yet")}fetchMyTrades(e,t,i,s={}){throw new I(this.id+" fetchMyTrades not supported yet")}fetchCurrencies(){throw new I(this.id+" fetchCurrencies not supported yet")}fetchMarkets(){return new Promise((e,t)=>e(Object.values(this.markets)))}async fetchOrderStatus(e,t){return(await this.fetchOrder(e,t)).status}account(){return{free:0,used:0,total:0}}commonCurrencyCode(e){return this.substituteCommonCurrencyCodes?this.safeString(this.commonCurrencies,e,e):e}currencyId(e){let t={},i=Object.keys(this.commonCurrencies);for(let s=0;s<i.length;s++){let e=i[s];t[this.commonCurrencies[e]]=e}return this.safeString(t,e,e)}currency(e){if(void 0===this.currencies)throw new B(this.id+" currencies not loaded");if("string"==typeof e&&e in this.currencies)return this.currencies[e];throw new B(this.id+" does not have currency code "+e)}findMarket(e){if(void 0===this.markets)throw new B(this.id+" markets not loaded");if("string"==typeof e){if(e in this.markets_by_id)return this.markets_by_id[e];if(e in this.markets)return this.markets[e]}return e}findSymbol(e,t){return void 0===t&&(t=this.findMarket(e)),"object"==typeof t?t.symbol:e}market(e){if(void 0===this.markets)throw new B(this.id+" markets not loaded");if("string"==typeof e&&e in this.markets)return this.markets[e];throw new B(this.id+" does not have market symbol "+e)}marketId(e){let t=this.market(e);return void 0!==t?t.id:e}marketIds(e){return e.map(e=>this.marketId(e))}symbol(e){return this.market(e).symbol||e}extractParams(e){let t=/{([\w-]+)}/g,i=[],s=t.exec(e);for(;s;)i.push(s[1]),s=t.exec(e);return i}implodeParams(e,t){for(let i in t)e=e.replace("{"+i+"}",t[i]);return e}url(e,t={}){let i=this.implodeParams(e,t),s=this.omit(t,this.extractParams(e));return Object.keys(s).length&&(i+="?"+this.urlencode(s)),i}parseBidAsk(e,t=0,i=1){return[parseFloat(e[t]),parseFloat(e[i])]}parseBidsAsks(e,t=0,i=1){return Object.values(e||[]).map(e=>this.parseBidAsk(e,t,i))}async fetchL2OrderBook(e,t,i={}){let s=await this.fetchOrderBook(e,t,i);return c(s,{bids:p(f(s.bids),0,!0),asks:p(f(s.asks),0)})}parseOrderBook(e,t,i="bids",s="asks",r=0,a=1){return{bids:p(i in e?this.parseBidsAsks(e[i],r,a):[],0,!0),asks:p(s in e?this.parseBidsAsks(e[s],r,a):[],0),timestamp:t,datetime:void 0!==t?this.iso8601(t):void 0,nonce:void 0}}getCurrencyUsedOnOpenOrders(e){return Object.values(this.orders).filter(e=>"open"===e.status).reduce((t,i)=>{let s=i.symbol,r=this.markets[s],a=i.remaining;return e===r.base&&"sell"===i.side?t+a:e===r.quote&&"buy"===i.side?t+i.price*a:t},0)}parseBalance(e){return Object.keys(this.omit(e,"info")).forEach(t=>{if(void 0===e[t].used)if(this.dontGetUsedBalanceFromStaleCache&&"open_orders"in e.info){const i=e.info.open_orders;Object.values(this.orders).filter(e=>"open"===e.status).length===i&&(e[t].used=this.getCurrencyUsedOnOpenOrders(t),e[t].total=e[t].used+e[t].free)}else e[t].used=this.getCurrencyUsedOnOpenOrders(t),e[t].total=e[t].used+e[t].free;["free","used","total"].forEach(i=>{e[i]=e[i]||{},e[i][t]=e[t][i]})}),e}async fetchPartialBalance(e,t={}){return(await this.fetchBalance(t))[e]}fetchFreeBalance(e={}){return this.fetchPartialBalance("free",e)}fetchUsedBalance(e={}){return this.fetchPartialBalance("used",e)}fetchTotalBalance(e={}){return this.fetchPartialBalance("total",e)}async loadTradingLimits(e,t=!1,i={}){if(this.has.fetchTradingLimits&&(t||!("limitsLoaded"in this.options))){let t=(await this.fetchTradingLimits(e)).limits,i=Object.keys(t);for(let e=0;e<i.length;e++){let s=i[e];this.markets[s]=this.deepExtend(this.markets[s],{limits:t[s]})}this.options.limitsLoaded=this.milliseconds()}return this.markets}filterBySinceLimit(e,t,i){return void 0!==t&&null!==t&&(e=e.filter(e=>e.timestamp>=t)),void 0!==i&&null!==i&&(e=e.slice(0,i)),e}filterBySymbolSinceLimit(e,t,i,s){const r=void 0!==t&&null!==t,a=void 0!==i&&null!==i;return(r||a)&&(e=Object.values(e).filter(e=>(!r||e.symbol===t)&&(!a||e.timestamp>=i))),void 0!==s&&null!==s&&(e=Object.values(e).slice(0,s)),e}filterByArray(e,t,i,s=!0){if(e=Object.values(e),void 0===i||null===i)return s?u(e,t):e;let r=[];for(let a=0;a<e.length;a++)i.includes(e[a][t])&&r.push(e[a]);return s?u(r,t):r}parseTrades(e,t,i,s){let r=Object.values(e||[]).map(e=>this.parseTrade(e,t));r=p(r,"timestamp");let a=void 0!==t?t.symbol:void 0;return this.filterBySymbolSinceLimit(r,a,i,s)}parseOrders(e,t,i,s){let r=Object.values(e).map(e=>this.parseOrder(e,t));r=p(r,"timestamp");let a=void 0!==t?t.symbol:void 0;return this.filterBySymbolSinceLimit(r,a,i,s)}filterBySymbol(e,t){return void 0!==t?e.filter(e=>e.symbol===t):e}parseOHLCV(e,t,i="1m",s,r){return Array.isArray(e)?e.slice(0,6):e}parseOHLCVs(e,t,i="1m",s,r){e=Object.values(e);let a=[];for(let o=0;o<e.length&&!(r&&a.length>=r);o++){let n=this.parseOHLCV(e[o],t,i,s,r);s&&n[0]<s||a.push(n)}return a}editLimitBuyOrder(e,t,...i){return this.editLimitOrder(e,t,"buy",...i)}editLimitSellOrder(e,t,...i){return this.editLimitOrder(e,t,"sell",...i)}editLimitOrder(e,t,...i){return this.editOrder(e,t,"limit",...i)}async editOrder(e,t,...i){if(!this.enableRateLimit)throw new B(this.id+" editOrder() requires enableRateLimit = true");return await this.cancelOrder(e,t),this.createOrder(t,...i)}createLimitOrder(e,...t){return this.createOrder(e,"limit",...t)}createMarketOrder(e,...t){return this.createOrder(e,"market",...t)}createLimitBuyOrder(e,...t){return this.createOrder(e,"limit","buy",...t)}createLimitSellOrder(e,...t){return this.createOrder(e,"limit","sell",...t)}createMarketBuyOrder(e,t,i={}){return this.createOrder(e,"market","buy",t,void 0,i)}createMarketSellOrder(e,t,i={}){return this.createOrder(e,"market","sell",t,void 0,i)}costToPrecision(e,t){return parseFloat(t).toFixed(this.markets[e].precision.price)}priceToPrecision(e,t){return parseFloat(t).toFixed(this.markets[e].precision.price)}amountToPrecision(e,t){return this.truncate(t,this.markets[e].precision.amount)}amountToString(e,t){return this.truncate_to_string(t,this.markets[e].precision.amount)}amountToLots(e,t){const i=this.markets[e].lot;return this.amountToPrecision(e,Math.floor(t/i)*i)}feeToPrecision(e,t){return parseFloat(t).toFixed(this.markets[e].precision.price)}calculateFee(e,t,i,s,r,a="taker",o={}){let n=this.markets[e],d=n[a],c=parseFloat(this.costToPrecision(e,s*r));return{type:a,currency:n.quote,rate:d,cost:parseFloat(this.feeToPrecision(e,d*c))}}mdy(e,t="-"){t=t||"";let i=new Date(e),s=(i.getUTCFullYear().toString(),i.getUTCMonth()+1),r=i.getUTCDate();return(s=s<10?"0"+s:s.toString())+t+(r=r<10?"0"+r:r.toString())+t+y}ymd(e,t="-"){t=t||"";let i=new Date(e),s=i.getUTCFullYear().toString(),r=i.getUTCMonth()+1,a=i.getUTCDate();return s+t+(r=r<10?"0"+r:r.toString())+t+(a=a<10?"0"+a:a.toString())}ymdhms(e,t=" "){let i=new Date(e),s=i.getUTCFullYear(),r=i.getUTCMonth()+1,a=i.getUTCDate(),o=i.getUTCHours(),n=i.getUTCMinutes(),d=i.getUTCSeconds();return s+"-"+(r=r<10?"0"+r:r)+"-"+(a=a<10?"0"+a:a)+t+(o=o<10?"0"+o:o)+":"+(n=n<10?"0"+n:n)+":"+(d=d<10?"0"+d:d)}}},789:function(e,t,i){"use strict";const{isString:s,isNumber:r}=i(796),{max:a}=Math,o={ROUND:0,TRUNCATE:1,DECIMAL_PLACES:0,SIGNIFICANT_DIGITS:1,NO_PADDING:0,PAD_WITH_ZERO:1};function n(e){if(s(e))return e;if(Math.abs(e)<1){const t=e.toString(),i=parseInt(t.split("e-")[1]),s="-"===t[0];i&&(e*=Math.pow(10,i-1),e=(s?"-":"")+"0."+new Array(i).join("0")+e.toString().substring(s?3:2))}else{let t=parseInt(e.toString().split("+")[1]);t>20&&(t-=20,e/=Math.pow(10,t),e+=new Array(t+1).join("0"))}return e.toString()}const d=[],c=(e,t=0)=>{if(e=n(e),t>0){const i=d[t]||(d[t]=new RegExp("([-]*\\d+\\.\\d{"+t+"})(\\d)")),[,s]=e.toString().match(i)||[null,e];return s.toString()}return parseInt(e).toString()};e.exports={numberToString:n,precisionFromString:function(e){const t=e.replace(/0+$/g,"").split(".");return t.length>1?t[1].length:0},decimalToPrecision:(e,t,i,s=0,r=0)=>{if(i<0)throw new Error("negative precision is not yet supported");const o=n(e),d="-"===o[0],c=d?1:0,h=o.length;for(var l=0;l<h&&"."!==o[l];l++);const u=l<o.length,p=new Uint8Array(h-c+(u?0:1));p[0]=48;let m=p.length,f=-1,y=-1;for(var b=1,w=c;w<h;w++,b++){const e=o.charCodeAt(w);if(46===e)m=b--;else{if(e<48||e>57)throw new Error(`${o}: invalid number (contains an illegal character '${o[b-1]}')`);p[b]=e,48!==e&&f<0&&(f=b)}}f<0&&(f=1);let v=0===s?m:f,k=v+i;y=-1;let g=!0;for(let a=p.length-1,n=0;a>=0;a--){let e=p[a];0!==a?(e+=n,a>=v+i&&(e=0===t&&e>=53&&(53!==e||!n)?58:48),e>57?(e=48,n=1):n=0):n&&(e=49),p[a]=e,48!==e&&(g=!1,f=a,y=y<0?a+1:y)}1===s&&(k=(v=f)+i);const T=f>=m||g?m-1:f,C=y<m?m:y,O=d?1:0,x=O+(m-T),_=a(C-m,0),B=C-T,S=a((0===r?B:k-T)-B,0),I=x+1+_,E=I+S,M=_+S===0,F=new Uint8Array(x+(M?0:1)+_+S);for(d&&(F[0]=45),b=O,w=T;b<x;b++,w++)F[b]=p[w];for(M||(F[x]=46),b=x+1,w=m;b<I;b++,w++)F[b]=p[w];for(b=I;b<E;b++)F[b]=48;return String.fromCharCode(...F)},truncate_to_string:c,truncate:(e,t=0)=>parseFloat(c(e,t)),precisionConstants:o,ROUND:0,TRUNCATE:1,DECIMAL_PLACES:0,SIGNIFICANT_DIGITS:1,NO_PADDING:0,PAD_WITH_ZERO:1}},790:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"foxbit",name:"FoxBit",countries:["BR"],has:{CORS:!1,createMarketOrder:!1},rateLimit:1e3,version:"v1",urls:{logo:"https://user-images.githubusercontent.com/1294454/27991413-11b40d42-647f-11e7-91ee-78ced874dd09.jpg",api:{public:"https://api.blinktrade.com/api",private:"https://api.blinktrade.com/tapi"},www:"https://foxbit.exchange",doc:"https://blinktrade.com/docs"},comment:"Blinktrade API",api:{public:{get:["{currency}/ticker","{currency}/orderbook","{currency}/trades"]},private:{post:["D","F","U2","U4","U6","U18","U24","U26","U30","U34","U70"]}},markets:{"BTC/VEF":{id:"BTCVEF",symbol:"BTC/VEF",base:"BTC",quote:"VEF",brokerId:1,broker:"SurBitcoin"},"BTC/VND":{id:"BTCVND",symbol:"BTC/VND",base:"BTC",quote:"VND",brokerId:3,broker:"VBTC"},"BTC/BRL":{id:"BTCBRL",symbol:"BTC/BRL",base:"BTC",quote:"BRL",brokerId:4,broker:"FoxBit"},"BTC/PKR":{id:"BTCPKR",symbol:"BTC/PKR",base:"BTC",quote:"PKR",brokerId:8,broker:"UrduBit"},"BTC/CLP":{id:"BTCCLP",symbol:"BTC/CLP",base:"BTC",quote:"CLP",brokerId:9,broker:"ChileBit"}},options:{brokerId:"4"}})}async fetchBalance(e={}){let t=await this.privatePostU2({BalanceReqID:this.nonce()}),i=this.safeValue(t.Responses,this.options.brokerId),s={info:t};if(void 0!==i){let e=Object.keys(this.currencies_by_id);for(let t=0;t<e.length;t++){let r=e[t],a=this.currencies_by_id[r].code;if(r in i){let e=this.account();e.used=1e-8*parseFloat(i[r+"_locked"]),e.total=1e-8*parseFloat(i[r]),e.free=e.total-e.used,s[a]=e}}}return this.parseBalance(s)}async fetchOrderBook(e,t,i={}){let s=this.market(e),r=await this.publicGetCurrencyOrderbook(this.extend({currency:s.quote,crypto_currency:s.base},i));return this.parseOrderBook(r)}async fetchTicker(e,t={}){let i=this.market(e),s=await this.publicGetCurrencyTicker(this.extend({currency:i.quote,crypto_currency:i.base},t)),r=this.milliseconds(),a="vol_"+i.quote.toLowerCase(),o=this.safeFloat(s,"last");return{symbol:e,timestamp:r,datetime:this.iso8601(r),high:this.safeFloat(s,"high"),low:this.safeFloat(s,"low"),bid:this.safeFloat(s,"buy"),bidVolume:void 0,ask:this.safeFloat(s,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:o,last:o,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(s,"vol"),quoteVolume:parseFloat(s[a]),info:s}}parseTrade(e,t){let i=1e3*e.date;return{id:this.safeString(e,"tid"),info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:e.side,price:e.price,amount:e.amount}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetCurrencyTrades(this.extend({currency:r.quote,crypto_currency:r.base},s));return this.parseTrades(a,r,t,i)}async createOrder(e,t,i,s,a,o={}){if("market"===t)throw new r(this.id+" allows limit orders only");let n=this.market(e),d="buy"===i?"1":"2",c={ClOrdID:this.nonce(),Symbol:n.id,Side:d,OrdType:"2",Price:a,OrderQty:s,BrokerID:n.brokerId},h=await this.privatePostD(this.extend(c,o));return{info:h,id:this.indexBy(h.Responses,"MsgType")[8].OrderID}}async cancelOrder(e,t,i={}){return await this.privatePostF(this.extend({ClOrdID:e},i))}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t]+"/"+this.version+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials();let t=this.nonce().toString(),i=this.extend({MsgType:e},n);a=this.json(i),r={APIKey:this.apiKey,Nonce:t,Signature:this.hmac(this.encode(t),this.encode(this.secret)),"Content-Type":"application/json"}}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("Status"in n&&200!==n.Status)throw new r(this.id+" "+this.json(n));return n}}},791:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,ExchangeNotAvailable:a,InsufficientFunds:o,OrderNotFound:n,DDoSProtection:d,InvalidOrder:c,AuthenticationError:h}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"liqui",name:"Liqui",countries:["UA"],rateLimit:3e3,version:"3",userAgent:this.userAgents.chrome,has:{CORS:!1,createMarketOrder:!1,fetchOrderBooks:!0,fetchOrder:!0,fetchOrders:"emulated",fetchOpenOrders:!0,fetchClosedOrders:"emulated",fetchTickers:!0,fetchMyTrades:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27982022-75aea828-63a0-11e7-9511-ca584a8edd74.jpg",api:{public:"https://api.liqui.io/api",private:"https://api.liqui.io/tapi"},www:"https://liqui.io",doc:"https://liqui.io/api",fees:"https://liqui.io/fee"},api:{public:{get:["info","ticker/{pair}","depth/{pair}","trades/{pair}"]},private:{post:["getInfo","Trade","ActiveOrders","OrderInfo","CancelOrder","TradeHistory","CoinDepositAddress","WithdrawCoin","CreateCoupon","RedeemCoupon"]}},fees:{trading:{maker:.001,taker:.0025},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{}}},commonCurrencies:{DSH:"DASH"},exceptions:{803:c,804:c,805:c,806:c,807:c,831:o,832:o,833:n}})}calculateFee(e,t,i,s,r,a="taker",o={}){let n=this.markets[e],d="quote",c=n[a],h=parseFloat(this.costToPrecision(e,s*c));return"sell"===i?h*=r:d="base",{type:a,currency:n[d],rate:c,cost:h}}getBaseQuoteFromMarketId(e){let t=e.toUpperCase(),[i,s]=t.split("_");return[i=this.commonCurrencyCode(i),s=this.commonCurrencyCode(s)]}async fetchMarkets(){let e=(await this.publicGetInfo()).pairs,t=Object.keys(e),i=[];for(let s=0;s<t.length;s++){let r=t[s],a=e[r],[o,n]=this.getBaseQuoteFromMarketId(r),d=o+"/"+n,c={amount:this.safeInteger(a,"decimal_places"),price:this.safeInteger(a,"decimal_places")},h={amount:{min:this.safeFloat(a,"min_amount"),max:this.safeFloat(a,"max_amount")},price:{min:this.safeFloat(a,"min_price"),max:this.safeFloat(a,"max_price")},cost:{min:this.safeFloat(a,"min_total")}},l=0===this.safeInteger(a,"hidden");i.push({id:r,symbol:d,base:o,quote:n,active:l,taker:a.fee/100,precision:c,limits:h,info:a})}return i}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privatePostGetInfo()).return,i={info:t},s=t.funds,r=Object.keys(s);for(let a=0;a<r.length;a++){let e=r[a],o=e.toUpperCase();o=this.commonCurrencyCode(o);let n=void 0,d=void 0;0===t.open_orders&&(n=s[e],d=0);let c={free:s[e],used:d,total:n};i[o]=c}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),a={pair:s.id};void 0!==t&&(a.limit=t);let o=await this.publicGetDepthPair(this.extend(a,i));if(!(s.id in o))throw new r(this.id+" "+s.symbol+" order book is empty or not available");let n=o[s.id];return this.parseOrderBook(n)}async fetchOrderBooks(e,t={}){await this.loadMarkets();let i=void 0;if(void 0===e){if((i=this.ids.join("-")).length>2048){let e=this.ids.length;throw new r(this.id+" has "+e.toString()+" symbols exceeding max URL length, you are required to specify a list of symbols in the first argument to fetchOrderBooks")}}else i=(i=this.marketIds(e)).join("-");let s=await this.publicGetDepthPair(this.extend({pair:i},t)),a={};i=Object.keys(s);for(let r=0;r<i.length;r++){let e=i[r],t=e;if(e in this.markets_by_id){t=this.markets_by_id[e].symbol}a[t]=this.parseOrderBook(s[e])}return a}parseTicker(e,t){let i=1e3*e.updated,s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeFloat(e,"avg"),baseVolume:this.safeFloat(e,"vol_cur"),quoteVolume:this.safeFloat(e,"vol"),info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=void 0;if(void 0===e){if((i=this.ids.join("-")).length>2048){let e=this.ids.length;throw new r(this.id+" has "+e.toString()+" symbols exceeding max URL length, you are required to specify a list of symbols in the first argument to fetchTickers")}}else i=(i=this.marketIds(e)).join("-");let s=await this.publicGetTickerPair(this.extend({pair:i},t)),a={},o=Object.keys(s);for(let r=0;r<o.length;r++){let e=o[r],t=s[e],i=e,n=void 0;e in this.markets_by_id&&(i=(n=this.markets_by_id[e]).symbol),a[i]=this.parseTicker(t,n)}return a}async fetchTicker(e,t={}){return(await this.fetchTickers([e],t))[e]}parseTrade(e,t){let i=1e3*parseInt(e.timestamp),s=e.type;"ask"===s&&(s="sell"),"bid"===s&&(s="buy");let r=this.safeFloat(e,"price");"rate"in e&&(r=this.safeFloat(e,"rate"));let a=this.safeString(e,"tid");"trade_id"in e&&(a=this.safeString(e,"trade_id"));let o=this.safeString(e,this.getOrderIdKey());if("pair"in e){let i=e.pair;t=this.markets_by_id[i]}let n=void 0;t&&(n=t.symbol);let d=e.amount,c=this.safeValue(e,"is_your_order"),h="taker";void 0!==c&&c&&(h="maker");let l=this.calculateFee(n,"limit",s,d,r,h);return{id:a,order:o,timestamp:i,datetime:this.iso8601(i),symbol:n,type:"limit",side:s,price:r,amount:d,fee:l,info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pair:r.id};void 0!==i&&(a.limit=i);let o=await this.publicGetTradesPair(this.extend(a,s));return this.parseTrades(o[r.id],r,t,i)}async createOrder(e,t,i,s,a,o={}){if("market"===t)throw new r(this.id+" allows limit orders only");await this.loadMarkets();let n={pair:this.market(e).id,type:i,amount:this.amountToPrecision(e,s),rate:this.priceToPrecision(e,a)};a=parseFloat(a),s=parseFloat(s);let d=await this.privatePostTrade(this.extend(n,o)),c=void 0,h="open",l=0,u=s;"return"in d&&("0"===(c=this.safeString(d.return,this.getOrderIdKey()))&&(c=this.safeString(d.return,"init_order_id"),h="closed"),l=this.safeFloat(d.return,"received",0),u=this.safeFloat(d.return,"remains",s));let p=this.milliseconds(),m={id:c,timestamp:p,datetime:this.iso8601(p),lastTradeTimestamp:void 0,status:h,symbol:e,type:t,side:i,price:a,cost:a*l,amount:s,remaining:u,filled:l,fee:void 0};return this.orders[c]=m,this.extend({info:d},m)}getOrderIdKey(){return"order_id"}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=void 0,r={};return r[this.getOrderIdKey()]=e,s=await this.privatePostCancelOrder(this.extend(r,i)),e in this.orders&&(this.orders[e].status="canceled"),s}parseOrderStatus(e){let t={0:"open",1:"closed",2:"canceled",3:"canceled"};return e in t?t[e]:e}parseOrder(e,t){let i=e.id.toString(),s=this.safeString(e,"status");"undefined"!==s&&(s=this.parseOrderStatus(s));let r=1e3*parseInt(e.timestamp_created),a=void 0;t||(t=this.markets_by_id[e.pair]),t&&(a=t.symbol);let o=void 0,n=void 0,d=this.safeFloat(e,"rate"),c=void 0,h=void 0;"start_amount"in e?(n=this.safeFloat(e,"start_amount"),o=this.safeFloat(e,"amount")):(o=this.safeFloat(e,"amount"),i in this.orders&&(n=this.orders[i].amount)),void 0!==n&&void 0!==o&&(h=d*(c=n-o));return{info:e,id:i,symbol:a,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,type:"limit",side:e.type,price:d,cost:h,amount:n,remaining:o,filled:c,status:s,fee:void 0}}parseOrders(e,t,i,s){let r=Object.keys(e),a=[];for(let o=0;o<r.length;o++){let i=r[o],s=e[i],n=this.extend(s,{id:i});a.push(this.parseOrder(n,t))}return this.filterBySinceLimit(a,i,s)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostOrderInfo(this.extend({order_id:parseInt(e)},i));e=e.toString();let r=this.parseOrder(this.extend({id:e},s.return[e])),a=e in this.orders?this.orders[e]:{};return this.orders[e]=this.extend(a,r),this.orders[e]}updateCachedOrders(e,t){for(let r=0;r<e.length;r++){const t=e[r].id;this.orders[t]=e[r]}let i=this.indexBy(e,"id"),s=Object.keys(this.orders);for(let r=0;r<s.length;r++){let e=s[r],a=this.orders[e];if(!(e in i)){if(void 0!==t&&t!==a.symbol)continue;"open"===a.status&&(void 0===(a=this.extend(a,{status:"closed",cost:void 0,filled:a.amount,remaining:0})).cost&&void 0!==a.filled&&(a.cost=a.filled*a.price),this.orders[e]=a)}}return this.toArray(this.orders)}async fetchOrders(e,t,i,s={}){if("fetchOrdersRequiresSymbol"in this.options&&this.options.fetchOrdersRequiresSymbol&&void 0===e)throw new r(this.id+" fetchOrders requires a symbol argument");await this.loadMarkets();let a={};if(void 0!==e){let t=this.market(e);a.pair=t.id}let o=await this.privatePostActiveOrders(this.extend(a,s)),n=[];"return"in o&&(n=this.parseOrders(o.return,void 0));let d=this.updateCachedOrders(n,e),c=this.filterBySymbol(d,e);return this.filterBySinceLimit(c,t,i)}async fetchOpenOrders(e,t,i,s={}){let r=await this.fetchOrders(e,t,i,s);return this.filterBy(r,"status","open")}async fetchClosedOrders(e,t,i,s={}){let r=await this.fetchOrders(e,t,i,s);return this.filterBy(r,"status","closed")}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r=void 0,a={};void 0!==e&&(r=this.market(e),a.pair=r.id),void 0!==i&&(a.count=parseInt(i)),void 0!==t&&(a.since=parseInt(t/1e3));let o=await this.privatePostTradeHistory(this.extend(a,s)),n=[];return"return"in o&&(n=o.return),this.parseTrades(n,r,t,i)}async withdraw(e,t,i,s,r={}){this.checkAddress(i),await this.loadMarkets();let a=await this.privatePostWithdrawCoin(this.extend({coinName:e,amount:parseFloat(t),address:i},r));return{info:a,id:a.return.tId}}signBodyWithSecret(e){return this.hmac(this.encode(e),this.encode(this.secret),"sha512")}getVersionString(){return"/"+this.version}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t],n=this.omit(s,this.extractParams(e));if("private"===t){this.checkRequiredCredentials();let t=this.nonce();a=this.urlencode(this.extend({nonce:t,method:e},n));let i=this.signBodyWithSecret(a);r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:i}}else"public"===t?(o+=this.getVersionString()+"/"+this.implodeParams(e,s),Object.keys(n).length&&(o+="?"+this.urlencode(n))):(o+="/"+this.implodeParams(e,s),"GET"===i?Object.keys(n).length&&(o+="?"+this.urlencode(n)):Object.keys(n).length&&(a=this.json(n),r={"Content-Type":"application/json"}));return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,o,n){if("string"==typeof n&&!(n.length<2||"{"!==n[0]&&"["!==n[0])){let e=JSON.parse(n);if("success"in e){let t=this.safeValue(e,"success",!1);if("string"==typeof t&&(t="true"===t||"1"===t),!t){const t=this.safeString(e,"code"),i=this.safeString(e,"error"),s=this.id+" "+this.json(e),o=this.exceptions;if(t in o)throw new o[t](s);throw"invalid api key"===i?new h(s):"invalid sign"===i?new h(s):"api key dont have trade permission"===i?new h(s):i.indexOf("invalid parameter")>=0?new c(s):"invalid order"===i?new c(s):"Requests too often"===i?new d(s):"not available"===i?new a(s):"data unavailable"===i?new a(s):"external service unavailable"===i?new a(s):new r(this.id+' unknown "error" value: '+this.json(e))}}}}}},792:function(e,t,i){var s;s=function(e){var t,i,s,r,a;return i=(t=e).lib,s=i.Base,r=i.WordArray,(a=t.x64={}).Word=s.extend({init:function(e,t){this.high=e,this.low=t}}),a.WordArray=s.extend({init:function(e,t){e=this.words=e||[],this.sigBytes=void 0!=t?t:8*e.length},toX32:function(){for(var e=this.words,t=e.length,i=[],s=0;s<t;s++){var a=e[s];i.push(a.high),i.push(a.low)}return r.create(i,this.sigBytes)},clone:function(){for(var e=s.clone.call(this),t=e.words=this.words.slice(0),i=t.length,r=0;r<i;r++)t[r]=t[r].clone();return e}}),e},e.exports=s(i(43))},793:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,DDoSProtection:a,InsufficientFunds:o,InvalidOrder:n,OrderNotFound:d,AuthenticationError:c}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"okcoinusd",name:"OKCoin USD",countries:["CN","US"],version:"v1",rateLimit:1e3,has:{CORS:!1,fetchOHLCV:!0,fetchOrder:!0,fetchOrders:!1,fetchOpenOrders:!0,fetchClosedOrders:!0,withdraw:!0,futures:!1},extension:".do",timeframes:{"1m":"1min","3m":"3min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","2h":"2hour","4h":"4hour","6h":"6hour","12h":"12hour","1d":"1day","3d":"3day","1w":"1week"},api:{web:{get:["spot/markets/currencies","spot/markets/products"]},public:{get:["depth","exchange_rate","future_depth","future_estimated_price","future_hold_amount","future_index","future_kline","future_price_limit","future_ticker","future_trades","kline","otcs","ticker","tickers","trades"]},private:{post:["account_records","batch_trade","borrow_money","borrow_order_info","borrows_info","cancel_borrow","cancel_order","cancel_otc_order","cancel_withdraw","funds_transfer","future_batch_trade","future_cancel","future_devolve","future_explosive","future_order_info","future_orders_info","future_position","future_position_4fix","future_trade","future_trades_history","future_userinfo","future_userinfo_4fix","lend_depth","order_fee","order_history","order_info","orders_info","otc_order_history","otc_order_info","repayment","submit_otc_order","trade","trade_history","trade_otc_order","wallet_info","withdraw","withdraw_info","unrepayments_info","userinfo"]}},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766791-89ffb502-5ee5-11e7-8a5b-c5950b68ac65.jpg",api:{web:"https://www.okcoin.com/v2",public:"https://www.okcoin.com/api",private:"https://www.okcoin.com/api"},www:"https://www.okcoin.com",doc:["https://www.okcoin.com/rest_getStarted.html","https://www.npmjs.com/package/okcoin.com"]},fees:{trading:{taker:.002,maker:.002}},exceptions:{10000:r,10001:a,10005:c,10006:c,10007:c,1002:o,1003:n,1004:n,1013:n,1027:n,1050:n,1217:n,10014:n,1009:d,1019:d,1051:d,10009:d,20015:d,10008:r},options:{marketBuyPrice:!1,defaultContractType:"this_week",warnOnFetchOHLCVLimitArgument:!0,fiats:["USD","CNY"],futures:{BCH:!0,BTC:!0,BTG:!0,EOS:!0,ETC:!0,ETH:!0,LTC:!0,NEO:!0,QTUM:!0,USDT:!0,XUC:!0}}})}async fetchMarkets(){let e=(await this.webGetSpotMarketsProducts()).data,t=[];for(let i=0;i<e.length;i++){let s=e[i].symbol,[r,a]=s.split("_"),o=r.toUpperCase(),n=a.toUpperCase(),d=this.commonCurrencyCode(o),c=this.commonCurrencyCode(n),h=d+"/"+c,l={amount:e[i].maxSizeDigit,price:e[i].maxPriceDigit},u=Math.pow(10,-l.amount),p=e[i].minTradeSize,m=Math.pow(10,-l.price),f=0!==e[i].online,y=e[i].baseCurrency,b=e[i].quoteCurrency,w=this.extend(this.fees.trading,{id:s,symbol:h,base:d,quote:c,baseId:r,quoteId:a,baseNumericId:y,quoteNumericId:b,info:e[i],type:"spot",spot:!0,future:!1,lot:u,active:f,precision:l,limits:{amount:{min:p,max:void 0},price:{min:m,max:void 0},cost:{min:p*m,max:void 0}}});if(t.push(w),this.has.futures&&w.base in this.options.futures){let e=this.options.fiats;for(let i=0;i<e.length;i++){const s=e[i],r=s.toLowerCase();t.push(this.extend(w,{quote:s,symbol:w.base+"/"+s,id:w.base.toLowerCase()+"_"+r,quoteId:r,type:"future",spot:!1,future:!0}))}}}return t}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r="publicGet",a={symbol:s.id};void 0!==t&&(a.size=t),s.future&&(r+="Future",a.contract_type=this.options.defaultContractType),r+="Depth";let o=await this[r](this.extend(a,i));return this.parseOrderBook(o)}parseTicker(e,t){let i=e.timestamp,s=void 0;if(void 0===t&&"symbol"in e){let i=e.symbol;i in this.markets_by_id&&(t=this.markets_by_id[i])}t&&(s=t.symbol);let r=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"vol"),quoteVolume:void 0,info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s="publicGet",a={symbol:i.id};i.future&&(s+="Future",a.contract_type=this.options.defaultContractType),s+="Ticker";let o=await this[s](this.extend(a,t)),n=this.safeValue(o,"ticker");if(void 0===n)throw new r(this.id+" fetchTicker returned an empty response: "+this.json(o));let d=this.safeInteger(o,"date");return void 0!==d&&(d*=1e3,n=this.extend(n,{timestamp:d})),this.parseTicker(n,i)}parseTrade(e,t){let i=void 0;return t&&(i=t.symbol),{info:e,timestamp:e.date_ms,datetime:this.iso8601(e.date_ms),symbol:i,id:e.tid.toString(),order:void 0,type:void 0,side:e.type,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"amount")}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a="publicGet",o={symbol:r.id};r.future&&(a+="Future",o.contract_type=this.options.defaultContractType),a+="Trades";let n=await this[a](this.extend(o,s));return this.parseTrades(n,r,t,i)}parseOHLCV(e,t,i="1m",s,r){let a=e.length>6?6:5;return[e[0],e[1],e[2],e[3],e[4],e[a]]}async fetchOHLCV(e,t="1m",i,s,a={}){await this.loadMarkets();let o=this.market(e),n="publicGet",d={symbol:o.id,type:this.timeframes[t]};if(o.future&&(n+="Future",d.contract_type=this.options.defaultContractType),n+="Kline",void 0!==s){if(this.options.warnOnFetchOHLCVLimitArgument)throw new r(this.id+' fetchOHLCV counts "limit" candles from current time backwards, therefore the "limit" argument for '+this.id+" is disabled. Set "+this.id+'.options["warnOnFetchOHLCVLimitArgument"] = false to suppress this warning message.');d.size=parseInt(s)}d.since=void 0!==i?i:this.milliseconds()-864e5;let c=await this[n](this.extend(d,a));return this.parseOHLCVs(c,o,t,i,s)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostUserinfo(),i=t.info.funds,s={info:t},r=Object.keys(this.currencies_by_id);for(let a=0;a<r.length;a++){let e=r[a],t=this.currencies_by_id[e].code,o=this.account();o.free=this.safeFloat(i.free,e,0),o.used=this.safeFloat(i.freezed,e,0),o.total=this.sum(o.free,o.used),s[t]=o}return this.parseBalance(s)}async createOrder(e,t,i,s,a,o={}){await this.loadMarkets();let n=this.market(e),d="privatePost",c={symbol:n.id,type:i};if(n.future)d+="Future",c=this.extend(c,{contract_type:this.options.defaultContractType,match_price:0,lever_rate:10,price:a,amount:s});else if("limit"===t)c.price=a,c.amount=s;else if(c.type+="_market","buy"===i){if(this.options.marketBuyPrice){if(void 0===a)throw new r(this.id+" market buy orders require a price argument (the amount you want to spend or the cost of the order) when this.options['marketBuyPrice'] is true.");c.price=a}else if(c.price=this.safeFloat(o,"cost"),!c.price)throw new r(this.id+" market buy orders require an additional cost parameter, cost = price * amount. If you want to pass the cost of the market order (the amount you want to spend) in the price argument (the default "+this.id+" behaviour), set this.options['marketBuyPrice'] = true. It will effectively suppress this warning exception as well.")}else c.amount=s;o=this.omit(o,"cost"),d+="Trade";let h=await this[d](this.extend(c,o)),l=this.milliseconds();return{info:h,id:h.order_id.toString(),timestamp:l,datetime:this.iso8601(l),lastTradeTimestamp:void 0,status:void 0,symbol:e,type:t,side:i,price:a,amount:s,filled:void 0,remaining:void 0,cost:void 0,trades:void 0,fee:void 0}}async cancelOrder(e,t,i={}){if(void 0===t)throw new r(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let s=this.market(t),a={symbol:s.id,order_id:e},o="privatePost";return s.future?(o+="FutureCancel",a.contract_type=this.options.defaultContractType):o+="CancelOrder",await this[o](this.extend(a,i))}parseOrderStatus(e){return-1===e?"canceled":0===e?"open":1===e?"open":2===e?"closed":3===e?"open":4===e?"canceled":e}parseOrderSide(e){return 1===e?"buy":2===e?"sell":3===e?"sell":4===e?"buy":e}parseOrder(e,t){let i=void 0,s=void 0;"type"in e&&("buy"===e.type||"sell"===e.type?(i=e.type,s="limit"):"buy_market"===e.type?(i="buy",s="market"):"sell_market"===e.type?(i="sell",s="market"):(i=this.parseOrderSide(e.type),("contract_name"in e||"lever_rate"in e)&&(s="margin")));let r=this.parseOrderStatus(e.status),a=void 0;void 0===t&&"symbol"in e&&e.symbol in this.markets_by_id&&(t=this.markets_by_id[e.symbol]),t&&(a=t.symbol);let o=void 0,n=this.getCreateDateField();n in e&&(o=e[n]);let d=this.safeFloat(e,"amount"),c=this.safeFloat(e,"deal_amount"),h=d-c;"market"===s&&(h=0);let l=this.safeFloat(e,"avg_price"),u=(l=this.safeFloat(e,"price_avg",l))*c;return{info:e,id:e.order_id.toString(),timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:void 0,symbol:a,type:s,side:i,price:e.price,average:l,cost:u,amount:d,filled:c,remaining:h,status:r,fee:void 0}}getCreateDateField(){return"create_date"}getOrdersField(){return"orders"}async fetchOrder(e,t,i={}){if(void 0===t)throw new r(this.id+" fetchOrder requires a symbol parameter");await this.loadMarkets();let s=this.market(t),a="privatePost",o={order_id:e,symbol:s.id};s.future&&(a+="Future",o.contract_type=this.options.defaultContractType),a+="OrderInfo";let n=await this[a](this.extend(o,i)),c=this.getOrdersField();if(n[c].length>0)return this.parseOrder(n[c][0]);throw new d(this.id+" order "+e+" not found")}async fetchOrders(e,t,i,s={}){if(void 0===e)throw new r(this.id+" fetchOrders requires a symbol parameter");await this.loadMarkets();let a=this.market(e),o="privatePost",n={symbol:a.id},d="order_id"in s;if(a.future){if(o+="FutureOrdersInfo",n.contract_type=this.options.defaultContractType,!d)throw new r(this.id+" fetchOrders() requires order_id param for futures market "+e+" (a string of one or more order ids, comma-separated)")}else{let t=void 0;if("type"in s)t=s.type;else{if(!("status"in s)){let t=d?"type":"status";throw new r(this.id+" fetchOrders() requires "+t+" param for spot market "+e+" (0 - for unfilled orders, 1 - for filled/canceled orders)")}t=s.status}d?(o+="OrdersInfo",n=this.extend(n,{type:t,order_id:s.order_id})):(o+="OrderHistory",n=this.extend(n,{status:t,current_page:1,page_length:200})),s=this.omit(s,["type","status"])}let c=await this[o](this.extend(n,s)),h=this.getOrdersField();return this.parseOrders(c[h],a,t,i)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({status:0},s))}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({status:1},s))}async withdraw(e,t,i,s,a={}){this.checkAddress(i),await this.loadMarkets();let o={symbol:this.currency(e).id+"_usd",withdraw_address:i,withdraw_amount:t,target:"address"},n=a;if(!("chargefee"in n))throw new r(this.id+" withdraw() requires a `chargefee` parameter");if(o.chargefee=n.chargefee,n=this.omit(n,"chargefee"),this.password?o.trade_pwd=this.password:"password"in n?(o.trade_pwd=n.password,n=this.omit(n,"password")):"trade_pwd"in n&&(o.trade_pwd=n.trade_pwd,n=this.omit(n,"trade_pwd")),!("trade_pwd"in o))throw new r(this.id+" withdraw() requires this.password set on the exchange instance or a password / trade_pwd parameter");let d=await this.privatePostWithdraw(this.extend(o,n));return{info:d,id:this.safeString(d,"withdraw_id")}}sign(e,t="public",i="GET",s={},r,a){let o="/";if("web"!==t&&(o+=this.version+"/"),o+=e,"web"!==t&&(o+=this.extension),"private"===t){this.checkRequiredCredentials();let e=this.keysort(this.extend({api_key:this.apiKey},s)),t=this.rawencode(e)+"&secret_key="+this.secret;e.sign=this.hash(this.encode(t)).toUpperCase(),a=this.urlencode(e),r={"Content-Type":"application/x-www-form-urlencoded"}}else Object.keys(s).length&&(o+="?"+this.urlencode(s));return{url:o=this.urls.api[t]+o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if(!(o.length<2)&&"{"===o[0]){let e=JSON.parse(o);if("error_code"in e){let t=this.safeString(e,"error_code"),i=this.id+" "+this.json(e);if(t in this.exceptions){throw new(0,this.exceptions[t])(i)}throw new r(i)}if("result"in e&&!e.result)throw new r(this.id+" "+this.json(e))}}}},794:function(e,t,i){"use strict";const s=i(788),{AuthenticationError:r,ExchangeError:a,ExchangeNotAvailable:o,InvalidOrder:n,OrderNotFound:d,InsufficientFunds:c}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"huobipro",name:"Huobi Pro",countries:["CN"],rateLimit:2e3,userAgent:this.userAgents.chrome39,version:"v1",accounts:void 0,accountsById:void 0,hostname:"api.huobi.pro",has:{CORS:!1,fetchDepositAddress:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchClosedOrders:!0,fetchOrder:!0,fetchOrders:!1,fetchTradingLimits:!0,withdraw:!0,fetchCurrencies:!0},timeframes:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"60min","1d":"1day","1w":"1week","1M":"1mon","1y":"1year"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766569-15aa7b9a-5edd-11e7-9e7f-44791f4ee49c.jpg",api:"https://api.huobi.pro",www:"https://www.huobi.pro",referral:"https://www.huobi.br.com/en-us/topic/invited/?invite_code=rwrd3",doc:"https://github.com/huobiapi/API_Docs/wiki/REST_api_reference",fees:"https://www.huobi.pro/about/fee/"},api:{market:{get:["history/kline","detail/merged","depth","trade","history/trade","detail"]},public:{get:["common/symbols","common/currencys","common/timestamp","common/exchange","settings/currencys"]},private:{get:["account/accounts","account/accounts/{id}/balance","order/orders/{id}","order/orders/{id}/matchresults","order/orders","order/matchresults","dw/withdraw-virtual/addresses","dw/deposit-virtual/addresses","query/deposit-withdraw","margin/loan-orders","margin/accounts/balance"],post:["order/orders/place","order/orders","order/orders/{id}/place","order/orders/{id}/submitcancel","order/orders/batchcancel","dw/balance/transfer","dw/withdraw/api/create","dw/withdraw-virtual/create","dw/withdraw-virtual/{id}/place","dw/withdraw-virtual/{id}/cancel","dw/transfer-in/margin","dw/transfer-out/margin","margin/orders","margin/orders/{id}/repay"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:.002,taker:.002}},exceptions:{"account-frozen-balance-insufficient-error":c,"invalid-amount":n,"order-limitorder-amount-min-error":n,"order-marketorder-amount-min-error":n,"order-limitorder-price-min-error":n,"order-orderstate-error":d,"order-queryorder-invalid":d,"order-update-error":o,"api-signature-check-failed":r},options:{createMarketBuyOrderRequiresPrice:!0,fetchMarketsMethod:"publicGetCommonSymbols",fetchBalanceMethod:"privateGetAccountAccountsIdBalance",createOrderMethod:"privatePostOrderOrdersPlace",language:"en-US"}})}async fetchTradingLimits(e,t={}){await this.loadMarkets();let i={},s={};void 0===e&&(e=this.symbols);for(let r=0;r<e.length;r++){let t=e[r],a=this.market(t),o=await this.publicGetCommonExchange(this.extend({symbol:a.id})),n=this.parseTradingLimits(o);i[t]=o,s[t]=n}return{limits:s,info:i}}parseTradingLimits(e,t,i={}){let s=e.data;if(void 0!==s)return{amount:{min:s["limit-order-must-greater-than"],max:s["limit-order-must-less-than"]}}}async fetchMarkets(){let e=this.options.fetchMarketsMethod,t=(await this[e]()).data;if(t.length<1)throw new a(this.id+" publicGetCommonSymbols returned empty response: "+this.json(t));let i=[];for(let s=0;s<t.length;s++){let e=t[s],r=e["base-currency"],a=e["quote-currency"],o=r.toUpperCase(),n=a.toUpperCase(),d=r+a,c=(o=this.commonCurrencyCode(o))+"/"+(n=this.commonCurrencyCode(n)),h={amount:e["amount-precision"],price:e["price-precision"]},l=Math.pow(10,-h.amount),u="OMG"===o?0:.002,p="OMG"===o?0:.002;i.push({id:d,symbol:c,base:o,quote:n,baseId:r,quoteId:a,lot:l,active:!0,precision:h,taker:p,maker:u,limits:{amount:{min:l,max:Math.pow(10,h.amount)},price:{min:Math.pow(10,-h.price),max:void 0},cost:{min:0,max:void 0}},info:e})}return i}parseTicker(e,t){let i=void 0;t&&(i=t.symbol);let s=this.milliseconds();"ts"in e&&(s=e.ts);let r=void 0,a=void 0,o=void 0,n=void 0;"bid"in e&&Array.isArray(e.bid)&&(r=this.safeFloat(e.bid,0),o=this.safeFloat(e.bid,1)),"ask"in e&&Array.isArray(e.ask)&&(a=this.safeFloat(e.ask,0),n=this.safeFloat(e.ask,1));let d=this.safeFloat(e,"open"),c=this.safeFloat(e,"close"),h=void 0,l=void 0,u=void 0;void 0!==d&&void 0!==c&&(h=c-d,u=this.sum(d,c)/2,void 0!==c&&c>0&&(l=h/d*100));let p=this.safeFloat(e,"amount"),m=this.safeFloat(e,"vol"),f=void 0;return void 0!==p&&void 0!==m&&p>0&&(f=m/p),{symbol:i,timestamp:s,datetime:this.iso8601(s),high:e.high,low:e.low,bid:r,bidVolume:o,ask:a,askVolume:n,vwap:f,open:d,close:c,last:c,previousClose:void 0,change:h,percentage:l,average:u,baseVolume:p,quoteVolume:m,info:e}}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=await this.marketGetDepth(this.extend({symbol:s.id,type:"step0"},i));if("tick"in r){if(!r.tick)throw new a(this.id+" fetchOrderBook() returned empty response: "+this.json(r));let e=r.tick,t=e.ts;return e.nonce=e.version,this.parseOrderBook(e,t)}throw new a(this.id+" fetchOrderBook() returned unrecognized response: "+this.json(r))}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.marketGetDetailMerged(this.extend({symbol:i.id},t));return this.parseTicker(s.tick,i)}parseTrade(e,t){let i=e.ts;return{info:e,id:e.id.toString(),order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:e.direction,price:e.price,amount:e.amount}}async fetchTrades(e,t,i=1e3,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==i&&(a.size=i);let o=(await this.marketGetHistoryTrade(this.extend(a,s))).data,n=[];for(let d=0;d<o.length;d++){let e=o[d].data;for(let t=0;t<e.length;t++){let i=this.parseTrade(e[t],r);n.push(i)}}return n=this.sortBy(n,"timestamp"),this.filterBySymbolSinceLimit(n,e,t,i)}parseOHLCV(e,t,i="1m",s,r){return[1e3*e.id,e.open,e.high,e.low,e.close,e.amount]}async fetchOHLCV(e,t="1m",i,s=1e3,r={}){await this.loadMarkets();let a=this.market(e),o={symbol:a.id,period:this.timeframes[t]};void 0!==s&&(o.size=s);let n=await this.marketGetHistoryKline(this.extend(o,r));return this.parseOHLCVs(n.data,a,t,i,s)}async loadAccounts(e=!1){if(e)this.accounts=await this.fetchAccounts();else{if(this.accounts)return this.accounts;this.accounts=await this.fetchAccounts(),this.accountsById=this.indexBy(this.accounts,"id")}return this.accounts}async fetchAccounts(){return await this.loadMarkets(),(await this.privateGetAccountAccounts()).data}async fetchCurrencies(e={}){let t=(await this.publicGetSettingsCurrencys(this.extend({language:this.options.language},e))).data,i={};for(let s=0;s<t.length;s++){let e=t[s],r=this.safeValue(e,"name"),a=this.safeInteger(e,"withdraw-precision"),o=this.commonCurrencyCode(r.toUpperCase()),n=e.visible&&e["deposit-enabled"]&&e["withdraw-enabled"];i[o]={id:r,code:o,type:"crypto",name:e["display-name"],active:n,fee:void 0,precision:a,limits:{amount:{min:Math.pow(10,-a),max:Math.pow(10,a)},price:{min:Math.pow(10,-a),max:Math.pow(10,a)},cost:{min:void 0,max:void 0},deposit:{min:this.safeFloat(e,"deposit-min-amount"),max:Math.pow(10,a)},withdraw:{min:this.safeFloat(e,"withdraw-min-amount"),max:Math.pow(10,a)}},info:e}}return i}async fetchBalance(e={}){await this.loadMarkets(),await this.loadAccounts();let t=this.options.fetchBalanceMethod,i=await this[t](this.extend({id:this.accounts[0].id},e)),s=i.data.list,r={info:i};for(let a=0;a<s.length;a++){let e=s[a],t=e.currency.toUpperCase(),i=this.commonCurrencyCode(t),o=void 0;o=i in r?r[i]:this.account(),"trade"===e.type&&(o.free=parseFloat(e.balance)),"frozen"===e.type&&(o.used=parseFloat(e.balance)),o.total=this.sum(o.free,o.used),r[i]=o}return this.parseBalance(r)}async fetchOrdersByStates(e,t,i,s,r={}){if(!t)throw new a(this.id+" fetchOrders() requires a symbol parameter");await this.loadMarkets();let o=this.market(t),n=await this.privateGetOrderOrders(this.extend({symbol:o.id,states:e},r));return this.parseOrders(n.data,o,i,s)}async fetchOrders(e,t,i,s={}){return await this.fetchOrdersByStates("pre-submitted,submitted,partial-filled,filled,partial-canceled,canceled",e,t,i,s)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrdersByStates("pre-submitted,submitted,partial-filled",e,t,i,s)}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrdersByStates("filled,partial-canceled,canceled",e,t,i,s)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrderOrdersId(this.extend({id:e},i));return this.parseOrder(s.data)}parseOrderStatus(e){return"partial-filled"===e?"open":"partial-canceled"===e?"canceled":"filled"===e?"closed":"canceled"===e?"canceled":"submitted"===e?"open":e}parseOrder(e,t){let i=void 0,s=void 0,r=void 0;if("type"in e){let t=e.type.split("-");i=t[0],s=t[1],r=this.parseOrderStatus(e.state)}let a=void 0;if(void 0===t&&"symbol"in e&&e.symbol in this.markets_by_id){let i=e.symbol;t=this.markets_by_id[i]}t&&(a=t.symbol);let o=e["created-at"],n=this.safeFloat(e,"amount"),d=parseFloat(e["field-amount"]),c=n-d,h=this.safeFloat(e,"price"),l=parseFloat(e["field-cash-amount"]),u=0;return d&&(u=parseFloat(l/d)),{info:e,id:e.id.toString(),timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:void 0,symbol:a,type:s,side:i,price:h,average:u,cost:l,amount:n,filled:d,remaining:c,status:r,fee:void 0}}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets(),await this.loadAccounts();let o=this.market(e),d={"account-id":this.accounts[0].id,amount:this.amountToPrecision(e,s),symbol:o.id,type:i+"-"+t};if(this.options.createMarketBuyOrderRequiresPrice&&"market"===t&&"buy"===i){if(void 0===r)throw new n(this.id+" market buy order requires price argument to calculate cost (total amount of quote currency to spend for buying, amount * price). To switch off this warning exception and specify cost in the amount argument, set .options['createMarketBuyOrderRequiresPrice'] = false. Make sure you know what you're doing.");d.amount=this.priceToPrecision(e,parseFloat(s)*parseFloat(r))}"limit"===t&&(d.price=this.priceToPrecision(e,r));let c=this.options.createOrderMethod,h=await this[c](this.extend(d,a)),l=this.milliseconds();return{info:h,id:h.data,timestamp:l,datetime:this.iso8601(l),lastTradeTimestamp:void 0,status:void 0,symbol:e,type:t,side:i,price:r,amount:s,filled:void 0,remaining:void 0,cost:void 0,trades:void 0,fee:void 0}}async cancelOrder(e,t,i={}){return await this.privatePostOrderOrdersIdSubmitcancel({id:e})}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privateGetDwDepositVirtualAddresses(this.extend({currency:i.id.toLowerCase()},t)),r=this.safeString(s,"data");return this.checkAddress(r),{currency:e,address:r,info:s}}feeToPrecision(e,t){return parseFloat(this.decimalToPrecision(t,0,this.currencies[e].precision))}calculateFee(e,t,i,s,r,a="taker",o={}){let n=this.markets[e],d=n[a],c=s*d,h="quote";return"sell"===i?c*=r:h="base",{type:a,currency:n[h],rate:d,cost:parseFloat(this.feeToPrecision(n[h],c))}}async withdraw(e,t,i,s,r={}){await this.loadMarkets(),this.checkAddress(i);let a={address:i,amount:t,currency:this.currency(e).id.toLowerCase()};void 0!==s&&(a["addr-tag"]=s);let o=await this.privatePostDwWithdrawApiCreate(this.extend(a,r)),n=void 0;return"data"in o&&(n=o.data),{info:o,id:n}}sign(e,t="public",i="GET",s={},r,a){let o="/";o+="market"===t?t:this.version,o+="/"+this.implodeParams(e,s);let n=this.omit(s,this.extractParams(e));if("private"===t){this.checkRequiredCredentials();let e=this.ymdhms(this.milliseconds(),"T"),t=this.keysort(this.extend({SignatureMethod:"HmacSHA256",SignatureVersion:"2",AccessKeyId:this.apiKey,Timestamp:e},n)),s=this.urlencode(t),d=[i,this.hostname,o,s].join("\n"),c=this.hmac(this.encode(d),this.encode(this.secret),"sha256","base64");o+="?"+(s+="&"+this.urlencode({Signature:c})),"POST"===i?(a=this.json(n),r={"Content-Type":"application/json"}):r={"Content-Type":"application/x-www-form-urlencoded"}}else Object.keys(s).length&&(o+="?"+this.urlencode(s));return{url:o=this.urls.api+o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,o){if("string"==typeof o&&!(o.length<2||"{"!==o[0]&&"["!==o[0])){let e=JSON.parse(o);if("status"in e){if("error"===this.safeString(e,"status")){const t=this.safeString(e,"err-code"),i=this.id+" "+this.json(e),s=this.exceptions;if(t in s)throw new s[t](i);throw new a(i)}}}}}},795:function(e,t,i){"use strict";const s=e=>e?(e^16*Math.random()>>e/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,s);e.exports={uuid:s,unCamelCase:e=>e.match(/^[A-Z0-9_]+$/)?e:e.replace(/[a-z0-9][A-Z]/g,e=>e[0]+"_"+e[1]).replace(/[A-Z0-9][A-Z0-9][a-z]/g,e=>e[0]+"_"+e[1]+e[2]).toLowerCase(),capitalize:e=>e.length?e.charAt(0).toUpperCase()+e.slice(1):e}},796:function(e,t,i){"use strict";const s=Number.isFinite,r=Array.isArray,a=e=>"string"==typeof e,o=e=>null!==e&&"object"==typeof e,n=e=>d(e)&&e.toString||s(e),d=e=>void 0!==e&&null!==e,c=(e,t)=>o(e)?e[t]:void 0,h=e=>s(e)||a(e)?parseFloat(e):NaN,l=e=>s(e)||a(e)?parseInt(e,10):NaN;e.exports={isNumber:s,isArray:r,isObject:o,isString:a,isStringCoercible:n,isDictionary:e=>o(e)&&!r(e),hasProps:d,prop:c,asFloat:h,asInteger:l,safeFloat:(e,t,i,r=h(c(e,t)))=>s(r)?r:i,safeInteger:(e,t,i,r=l(c(e,t)))=>s(r)?r:i,safeValue:(e,t,i,s=c(e,t))=>d(s)?s:i,safeString:(e,t,i,s=c(e,t))=>n(s)?String(s):i}},797:function(e,t,i){"use strict";const s=i(788),{InsufficientFunds:r,OrderNotFound:a}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"acx",name:"ACX",countries:["AU"],rateLimit:1e3,version:"v2",has:{CORS:!0,fetchTickers:!0,fetchOHLCV:!0,withdraw:!0,fetchOrder:!0},timeframes:{"1m":"1","5m":"5","15m":"15","30m":"30","1h":"60","2h":"120","4h":"240","12h":"720","1d":"1440","3d":"4320","1w":"10080"},urls:{logo:"https://user-images.githubusercontent.com/1294454/30247614-1fe61c74-9621-11e7-9e8c-f1a627afa279.jpg",extension:".json",api:"https://acx.io/api",www:"https://acx.io",doc:"https://acx.io/documents/api_v2"},api:{public:{get:["depth","k_with_pending_trades","k","markets","order_book","order_book/{market}","tickers","tickers/{market}","timestamp","trades","trades/{market}"]},private:{get:["members/me","deposits","deposit","deposit_address","orders","order","trades/my","withdraws","withdraw"],post:["orders","orders/multi","orders/clear","order/delete","withdraw"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:.002,taker:.002},funding:{tierBased:!1,percentage:!0,withdraw:{}}},exceptions:{2002:r,2003:a}})}async fetchMarkets(){let e=await this.publicGetMarkets(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.id,a=s.name,[o,n]=a.split("/");o=this.commonCurrencyCode(o),n=this.commonCurrencyCode(n),t.push({id:r,symbol:a,base:o,quote:n,info:s})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privateGetMembersMe()).accounts,i={info:t};for(let s=0;s<t.length;s++){let e=t[s],r=e.currency.toUpperCase(),a={free:parseFloat(e.balance),used:parseFloat(e.locked),total:0};a.total=this.sum(a.free,a.used),i[r]=a}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={market:this.market(e).id};void 0!==t&&(s.limit=t);let r=await this.publicGetDepth(this.extend(s,i)),a=1e3*r.timestamp;return this.parseOrderBook(r,a)}parseTicker(e,t){let i=1e3*e.at;e=e.ticker;let s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:this.safeFloat(e,"open"),close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"vol"),quoteVolume:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers(t),s=Object.keys(i),r={};for(let a=0;a<s.length;a++){let e=s[a],t=void 0,o=e;if(e in this.markets_by_id)o=(t=this.markets_by_id[e]).symbol;else{let t=e.slice(0,3),i=e.slice(3,6);t=t.toUpperCase(),i=i.toUpperCase(),o=(t=this.commonCurrencyCode(t))+"/"+(i=this.commonCurrencyCode(i))}let n=i[e];r[o]=this.parseTicker(n,t)}return r}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTickersMarket(this.extend({market:i.id},t));return this.parseTicker(s,i)}parseTrade(e,t){let i=this.parse8601(e.created_at);return{id:e.id.toString(),timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:void 0,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"volume"),cost:this.safeFloat(e,"funds"),info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTrades(this.extend({market:r.id},s));return this.parseTrades(a,r,t,i)}parseOHLCV(e,t,i="1m",s,r){return[1e3*e[0],e[1],e[2],e[3],e[4],e[5]]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);void 0===s&&(s=500);let o={market:a.id,period:this.timeframes[t],limit:s};void 0!==i&&(o.timestamp=i);let n=await this.publicGetK(this.extend(o,r));return this.parseOHLCVs(n,a,t,i,s)}parseOrder(e,t){let i=void 0;if(void 0!==t)i=t.symbol;else{let t=e.market;i=this.markets_by_id[t].symbol}let s=this.parse8601(e.created_at),r=e.state,a=void 0;return"done"===r?a="closed":"wait"===r?a="open":"cancel"===r&&(a="canceled"),{id:e.id.toString(),timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,status:a,symbol:i,type:e.ord_type,side:e.side,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"volume"),filled:this.safeFloat(e,"executed_volume"),remaining:this.safeFloat(e,"remaining_volume"),trades:void 0,fee:void 0,info:e}}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrder(this.extend({id:parseInt(e)},i));return this.parseOrder(s)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o={market:this.marketId(e),side:i,volume:s.toString(),ord_type:t};"limit"===t&&(o.price=r.toString());let n=await this.privatePostOrders(this.extend(o,a)),d=this.markets_by_id[n.market];return this.parseOrder(n,d)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostOrderDelete({id:e}),r=this.parseOrder(s),o=r.status;if("closed"===o||"canceled"===o)throw new a(this.id+" "+this.json(r));return r}async withdraw(e,t,i,s,r={}){return this.checkAddress(i),await this.loadMarkets(),{info:await this.privatePostWithdraw(this.extend({currency:e.toLowerCase(),sum:t,address:i},r)),id:void 0}}nonce(){return this.milliseconds()}encodeParams(e){if("orders"in e){let t=e.orders,i=this.urlencode(this.keysort(this.omit(e,"orders")));for(let e=0;e<t.length;e++){let s=t[e],r=Object.keys(s);for(let e=0;e<r.length;e++){let t=r[e];i+="&orders%5B%5D%5B"+t+"%5D="+s[t].toString()}}return i}return this.urlencode(this.keysort(e))}sign(e,t="public",i="GET",s={},r,a){let o="/api/"+this.version+"/"+this.implodeParams(e,s);"extension"in this.urls&&(o+=this.urls.extension);let n=this.omit(s,this.extractParams(e)),d=this.urls.api+o;if("public"===t)Object.keys(n).length&&(d+="?"+this.urlencode(n));else{this.checkRequiredCredentials();let e=this.nonce().toString(),t=this.encodeParams(this.extend({access_key:this.apiKey,tonce:e},s)),n=i+"|"+o+"|"+t,c=t+"&signature="+this.hmac(this.encode(n),this.encode(this.secret));"GET"===i?d+="?"+c:(a=c,r={"Content-Type":"application/x-www-form-urlencoded"})}return{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a){if(400===e){const e=JSON.parse(a),t=this.safeValue(e,"error"),i=this.safeString(t,"code"),s=this.id+" "+this.json(e),r=this.exceptions;if(i in r)throw new r[i](s)}}}},798:function(e,t,i){"use strict";const s=i(788),{NotSupported:r,DDoSProtection:a,AuthenticationError:o,ExchangeError:n,ExchangeNotAvailable:d,InsufficientFunds:c,InvalidOrder:h,OrderNotFound:l,InvalidNonce:u}=i(787),{ROUND:p,TRUNCATE:m,SIGNIFICANT_DIGITS:f}=i(789);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bitfinex",name:"Bitfinex",countries:["VG"],version:"v1",rateLimit:1500,has:{CORS:!1,createDepositAddress:!0,deposit:!0,fetchClosedOrders:!0,fetchDepositAddress:!0,fetchTradingFees:!0,fetchFundingFees:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchTickers:!0,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","3h":"3h","6h":"6h","12h":"12h","1d":"1D","1w":"7D","2w":"14D","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg",api:"https://api.bitfinex.com",www:"https://www.bitfinex.com",doc:["https://bitfinex.readme.io/v1/docs","https://github.com/bitfinexcom/bitfinex-api-node"]},api:{v2:{get:["candles/trade:{timeframe}:{symbol}/{section}","candles/trade:{timeframe}:{symbol}/last","candles/trade:{timeframe}:{symbol}/hist"]},public:{get:["book/{symbol}","lendbook/{currency}","lends/{currency}","pubticker/{symbol}","stats/{symbol}","symbols","symbols_details","tickers","today","trades/{symbol}"]},private:{post:["account_fees","account_infos","balances","basket_manage","credits","deposit/new","funding/close","history","history/movements","key_info","margin_infos","mytrades","mytrades_funding","offer/cancel","offer/new","offer/status","offers","offers/hist","order/cancel","order/cancel/all","order/cancel/multi","order/cancel/replace","order/new","order/new/multi","order/status","orders","orders/hist","position/claim","position/close","positions","summary","taken_funds","total_taken_funds","transfer","unused_taken_funds","withdraw"]}},fees:{trading:{tierBased:!0,percentage:!0,maker:.001,taker:.002,tiers:{taker:[[0,.002],[5e5,.002],[1e6,.002],[25e5,.002],[5e6,.002],[75e5,.002],[1e7,.0018],[15e6,.0016],[2e7,.14/100],[25e6,.0012],[3e7,.001]],maker:[[0,.001],[5e5,8e-4],[1e6,6e-4],[25e5,4e-4],[5e6,2e-4],[75e5,0],[1e7,0],[15e6,0],[2e7,0],[25e6,0],[3e7,0]]}},funding:{tierBased:!1,percentage:!1,deposit:{BTC:4e-4,IOTA:.5,ETH:.0027,BCH:1e-4,LTC:.001,EOS:.24279,XMR:.04,SAN:.99269,DASH:.01,ETC:.01,XRP:.02,YYW:16.915,NEO:0,ZEC:.001,BTG:0,OMG:.14026,DATA:20.773,QASH:1.9858,ETP:.01,QTUM:.01,EDO:.95001,AVT:1.3045,USDT:0,TRX:28.184,ZRX:1.9947,RCN:10.793,TNB:31.915,SNT:14.976,RLC:1.414,GNT:5.8952,SPK:10.893,REP:.041168,BAT:6.1546,ELF:1.8753,FUN:32.336,SNG:18.622,AID:8.08,MNA:16.617,NEC:1.6504},withdraw:{BTC:4e-4,IOTA:.5,ETH:.0027,BCH:1e-4,LTC:.001,EOS:.24279,XMR:.04,SAN:.99269,DASH:.01,ETC:.01,XRP:.02,YYW:16.915,NEO:0,ZEC:.001,BTG:0,OMG:.14026,DATA:20.773,QASH:1.9858,ETP:.01,QTUM:.01,EDO:.95001,AVT:1.3045,USDT:20,TRX:28.184,ZRX:1.9947,RCN:10.793,TNB:31.915,SNT:14.976,RLC:1.414,GNT:5.8952,SPK:10.893,REP:.041168,BAT:6.1546,ELF:1.8753,FUN:32.336,SNG:18.622,AID:8.08,MNA:16.617,NEC:1.6504}}},commonCurrencies:{ATM:"Atonomi",BCC:"CST_BCC",BCU:"CST_BCU",CTX:"CTXC",DAT:"DATA",DSH:"DASH",IOS:"IOST",IOT:"IOTA",MNA:"MANA",ORS:"ORS Group",QSH:"QASH",QTM:"QTUM",SNG:"SNGLS",SPK:"SPANK",STJ:"STORJ",YYW:"YOYOW",USD:"USDT"},exceptions:{exact:{temporarily_unavailable:d,"Order could not be cancelled.":l,"No such order found.":l,"Order price must be positive.":h,"Could not find a key matching the given X-BFX-APIKEY.":o,"This API key does not have permission for this action":o,'Key price should be a decimal number, e.g. "123.456"':h,'Key amount should be a decimal number, e.g. "123.456"':h,ERR_RATE_LIMIT:a,"Nonce is too small.":u,"No summary found.":n,"Cannot evaluate your available balance, please try again":d},broad:{"Invalid order: not enough exchange balance for ":c,"Invalid order: minimum size for ":h,"Invalid order":h,"The available balance is only":c}},precisionMode:f,options:{currencyNames:{AGI:"agi",AID:"aid",AIO:"aio",ANT:"ant",AVT:"aventus",BAT:"bat",BCH:"bcash",BCI:"bci",BFT:"bft",BTC:"bitcoin",BTG:"bgold",CFI:"cfi",DAI:"dai",DADI:"dad",DASH:"dash",DATA:"datacoin",DTH:"dth",EDO:"eidoo",ELF:"elf",EOS:"eos",ETC:"ethereumc",ETH:"ethereum",ETP:"metaverse",FUN:"fun",GNT:"golem",IOST:"ios",IOTA:"iota",LRC:"lrc",LTC:"litecoin",LYM:"lym",MANA:"mna",MIT:"mit",MKR:"mkr",MTN:"mtn",NEO:"neo",ODE:"ode",OMG:"omisego",OMNI:"mastercoin",QASH:"qash",QTUM:"qtum",RCN:"rcn",RDN:"rdn",REP:"rep",REQ:"req",RLC:"rlc",SAN:"santiment",SNGLS:"sng",SNT:"status",SPANK:"spk",STORJ:"stj",TNB:"tnb",TRX:"trx",USD:"wire",UTK:"utk",USDT:"tetheruso",VEE:"vee",WAX:"wax",XLM:"xlm",XMR:"monero",XRP:"ripple",XVG:"xvg",YOYOW:"yoyow",ZEC:"zcash",ZRX:"zrx"}}})}async fetchFundingFees(e={}){await this.loadMarkets();const t=await this.privatePostAccountFees(e),i=t.withdraw,s={},r=Object.keys(i);for(let a=0;a<r.length;a++){const e=r[a];let t=e;if(e in this.currencies_by_id){t=this.currencies_by_id[e].code}s[t]=this.safeFloat(i,e)}return{info:t,withdraw:s,deposit:s}}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privatePostSummary(e);return{info:t,maker:this.safeFloat(t,"maker_fee"),taker:this.safeFloat(t,"taker_fee")}}async fetchMarkets(){let e=await this.publicGetSymbolsDetails(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.pair.toUpperCase(),a=r.slice(0,3),o=r.slice(3,6),n=this.commonCurrencyCode(a),d=this.commonCurrencyCode(o),c=n+"/"+d,h={price:s.price_precision,amount:s.price_precision},l={amount:{min:this.safeFloat(s,"minimum_order_size"),max:this.safeFloat(s,"maximum_order_size")},price:{min:Math.pow(10,-h.price),max:Math.pow(10,h.price)}};l.cost={min:l.amount.min*l.price.min,max:void 0},t.push({id:r,symbol:c,base:n,quote:d,baseId:a,quoteId:o,active:!0,precision:h,limits:l,info:s})}return t}costToPrecision(e,t){return this.decimalToPrecision(t,p,this.markets[e].precision.price,this.precisionMode)}priceToPrecision(e,t){return this.decimalToPrecision(t,p,this.markets[e].precision.price,this.precisionMode)}amountToPrecision(e,t){return this.decimalToPrecision(t,m,this.markets[e].precision.amount,this.precisionMode)}feeToPrecision(e,t){return this.decimalToPrecision(t,p,this.currencies[e].precision,this.precisionMode)}calculateFee(e,t,i,s,r,a="taker",o={}){let n=this.markets[e],d=n[a],c=s*d,h="quote";return"sell"===i?c*=r:h="base",{type:a,currency:n[h],rate:d,cost:parseFloat(this.feeToPrecision(n[h],c))}}async fetchBalance(e={}){await this.loadMarkets();let t=this.safeString(e,"type","exchange"),i=await this.privatePostBalances(),s={info:i};for(let r=0;r<i.length;r++){let e=i[r];if(e.type===t){let t=e.currency.toUpperCase();t=this.commonCurrencyCode(t);let i=this.account();i.free=parseFloat(e.available),i.total=parseFloat(e.amount),i.used=i.total-i.free,s[t]=i}}return this.parseBalance(s)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={symbol:this.marketId(e)};void 0!==t&&(s.limit_bids=t,s.limit_asks=t);let r=await this.publicGetBookSymbol(this.extend(s,i));return this.parseOrderBook(r,void 0,"bids","asks","price","amount")}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers(t),s={};for(let r=0;r<i.length;r++){let e=i[r],t=this.parseTicker(e);s[t.symbol]=t}return s}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetPubtickerSymbol(this.extend({symbol:i.id},t));return this.parseTicker(s,i)}parseTicker(e,t){let i=1e3*this.safeFloat(e,"timestamp"),s=void 0;if(void 0!==t)s=t.symbol;else if("pair"in e){let i=e.pair;if(i in this.markets_by_id&&(t=this.markets_by_id[i]),void 0!==t)s=t.symbol;else{let e=i.slice(0,3),t=i.slice(3,6);s=this.commonCurrencyCode(e)+"/"+this.commonCurrencyCode(t)}}let r=this.safeFloat(e,"last_price");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"bid"),bidVolume:void 0,ask:this.safeFloat(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeFloat(e,"mid"),baseVolume:this.safeFloat(e,"volume"),quoteVolume:void 0,info:e}}parseTrade(e,t){let i=1e3*parseInt(parseFloat(e.timestamp)),s=e.type.toLowerCase(),r=this.safeString(e,"order_id"),a=this.safeFloat(e,"price"),o=this.safeFloat(e,"amount"),n=a*o,d=void 0;if("fee_amount"in e){let t=-this.safeFloat(e,"fee_amount"),i=this.safeString(e,"fee_currency");i in this.currencies_by_id&&(i=this.currencies_by_id[i].code),d={cost:t,currency:i}}return{id:e.tid.toString(),info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,order:r,side:s,price:a,amount:o,cost:n,fee:d}}async fetchTrades(e,t,i=50,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id,limit_trades:i};void 0!==t&&(a.timestamp=parseInt(t/1e3));let o=await this.publicGetTradesSymbol(this.extend(a,s));return this.parseTrades(o,r,t,i)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new n(this.id+" fetchMyTrades requires a symbol argument");await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==i&&(a.limit_trades=i),void 0!==t&&(a.timestamp=parseInt(t/1e3));let o=await this.privatePostMytrades(this.extend(a,s));return this.parseTrades(o,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=t;"limit"!==t&&"market"!==t||(o="exchange "+t),s=this.amountToPrecision(e,s);let n={symbol:this.marketId(e),amount:s,side:i,type:o,ocoorder:!1,buy_price_oco:0,sell_price_oco:0};n.price="market"===t?this.nonce().toString():this.priceToPrecision(e,r);let d=await this.privatePostOrderNew(this.extend(n,a));return this.parseOrder(d)}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privatePostOrderCancel({order_id:parseInt(e)})}parseOrder(e,t){let i=e.side,s=e.is_live,r=e.is_cancelled,a=void 0;a=s?"open":r?"canceled":"closed";let o=void 0;if(void 0===t){let i=e.symbol.toUpperCase();i in this.markets_by_id&&(t=this.markets_by_id[i])}void 0!==t&&(o=t.symbol);let n=e.type;if(n.indexOf("exchange ")>=0){n=e.type.split(" ")[1]}let d=parseInt(1e3*parseFloat(e.timestamp));return{info:e,id:e.id.toString(),timestamp:d,datetime:this.iso8601(d),lastTradeTimestamp:void 0,symbol:o,type:n,side:i,price:this.safeFloat(e,"price"),average:this.safeFloat(e,"avg_execution_price"),amount:this.safeFloat(e,"original_amount"),remaining:this.safeFloat(e,"remaining_amount"),filled:this.safeFloat(e,"executed_amount"),status:a,fee:void 0}}async fetchOpenOrders(e,t,i,s={}){if(await this.loadMarkets(),void 0!==e&&!(e in this.markets))throw new n(this.id+" has no symbol "+e);let r=await this.privatePostOrders(s),a=this.parseOrders(r,void 0,t,i);return void 0!==e&&(a=this.filterBy(a,"symbol",e)),a}async fetchClosedOrders(e,t,i,s={}){await this.loadMarkets();let r={};void 0!==i&&(r.limit=i);let a=await this.privatePostOrdersHist(this.extend(r,s)),o=this.parseOrders(a,void 0,t,i);return void 0!==e&&(o=this.filterBy(o,"symbol",e)),o=this.filterBy(o,"status","closed")}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostOrderStatus(this.extend({order_id:parseInt(e)},i));return this.parseOrder(s)}parseOHLCV(e,t,i="1m",s,r){return[e[0],e[1],e[3],e[4],e[2],e[5]]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets(),void 0===s&&(s=100);let a=this.market(e),o={symbol:"t"+a.id,timeframe:this.timeframes[t],sort:1,limit:s};void 0!==i&&(o.start=i);let n=await this.v2GetCandlesTradeTimeframeSymbolHist(this.extend(o,r));return this.parseOHLCVs(n,a,t,i,s)}getCurrencyName(e){if(e in this.options.currencyNames)return this.options.currencyNames[e];throw new r(this.id+" "+e+" not supported for withdrawal")}async createDepositAddress(e,t={}){let i=await this.fetchDepositAddress(e,this.extend({renew:1},t)),s=this.safeString(i,"address");return this.checkAddress(s),{currency:e,address:s,info:i.info}}async fetchDepositAddress(e,t={}){let i={method:this.getCurrencyName(e),wallet_name:"exchange",renew:0},s=await this.privatePostDepositNew(this.extend(i,t)),r=s.address,a=void 0;return"address_pool"in s&&(a=r,r=s.address_pool),this.checkAddress(r),{currency:e,address:r,tag:a,info:s}}async withdraw(e,t,i,s,r={}){this.checkAddress(i);let a={withdraw_type:this.getCurrencyName(e),walletselected:"exchange",amount:t.toString(),address:i};s&&(a.payment_id=s);let o=(await this.privatePostWithdraw(this.extend(a,r)))[0],d=o.withdrawal_id,c=o.message,h=this.findBroadlyMatchedKey(this.exceptions.broad,c);if(0===d){if(void 0!==h){throw new(0,this.exceptions.broad[h])(this.id+" "+c)}throw new n(this.id+" withdraw returned an id of zero: "+this.json(o))}return{info:o,id:d}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o="/"+this.implodeParams(e,s);o="v2"===t?"/"+t+o:"/"+this.version+o;let n=this.omit(s,this.extractParams(e)),d=this.urls.api+o;if(("public"===t||e.indexOf("/hist")>=0)&&Object.keys(n).length){let e="?"+this.urlencode(n);d+=e,o+=e}if("private"===t){this.checkRequiredCredentials();let e=this.nonce();n=this.extend({nonce:e.toString(),request:o},n),n=this.json(n),n=this.encode(n);let t=this.stringToBase64(n),i=this.encode(this.secret),s=this.hmac(t,i,"sha384");r={"X-BFX-APIKEY":this.apiKey,"X-BFX-PAYLOAD":this.decode(t),"X-BFX-SIGNATURE":s}}return{url:d,method:i,body:a,headers:r}}findBroadlyMatchedKey(e,t){const i=Object.keys(e);for(let s=0;s<i.length;s++){const e=i[s];if(t.indexOf(e)>=0)return e}}handleErrors(e,t,i,s,r,a){if(!(a.length<2)&&e>=400&&"{"===a[0]){const e=JSON.parse(a),t=this.id+" "+this.json(e);let i=void 0;if("message"in e)i=e.message;else{if(!("error"in e))throw new n(t);i=e.error}const s=this.exceptions.exact;if(i in s)throw new s[i](t);const r=this.exceptions.broad,o=this.findBroadlyMatchedKey(r,i);if(void 0!==o)throw new r[o](t);throw new n(t)}}}},799:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,AuthenticationError:a,InsufficientFunds:o,OrderNotFound:n,ExchangeNotAvailable:d,DDoSProtection:c,InvalidOrder:h}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"zb",name:"ZB",countries:["CN"],rateLimit:1e3,version:"v1",has:{CORS:!1,createMarketOrder:!1,fetchOrder:!0,fetchOrders:!0,fetchOpenOrders:!0,withdraw:!0},timeframes:{"1m":"1min","3m":"3min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","2h":"2hour","4h":"4hour","6h":"6hour","12h":"12hour","1d":"1day","3d":"3day","1w":"1week"},exceptions:{1001:r,1002:r,1003:a,1004:a,1005:a,1006:a,1009:d,2001:o,2002:o,2003:o,2005:o,2006:o,2007:o,2009:o,3001:n,3002:h,3003:h,3004:a,3005:r,3006:a,3007:a,3008:n,4001:d,4002:c},urls:{logo:"https://user-images.githubusercontent.com/1294454/32859187-cd5214f0-ca5e-11e7-967d-96568e2e2bd1.jpg",api:{public:"http://api.zb.com/data",private:"https://trade.zb.com/api"},www:"https://www.zb.com",doc:"https://www.zb.com/i/developer",fees:"https://www.zb.com/i/rate"},api:{public:{get:["markets","ticker","depth","trades","kline"]},private:{get:["order","cancelOrder","getOrder","getOrders","getOrdersNew","getOrdersIgnoreTradeType","getUnfinishedOrdersIgnoreTradeType","getAccountInfo","getUserAddress","getWithdrawAddress","getWithdrawRecord","getChargeRecord","getCnyWithdrawRecord","getCnyChargeRecord","withdraw","getLeverAssetsInfo","getLeverBills","transferInLever","transferOutLever","loan","cancelLoan","getLoans","getLoanRecords","borrow","repay","getRepayments"]}},fees:{funding:{withdraw:{BTC:1e-4,BCH:6e-4,LTC:.005,ETH:.01,ETC:.01,BTS:3,EOS:1,QTUM:.01,HSR:.001,XRP:.1,USDT:"0.1%",QCASH:5,DASH:.002,BCD:0,UBTC:0,SBTC:0,INK:20,TV:.1,BTH:0,BCX:0,LBTC:0,CHAT:20,bitCNY:20,HLC:20,BTP:0,BCW:0}},trading:{maker:.002,taker:.002}},commonCurrencies:{ENT:"ENTCash"}})}async fetchMarkets(){let e=await this.publicGetMarkets(),t=Object.keys(e),i=[];for(let s=0;s<t.length;s++){let r=t[s],a=e[r],[o,n]=r.split("_"),d=this.commonCurrencyCode(o.toUpperCase()),c=this.commonCurrencyCode(n.toUpperCase()),h=d+"/"+c,l={amount:a.amountScale,price:a.priceScale},u=Math.pow(10,-l.amount);i.push({id:r,symbol:h,baseId:o,quoteId:n,base:d,quote:c,lot:u,active:!0,precision:l,limits:{amount:{min:u,max:void 0},price:{min:Math.pow(10,-l.price),max:void 0},cost:{min:0,max:void 0}},info:a})}return i}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetGetAccountInfo(e),i=t.result.coins,s={info:t};for(let r=0;r<i.length;r++){let e=i[r],t=this.account(),a=e.key;a=a in this.currencies_by_id?this.currencies_by_id[a].code:this.commonCurrencyCode(e.enName),t.free=parseFloat(e.available),t.used=parseFloat(e.freez),t.total=this.sum(t.free,t.used),s[a]=t}return this.parseBalance(s)}getMarketFieldName(){return"market"}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={};r[this.getMarketFieldName()]=s.id;let a=await this.publicGetDepth(this.extend(r,i));return this.parseOrderBook(a)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={};s[this.getMarketFieldName()]=i.id;let r=(await this.publicGetTicker(this.extend(s,t))).ticker,a=this.milliseconds(),o=this.safeFloat(r,"last");return{symbol:e,timestamp:a,datetime:this.iso8601(a),high:this.safeFloat(r,"high"),low:this.safeFloat(r,"low"),bid:this.safeFloat(r,"buy"),bidVolume:void 0,ask:this.safeFloat(r,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:o,last:o,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(r,"vol"),quoteVolume:void 0,info:r}}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);void 0===s&&(s=1e3);let o={market:a.id,type:this.timeframes[t],limit:s};void 0!==i&&(o.since=i);let n=await this.publicGetKline(this.extend(o,r));return this.parseOHLCVs(n.data,a,t,i,s)}parseTrade(e,t){let i=1e3*e.date,s="bid"===e.trade_type?"buy":"sell";return{info:e,id:e.tid.toString(),timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:s,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"amount")}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={};a[this.getMarketFieldName()]=r.id;let o=await this.publicGetTrades(this.extend(a,s));return this.parseTrades(o,r,t,i)}async createOrder(e,t,i,s,r,a={}){if("limit"!==t)throw new h(this.id+" allows limit orders only");await this.loadMarkets();let o={price:this.priceToPrecision(e,r),amount:this.amountToString(e,s),tradeType:"buy"===i?"1":"0",currency:this.marketId(e)},n=await this.privateGetOrder(this.extend(o,a));return{info:n,id:n.id}}async cancelOrder(e,t,i={}){await this.loadMarkets();let s={id:e.toString(),currency:this.marketId(t)};return s=this.extend(s,i),await this.privateGetCancelOrder(s)}async fetchOrder(e,t,i={}){if(void 0===t)throw new r(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();let s={id:e.toString(),currency:this.marketId(t)};s=this.extend(s,i);let a=await this.privateGetGetOrder(s);return this.parseOrder(a,void 0)}async fetchOrders(e,t,i=50,s={}){if(void 0===e)throw new r(this.id+"fetchOrders requires a symbol parameter");await this.loadMarkets();let a=this.market(e),o={currency:a.id,pageIndex:1,pageSize:i},d="privateGetGetOrdersIgnoreTradeType";"tradeType"in s&&(d="privateGetGetOrdersNew");let c=void 0;try{c=await this[d](this.extend(o,s))}catch(e){if(e instanceof n)return[];throw e}return this.parseOrders(c,a,t,i)}async fetchOpenOrders(e,t,i=10,s={}){if(void 0===e)throw new r(this.id+"fetchOpenOrders requires a symbol parameter");await this.loadMarkets();let a=this.market(e),o={currency:a.id,pageIndex:1,pageSize:i},d="privateGetGetUnfinishedOrdersIgnoreTradeType";"tradeType"in s&&(d="privateGetGetOrdersNew");let c=void 0;try{c=await this[d](this.extend(o,s))}catch(e){if(e instanceof n)return[];throw e}return this.parseOrders(c,a,t,i)}parseOrder(e,t){let i=1===e.type?"buy":"sell",s=void 0,r=this.getCreateDateField();r in e&&(s=e[r]);let a=void 0;"currency"in e&&(t=this.marketsById[e.currency]),t&&(a=t.symbol);let o=e.price,n=e.trade_amount,d=e.total_amount,c=d-n,h=e.trade_money,l=this.safeString(e,"status");return void 0!==l&&(l=this.parseOrderStatus(l)),{info:e,id:e.id,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,symbol:a,type:"limit",side:i,price:o,average:void 0,cost:h,amount:d,filled:n,remaining:c,status:l,fee:void 0}}parseOrderStatus(e){const t={0:"open",1:"canceled",2:"closed",3:"open"};return e in t?t[e]:e}getCreateDateField(){return"trade_date"}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t];if("public"===t)o+="/"+this.version+"/"+e,Object.keys(s).length&&(o+="?"+this.urlencode(s));else{let t=this.keysort(this.extend({method:e,accesskey:this.apiKey},s)),i=this.nonce();t=this.keysort(t);let r=this.rawencode(t),a=this.hash(this.encode(this.secret),"sha1");o+="/"+e+"?"+r+"&"+("sign="+this.hmac(this.encode(r),this.encode(a),"md5")+"&reqTime="+i.toString())}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if("string"==typeof o&&!(o.length<2)&&"{"===o[0]){let e=JSON.parse(o),t=this.id+" "+this.json(e);if("code"in e){let i=this.safeString(e,"code");if(i in this.exceptions){throw new(0,this.exceptions[i])(t)}if("1000"!==i)throw new r(t)}let i=this.safeValue(e,"result");if(void 0!==i&&!i){throw"服务端忙碌"===this.safeString(e,"message")?new d(t):new r(t)}}}}},800:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,ExchangeNotAvailable:a,AuthenticationError:o,InvalidNonce:n,InsufficientFunds:d,InvalidOrder:c,OrderNotFound:h,DDoSProtection:l}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"coinegg",name:"CoinEgg",countries:["CN","UK"],has:{fetchOrder:!0,fetchOrders:!0,fetchOpenOrders:"emulated",fetchMyTrades:!0,fetchTickers:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/36770310-adfa764e-1c5a-11e8-8e09-449daac3d2fb.jpg",api:{web:"https://www.coinegg.com/coin",rest:"https://api.coinegg.com/api/v1"},www:"https://www.coinegg.com",doc:"https://www.coinegg.com/explain.api.html",fees:"https://www.coinegg.com/fee.html"},api:{web:{get:["{quote}/allcoin","{quote}/trends","{quote}/{base}/order","{quote}/{base}/trades","{quote}/{base}/depth.js"]},public:{get:["ticker/region/{quote}","depth/region/{quote}","orders/region/{quote}"]},private:{post:["balance","trade_add/region/{quote}","trade_cancel/region/{quote}","trade_view/region/{quote}","trade_list/region/{quote}"]}},fees:{trading:{maker:.001,taker:.001},funding:{withdraw:{BTC:.008,BCH:.002,LTC:.001,ETH:.01,ETC:.01,NEO:0,QTUM:"1%",XRP:"1%",DOGE:"1%",LSK:"1%",XAS:"1%",BTS:"1%",GAME:"1%",GOOC:"1%",NXT:"1%",IFC:"1%",DNC:"1%",BLK:"1%",VRC:"1%",XPM:"1%",VTC:"1%",TFC:"1%",PLC:"1%",EAC:"1%",PPC:"1%",FZ:"1%",ZET:"1%",RSS:"1%",PGC:"1%",SKT:"1%",JBC:"1%",RIO:"1%",LKC:"1%",ZCC:"1%",MCC:"1%",QEC:"1%",MET:"1%",YTC:"1%",HLB:"1%",MRYC:"1%",MTC:"1%",KTC:0}}},exceptions:{103:o,104:o,105:o,106:n,200:d,201:c,202:c,203:h,402:l},errorMessages:{100:"Required parameters can not be empty",101:"Illegal parameter",102:"coin does not exist",103:"Key does not exist",104:"Signature does not match",105:"Insufficient permissions",106:"Request expired(nonce error)",200:"Lack of balance",201:"Too small for the number of trading",202:"Price must be in 0 - 1000000",203:"Order does not exist",204:"Pending order amount must be above 0.001 BTC",205:"Restrict pending order prices",206:"Decimal place error",401:"System error",402:"Requests are too frequent",403:"Non-open API",404:"IP restriction does not request the resource",405:"Currency transactions are temporarily closed"},options:{quoteIds:["btc","eth","usc","usdt"]}})}async fetchMarkets(){let e=this.options.quoteIds,t=[];for(let i=0;i<e.length;i++){let s=e[i],r=await this.webGetQuoteAllcoin({quote:s});if(void 0===r)throw new a(this.id+' fetchMarkets() for "'+s+'" returned: "'+this.json(r)+'"');let o=Object.keys(r);if(o.length<1)throw new a(this.id+' fetchMarkets() for "'+s+'" returned: "'+this.json(r)+'"');for(let e=0;e<o.length;e++){let i=o[e],a=r[i],n=i.toUpperCase(),d=s.toUpperCase(),c=i+s,h=(n=this.commonCurrencyCode(n))+"/"+(d=this.commonCurrencyCode(d)),l={amount:8,price:8},u=Math.pow(10,-l.amount);t.push({id:c,symbol:h,base:n,quote:d,baseId:i,quoteId:s,active:!0,lot:u,precision:l,limits:{amount:{min:u,max:Math.pow(10,l.amount)},price:{min:Math.pow(10,-l.price),max:Math.pow(10,l.price)},cost:{min:void 0,max:void 0}},info:a})}}return t}parseTicker(e,t){let i=t.symbol,s=this.milliseconds(),r=this.safeFloat(e,"last"),a=this.safeFloat(e,"change"),o=void 0,n=void 0,d=void 0;if(void 0!==a){let e=a/100;n=r-(o=r/this.sum(1,e)),d=this.sum(r,o)/2}return{symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:o,close:r,last:r,previousClose:void 0,change:n,percentage:a,average:d,baseVolume:this.safeFloat(e,"vol"),quoteVolume:this.safeFloat(e,"quoteVol"),info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTickerRegionQuote(this.extend({coin:i.baseId,quote:i.quoteId},t));return this.parseTicker(s,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=this.options.quoteIds,s={};for(let a=0;a<i.length;a++){let e=i[a],t=await this.webGetQuoteAllcoin({quote:e}),o=Object.keys(t);if(!o.length)throw new r("fetchTickers failed");for(let i=0;i<o.length;i++){let r=o[i],a=t[r],n=r+e;if(n in this.markets_by_id){let e=this.marketsById[n];s[e.symbol]=this.parseTicker({high:a[4],low:a[5],buy:a[2],sell:a[3],last:a[1],change:a[8],vol:a[6],quoteVol:a[7]},e)}}}return s}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=await this.publicGetDepthRegionQuote(this.extend({coin:s.baseId,quote:s.quoteId},i));return this.parseOrderBook(r)}parseTrade(e,t){let i=1e3*parseInt(e.date),s=this.safeFloat(e,"price"),r=this.safeFloat(e,"amount"),a=t.symbol,o=this.costToPrecision(a,s*r);return{timestamp:i,datetime:this.iso8601(i),symbol:a,id:this.safeString(e,"tid"),order:void 0,type:"limit",side:e.type,price:s,amount:r,cost:o,fee:void 0,info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetOrdersRegionQuote(this.extend({coin:r.baseId,quote:r.quoteId},s));return this.parseTrades(a,r,t,i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostBalance(e),i={},s=this.omit(t.data,"uid"),r=Object.keys(s);for(let o=0;o<r.length;o++){let e=r[o],[t,a]=e.split("_"),n=t;t in this.currencies_by_id&&(n=this.currencies_by_id[t].code),n in i||(i[n]={free:void 0,used:void 0,total:void 0}),a="lock"===a?"used":"free",i[n][a]=parseFloat(s[e])}let a=Object.keys(i);for(let o=0;o<a.length;o++){let e=a[o];i[e].total=this.sum(i[e].free,i[e].used)}return this.parseBalance(this.extend({info:t},i))}parseOrder(e,t){let i=t.symbol,s=this.parse8601(e.datetime),r=this.safeFloat(e,"price"),a=this.safeFloat(e,"amount_original"),o=this.safeFloat(e,"amount_outstanding"),n=a-o,d=this.safeString(e,"status");d="cancelled"===d?"canceled":o?"open":"closed";let c=this.safeValue(e,"info",e);return{id:this.safeString(e,"id"),datetime:this.iso8601(s),timestamp:s,lastTradeTimestamp:void 0,status:d,symbol:i,type:"limit",side:e.type,price:r,cost:void 0,amount:a,filled:n,remaining:o,trades:void 0,fee:void 0,info:c}}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n=await this.privatePostTradeAddRegionQuote(this.extend({coin:o.baseId,quote:o.quoteId,type:i,amount:s,price:r},a)),d=n.id.toString(),c=this.parseOrder({id:d,datetime:this.ymdhms(this.milliseconds()),amount_original:s,amount_outstanding:s,price:r,type:i,info:n},o);return this.orders[d]=c,c}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t);return await this.privatePostTradeCancelRegionQuote(this.extend({id:e,coin:s.baseId,quote:s.quoteId},i))}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t),r=await this.privatePostTradeViewRegionQuote(this.extend({id:e,coin:s.baseId,quote:s.quoteId},i));return this.parseOrder(r.data,s)}async fetchOrders(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={coin:r.baseId,quote:r.quoteId};void 0!==t&&(a.since=t/1e3);let o=await this.privatePostTradeListRegionQuote(this.extend(a,s));return this.parseOrders(o.data,r,t,i)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({type:"open"},s))}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o="rest";"web"===t&&(o=t);let n=this.urls.api[o]+"/"+this.implodeParams(e,s),d=this.omit(s,this.extractParams(e));if("public"===t||"web"===t)"web"===t&&(d.t=this.nonce()),Object.keys(d).length&&(n+="?"+this.urlencode(d));else{this.checkRequiredCredentials(),d=this.urlencode(this.extend({key:this.apiKey,nonce:this.nonce()},d));let e=this.hash(this.encode(this.secret));d+="&signature="+this.hmac(this.encode(d),this.encode(e)),"GET"===i?n+="?"+d:(r={"Content-type":"application/x-www-form-urlencoded"},a=d)}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if("string"!=typeof o)return;if(0===o.length)return;if("{"!==o[0])return;let n=JSON.parse(o),d=this.safeValue(n,"result");if(void 0===d)return;if(!0===d)return;const c=this.safeString(n,"code"),h=this.errorMessages,l=this.safeString(h,c,"Unknown Error");throw c in this.exceptions?new this.exceptions[c](this.id+" "+l):new r(this.id+" "+l)}}},801:function(e,t,i){"use strict";const{unCamelCase:s}=i(795);e.exports=(e=>{for(const t in e)e[s(t)]=e[t];return e})(Object.assign({},i(819),i(820),i(795),i(796),i(789),i(802),i(846),i(808),i(847),i(848)))},802:function(e,t,i){"use strict";const s=i(803),r=i(843);e.exports={json:(e,t)=>JSON.stringify(e),unjson:JSON.parse,stringToBinary(e){const t=new Uint8Array(e.length);for(let i=0;i<e.length;i++)t[i]=e.charCodeAt(i);return s.lib.WordArray.create(t)},stringToBase64:e=>s.enc.Latin1.parse(e).toString(s.enc.Base64),utf16ToBase64:e=>s.enc.Utf16.parse(e).toString(s.enc.Base64),base64ToBinary:e=>s.enc.Base64.parse(e),base64ToString:e=>s.enc.Base64.parse(e).toString(s.enc.Utf8),binaryToString:e=>e,binaryConcat:(...e)=>e.reduce((e,t)=>e.concat(t)),urlencode:e=>r.stringify(e),rawencode:e=>r.stringify(e,{encode:!1}),urlencodeBase64:e=>e.replace(/[=]+$/,"").replace(/\+/g,"-").replace(/\//g,"_")}},803:function(e,t,i){var s;s=function(e){return e},e.exports=s(i(43),i(792),i(821),i(822),i(350),i(351),i(352),i(804),i(823),i(805),i(824),i(825),i(826),i(353),i(827),i(220),i(349),i(828),i(829),i(830),i(831),i(832),i(833),i(834),i(835),i(836),i(837),i(838),i(393),i(839),i(840),i(841),i(842))},804:function(e,t,i){var s;s=function(e){return function(t){var i=e,s=i.lib,r=s.WordArray,a=s.Hasher,o=i.algo,n=[],d=[];!function(){function e(e){for(var i=t.sqrt(e),s=2;s<=i;s++)if(!(e%s))return!1;return!0}function i(e){return 4294967296*(e-(0|e))|0}for(var s=2,r=0;r<64;)e(s)&&(r<8&&(n[r]=i(t.pow(s,.5))),d[r]=i(t.pow(s,1/3)),r++),s++}();var c=[],h=o.SHA256=a.extend({_doReset:function(){this._hash=new r.init(n.slice(0))},_doProcessBlock:function(e,t){for(var i=this._hash.words,s=i[0],r=i[1],a=i[2],o=i[3],n=i[4],h=i[5],l=i[6],u=i[7],p=0;p<64;p++){if(p<16)c[p]=0|e[t+p];else{var m=c[p-15],f=(m<<25|m>>>7)^(m<<14|m>>>18)^m>>>3,y=c[p-2],b=(y<<15|y>>>17)^(y<<13|y>>>19)^y>>>10;c[p]=f+c[p-7]+b+c[p-16]}var w=s&r^s&a^r&a,v=(s<<30|s>>>2)^(s<<19|s>>>13)^(s<<10|s>>>22),k=u+((n<<26|n>>>6)^(n<<21|n>>>11)^(n<<7|n>>>25))+(n&h^~n&l)+d[p]+c[p];u=l,l=h,h=n,n=o+k|0,o=a,a=r,r=s,s=k+(v+w)|0}i[0]=i[0]+s|0,i[1]=i[1]+r|0,i[2]=i[2]+a|0,i[3]=i[3]+o|0,i[4]=i[4]+n|0,i[5]=i[5]+h|0,i[6]=i[6]+l|0,i[7]=i[7]+u|0},_doFinalize:function(){var e=this._data,i=e.words,s=8*this._nDataBytes,r=8*e.sigBytes;return i[r>>>5]|=128<<24-r%32,i[14+(r+64>>>9<<4)]=t.floor(s/4294967296),i[15+(r+64>>>9<<4)]=s,e.sigBytes=4*i.length,this._process(),this._hash},clone:function(){var e=a.clone.call(this);return e._hash=this._hash.clone(),e}});i.SHA256=a._createHelper(h),i.HmacSHA256=a._createHmacHelper(h)}(Math),e.SHA256},e.exports=s(i(43))},805:function(e,t,i){var s;s=function(e){return function(){var t=e,i=t.lib.Hasher,s=t.x64,r=s.Word,a=s.WordArray,o=t.algo;function n(){return r.create.apply(r,arguments)}var d=[n(1116352408,3609767458),n(1899447441,602891725),n(3049323471,3964484399),n(3921009573,2173295548),n(961987163,4081628472),n(1508970993,3053834265),n(2453635748,2937671579),n(2870763221,3664609560),n(3624381080,2734883394),n(310598401,1164996542),n(607225278,1323610764),n(1426881987,3590304994),n(1925078388,4068182383),n(2162078206,991336113),n(2614888103,633803317),n(3248222580,3479774868),n(3835390401,2666613458),n(4022224774,944711139),n(264347078,2341262773),n(604807628,2007800933),n(770255983,1495990901),n(1249150122,1856431235),n(1555081692,3175218132),n(1996064986,2198950837),n(2554220882,3999719339),n(2821834349,766784016),n(2952996808,2566594879),n(3210313671,3203337956),n(3336571891,1034457026),n(3584528711,2466948901),n(113926993,3758326383),n(338241895,168717936),n(666307205,1188179964),n(773529912,1546045734),n(1294757372,1522805485),n(1396182291,2643833823),n(1695183700,2343527390),n(1986661051,1014477480),n(2177026350,1206759142),n(2456956037,344077627),n(2730485921,1290863460),n(2820302411,3158454273),n(3259730800,3505952657),n(3345764771,106217008),n(3516065817,3606008344),n(3600352804,1432725776),n(4094571909,1467031594),n(275423344,851169720),n(430227734,3100823752),n(506948616,1363258195),n(659060556,3750685593),n(883997877,3785050280),n(958139571,3318307427),n(1322822218,3812723403),n(1537002063,2003034995),n(1747873779,3602036899),n(1955562222,1575990012),n(2024104815,1125592928),n(2227730452,2716904306),n(2361852424,442776044),n(2428436474,593698344),n(2756734187,3733110249),n(3204031479,2999351573),n(3329325298,3815920427),n(3391569614,3928383900),n(3515267271,566280711),n(3940187606,3454069534),n(4118630271,4000239992),n(116418474,1914138554),n(174292421,2731055270),n(289380356,3203993006),n(460393269,320620315),n(685471733,587496836),n(852142971,1086792851),n(1017036298,365543100),n(1126000580,2618297676),n(1288033470,3409855158),n(1501505948,4234509866),n(1607167915,987167468),n(1816402316,1246189591)],c=[];!function(){for(var e=0;e<80;e++)c[e]=n()}();var h=o.SHA512=i.extend({_doReset:function(){this._hash=new a.init([new r.init(1779033703,4089235720),new r.init(3144134277,2227873595),new r.init(1013904242,4271175723),new r.init(2773480762,1595750129),new r.init(1359893119,2917565137),new r.init(2600822924,725511199),new r.init(528734635,4215389547),new r.init(1541459225,327033209)])},_doProcessBlock:function(e,t){for(var i=this._hash.words,s=i[0],r=i[1],a=i[2],o=i[3],n=i[4],h=i[5],l=i[6],u=i[7],p=s.high,m=s.low,f=r.high,y=r.low,b=a.high,w=a.low,v=o.high,k=o.low,g=n.high,T=n.low,C=h.high,O=h.low,x=l.high,_=l.low,B=u.high,S=u.low,I=p,E=m,M=f,F=y,P=b,A=w,G=v,D=k,R=g,L=T,q=C,N=O,U=x,V=_,H=B,j=S,K=0;K<80;K++){var X=c[K];if(K<16)var W=X.high=0|e[t+2*K],z=X.low=0|e[t+2*K+1];else{var Y=c[K-15],J=Y.high,Q=Y.low,Z=(J>>>1|Q<<31)^(J>>>8|Q<<24)^J>>>7,$=(Q>>>1|J<<31)^(Q>>>8|J<<24)^(Q>>>7|J<<25),ee=c[K-2],te=ee.high,ie=ee.low,se=(te>>>19|ie<<13)^(te<<3|ie>>>29)^te>>>6,re=(ie>>>19|te<<13)^(ie<<3|te>>>29)^(ie>>>6|te<<26),ae=c[K-7],oe=ae.high,ne=ae.low,de=c[K-16],ce=de.high,he=de.low;W=(W=(W=Z+oe+((z=$+ne)>>>0<$>>>0?1:0))+se+((z=z+re)>>>0<re>>>0?1:0))+ce+((z=z+he)>>>0<he>>>0?1:0);X.high=W,X.low=z}var le,ue=R&q^~R&U,pe=L&N^~L&V,me=I&M^I&P^M&P,fe=E&F^E&A^F&A,ye=(I>>>28|E<<4)^(I<<30|E>>>2)^(I<<25|E>>>7),be=(E>>>28|I<<4)^(E<<30|I>>>2)^(E<<25|I>>>7),we=(R>>>14|L<<18)^(R>>>18|L<<14)^(R<<23|L>>>9),ve=(L>>>14|R<<18)^(L>>>18|R<<14)^(L<<23|R>>>9),ke=d[K],ge=ke.high,Te=ke.low,Ce=H+we+((le=j+ve)>>>0<j>>>0?1:0),Oe=be+fe;H=U,j=V,U=q,V=N,q=R,N=L,R=G+(Ce=(Ce=(Ce=Ce+ue+((le=le+pe)>>>0<pe>>>0?1:0))+ge+((le=le+Te)>>>0<Te>>>0?1:0))+W+((le=le+z)>>>0<z>>>0?1:0))+((L=D+le|0)>>>0<D>>>0?1:0)|0,G=P,D=A,P=M,A=F,M=I,F=E,I=Ce+(ye+me+(Oe>>>0<be>>>0?1:0))+((E=le+Oe|0)>>>0<le>>>0?1:0)|0}m=s.low=m+E,s.high=p+I+(m>>>0<E>>>0?1:0),y=r.low=y+F,r.high=f+M+(y>>>0<F>>>0?1:0),w=a.low=w+A,a.high=b+P+(w>>>0<A>>>0?1:0),k=o.low=k+D,o.high=v+G+(k>>>0<D>>>0?1:0),T=n.low=T+L,n.high=g+R+(T>>>0<L>>>0?1:0),O=h.low=O+N,h.high=C+q+(O>>>0<N>>>0?1:0),_=l.low=_+V,l.high=x+U+(_>>>0<V>>>0?1:0),S=u.low=S+j,u.high=B+H+(S>>>0<j>>>0?1:0)},_doFinalize:function(){var e=this._data,t=e.words,i=8*this._nDataBytes,s=8*e.sigBytes;return t[s>>>5]|=128<<24-s%32,t[30+(s+128>>>10<<5)]=Math.floor(i/4294967296),t[31+(s+128>>>10<<5)]=i,e.sigBytes=4*t.length,this._process(),this._hash.toX32()},clone:function(){var e=i.clone.call(this);return e._hash=this._hash.clone(),e},blockSize:32});t.SHA512=i._createHelper(h),t.HmacSHA512=i._createHmacHelper(h)}(),e.SHA512},e.exports=s(i(43),i(792))},806:function(e,t,i){"use strict";var s=Object.prototype.hasOwnProperty,r=function(){for(var e=[],t=0;t<256;++t)e.push("%"+((t<16?"0":"")+t.toString(16)).toUpperCase());return e}();t.arrayToObject=function(e,t){for(var i=t&&t.plainObjects?Object.create(null):{},s=0;s<e.length;++s)void 0!==e[s]&&(i[s]=e[s]);return i},t.merge=function(e,i,r){if(!i)return e;if("object"!=typeof i){if(Array.isArray(e))e.push(i);else{if("object"!=typeof e)return[e,i];(r.plainObjects||r.allowPrototypes||!s.call(Object.prototype,i))&&(e[i]=!0)}return e}if("object"!=typeof e)return[e].concat(i);var a=e;return Array.isArray(e)&&!Array.isArray(i)&&(a=t.arrayToObject(e,r)),Array.isArray(e)&&Array.isArray(i)?(i.forEach(function(i,a){s.call(e,a)?e[a]&&"object"==typeof e[a]?e[a]=t.merge(e[a],i,r):e.push(i):e[a]=i}),e):Object.keys(i).reduce(function(e,a){var o=i[a];return s.call(e,a)?e[a]=t.merge(e[a],o,r):e[a]=o,e},a)},t.assign=function(e,t){return Object.keys(t).reduce(function(e,i){return e[i]=t[i],e},e)},t.decode=function(e){try{return decodeURIComponent(e.replace(/\+/g," "))}catch(t){return e}},t.encode=function(e){if(0===e.length)return e;for(var t="string"==typeof e?e:String(e),i="",s=0;s<t.length;++s){var a=t.charCodeAt(s);45===a||46===a||95===a||126===a||a>=48&&a<=57||a>=65&&a<=90||a>=97&&a<=122?i+=t.charAt(s):a<128?i+=r[a]:a<2048?i+=r[192|a>>6]+r[128|63&a]:a<55296||a>=57344?i+=r[224|a>>12]+r[128|a>>6&63]+r[128|63&a]:(s+=1,a=65536+((1023&a)<<10|1023&t.charCodeAt(s)),i+=r[240|a>>18]+r[128|a>>12&63]+r[128|a>>6&63]+r[128|63&a])}return i},t.compact=function(e){for(var t=[{obj:{o:e},prop:"o"}],i=[],s=0;s<t.length;++s)for(var r=t[s],a=r.obj[r.prop],o=Object.keys(a),n=0;n<o.length;++n){var d=o[n],c=a[d];"object"==typeof c&&null!==c&&-1===i.indexOf(c)&&(t.push({obj:a,prop:d}),i.push(c))}return function(e){for(var t;e.length;){var i=e.pop();if(t=i.obj[i.prop],Array.isArray(t)){for(var s=[],r=0;r<t.length;++r)void 0!==t[r]&&s.push(t[r]);i.obj[i.prop]=s}}return t}(t)},t.isRegExp=function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},t.isBuffer=function(e){return null!==e&&void 0!==e&&!!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e))}},807:function(e,t,i){"use strict";var s=String.prototype.replace,r=/%20/g;e.exports={default:"RFC3986",formatters:{RFC1738:function(e){return s.call(e,r,"+")},RFC3986:function(e){return e}},RFC1738:"RFC1738",RFC3986:"RFC3986"}},808:function(e,t,i){"use strict";const s=Date.now,r=setTimeout,a=(e,t,i=r,o=s()+t)=>{let n=()=>{},d=!0,c=i(()=>{d=!0;const t=o-s();t>0?n=a(e,t,i,o):e()},t);return function(){d&&(d=!1,clearTimeout(c)),n()}};class o extends Error{constructor(){super("timed out"),this.constructor=o,this.__proto__=o.prototype,this.message="timed out"}}e.exports={now:s,setTimeout_safe:a,sleep:e=>new Promise(t=>a(t,e)),TimedOut:o,timeout:async(e,t)=>{let i=()=>{};const s=new Promise(t=>i=a(t,e));try{return await Promise.race([t,s.then(()=>{throw new o})])}finally{i()}}}},809:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"_1btcxe",name:"1BTCXE",countries:["PA"],comment:"Crypto Capital API",has:{CORS:!0,withdraw:!0},timeframes:{"1d":"1year"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766049-2b294408-5ecc-11e7-85cc-adaff013dc1a.jpg",api:"https://1btcxe.com/api",www:"https://1btcxe.com",doc:"https://1btcxe.com/api-docs.php"},api:{public:{get:["stats","historical-prices","order-book","transactions"]},private:{post:["balances-and-info","open-orders","user-transactions","btc-deposit-address/get","btc-deposit-address/new","deposits/get","withdrawals/get","orders/new","orders/edit","orders/cancel","orders/status","withdrawals/new"]}}})}async fetchMarkets(){return[{id:"USD",symbol:"BTC/USD",base:"BTC",quote:"USD"},{id:"EUR",symbol:"BTC/EUR",base:"BTC",quote:"EUR"},{id:"CNY",symbol:"BTC/CNY",base:"BTC",quote:"CNY"},{id:"RUB",symbol:"BTC/RUB",base:"BTC",quote:"RUB"},{id:"CHF",symbol:"BTC/CHF",base:"BTC",quote:"CHF"},{id:"JPY",symbol:"BTC/JPY",base:"BTC",quote:"JPY"},{id:"GBP",symbol:"BTC/GBP",base:"BTC",quote:"GBP"},{id:"CAD",symbol:"BTC/CAD",base:"BTC",quote:"CAD"},{id:"AUD",symbol:"BTC/AUD",base:"BTC",quote:"AUD"},{id:"AED",symbol:"BTC/AED",base:"BTC",quote:"AED"},{id:"BGN",symbol:"BTC/BGN",base:"BTC",quote:"BGN"},{id:"CZK",symbol:"BTC/CZK",base:"BTC",quote:"CZK"},{id:"DKK",symbol:"BTC/DKK",base:"BTC",quote:"DKK"},{id:"HKD",symbol:"BTC/HKD",base:"BTC",quote:"HKD"},{id:"HRK",symbol:"BTC/HRK",base:"BTC",quote:"HRK"},{id:"HUF",symbol:"BTC/HUF",base:"BTC",quote:"HUF"},{id:"ILS",symbol:"BTC/ILS",base:"BTC",quote:"ILS"},{id:"INR",symbol:"BTC/INR",base:"BTC",quote:"INR"},{id:"MUR",symbol:"BTC/MUR",base:"BTC",quote:"MUR"},{id:"MXN",symbol:"BTC/MXN",base:"BTC",quote:"MXN"},{id:"NOK",symbol:"BTC/NOK",base:"BTC",quote:"NOK"},{id:"NZD",symbol:"BTC/NZD",base:"BTC",quote:"NZD"},{id:"PLN",symbol:"BTC/PLN",base:"BTC",quote:"PLN"},{id:"RON",symbol:"BTC/RON",base:"BTC",quote:"RON"},{id:"SEK",symbol:"BTC/SEK",base:"BTC",quote:"SEK"},{id:"SGD",symbol:"BTC/SGD",base:"BTC",quote:"SGD"},{id:"THB",symbol:"BTC/THB",base:"BTC",quote:"THB"},{id:"TRY",symbol:"BTC/TRY",base:"BTC",quote:"TRY"},{id:"ZAR",symbol:"BTC/ZAR",base:"BTC",quote:"ZAR"}]}async fetchBalance(e={}){let t=(await this.privatePostBalancesAndInfo())["balances-and-info"],i={info:t},s=Object.keys(this.currencies);for(let r=0;r<s.length;r++){let e=s[r],a=this.account();a.free=this.safeFloat(t.available,e,0),a.used=this.safeFloat(t.on_hold,e,0),a.total=this.sum(a.free,a.used),i[e]=a}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){let s=await this.publicGetOrderBook(this.extend({currency:this.marketId(e)},i));return this.parseOrderBook(s["order-book"],void 0,"bid","ask","price","order_amount")}async fetchTicker(e,t={}){let i=(await this.publicGetStats(this.extend({currency:this.marketId(e)},t))).stats,s=this.safeFloat(i,"last_price");return{symbol:e,timestamp:void 0,datetime:void 0,high:this.safeFloat(i,"max"),low:this.safeFloat(i,"min"),bid:this.safeFloat(i,"bid"),bidVolume:void 0,ask:this.safeFloat(i,"ask"),askVolume:void 0,vwap:void 0,open:this.safeFloat(i,"open"),close:s,last:s,previousClose:void 0,change:this.safeFloat(i,"daily_change"),percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:this.safeFloat(i,"total_btc_traded"),info:i}}parseOHLCV(e,t,i="1d",s,r){return[this.parse8601(e.date+" 00:00:00"),void 0,void 0,void 0,parseFloat(e.price),void 0]}async fetchOHLCV(e,t="1d",i,s,r={}){let a=this.market(e),o=await this.publicGetHistoricalPrices(this.extend({currency:a.id,timeframe:this.timeframes[t]},r)),n=this.omit(o["historical-prices"],"request_currency");return this.parseOHLCVs(n,a,t,i,s)}parseTrade(e,t){let i=1e3*parseInt(e.timestamp);return{id:e.id,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:void 0,type:void 0,side:e.maker_type,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"amount")}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetTransactions(this.extend({currency:r.id},s)),o=this.omit(a.transactions,"request_currency");return this.parseTrades(o,r,t,i)}async createOrder(e,t,i,s,r,a={}){let o={side:i,type:t,currency:this.marketId(e),amount:s};"limit"===t&&(o.limit_price=r);let n=await this.privatePostOrdersNew(this.extend(o,a));return{info:n,id:n}}async cancelOrder(e,t,i={}){return await this.privatePostOrdersCancel({id:e})}async withdraw(e,t,i,s,r={}){this.checkAddress(i),await this.loadMarkets();let a=await this.privatePostWithdrawalsNew(this.extend({currency:e,amount:parseFloat(t),address:i},r));return{info:a,id:a.result.uuid}}sign(e,t="public",i="GET",s={},a,o){if("cryptocapital"===this.id)throw new r(this.id+" is an abstract base API for _1btcxe");let n=this.urls.api+"/"+e;if("public"===t)Object.keys(s).length&&(n+="?"+this.urlencode(s));else{this.checkRequiredCredentials();let e=this.extend({api_key:this.apiKey,nonce:this.nonce()},s),t=this.json(e);e.signature=this.hmac(this.encode(t),this.encode(this.secret)),o=this.json(e),a={"Content-Type":"application/json"}}return{url:n,method:i,body:o,headers:a}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("errors"in n){let e=[];for(let t=0;t<n.errors.length;t++){let i=n.errors[t];e.push(i.code+": "+i.message)}throw e=e.join(" "),new r(this.id+" "+e)}return n}}},810:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,AuthenticationError:a,InvalidNonce:o}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bitsane",name:"Bitsane",countries:["IE"],has:{fetchCurrencies:!0,fetchTickers:!0,fetchOpenOrders:!0,fetchDepositAddress:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/41387105-d86bf4c6-6f8d-11e8-95ea-2fa943872955.jpg",api:"https://bitsane.com/api",www:"https://bitsane.com",doc:"https://bitsane.com/info-api",fees:"https://bitsane.com/fees"},api:{public:{get:["assets/currencies","assets/pairs","ticker","orderbook","trades"]},private:{post:["balances","order/cancel","order/new","order/status","orders","orders/history","deposit/address","withdraw","withdrawal/status","transactions/history","vouchers","vouchers/create","vouchers/redeem"]}},fees:{trading:{maker:.0015,taker:.0025}},exceptions:{3:a,4:a,5:a,6:o,7:a,8:o,9:a,10:a,11:a},options:{defaultCurrencyPrecision:2}})}async fetchCurrencies(e={}){let t=await this.publicGetAssetsCurrencies(e),i=Object.keys(t),s={};for(let r=0;r<i.length;r++){let e=i[r],a=t[e],o=this.safeInteger(a,"precision",this.options.defaultCurrencyPrecision),n=this.commonCurrencyCode(e),d=this.safeValue(a,"withdrawal",!0),c=this.safeValue(a,"deposit",!0),h=!0;d&&c||(h=!1),s[n]={id:e,code:n,name:this.safeString(a,"full_name",n),active:h,precision:o,funding:{withdraw:{active:d,fee:this.safeValue(a,"withdrawal_fee")},deposit:{active:c,fee:this.safeValue(a,"deposit_fee")}},limits:{amount:{min:this.safeFloat(a,"minAmountTrade"),max:Math.pow(10,o)},price:{min:Math.pow(10,-o),max:Math.pow(10,o)},cost:{min:void 0,max:void 0}},info:a}}return s}async fetchMarkets(){let e=await this.publicGetAssetsPairs(),t=[],i=Object.keys(e);for(let s=0;s<i.length;s++){let r=i[s],a=e[r],o=this.commonCurrencyCode(a.base),n=this.commonCurrencyCode(a.quote),d=o+"/"+n,c=this.safeValue(a,"limits"),h=void 0,l=void 0;void 0!==c&&(h=this.safeFloat(c,"minimum"),l=this.safeFloat(c,"maximum"));let u={amount:parseInt(a.precision),price:8},p=Math.pow(10,-u.amount);t.push({id:r,symbol:d,base:o,quote:n,baseId:a.base,quoteId:a.quote,active:!0,lot:p,precision:u,limits:{amount:{min:h,max:l},price:{min:Math.pow(10,-u.price),max:Math.pow(10,u.price)},cost:{min:void 0,max:void 0}},info:r})}return t}parseTicker(e,t){let i=t.symbol,s=this.milliseconds(),r=this.safeFloat(e,"last");return{symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(e,"high24hr"),low:this.safeFloat(e,"low24hr"),bid:this.safeFloat(e,"highestBid"),bidVolume:void 0,ask:this.safeFloat(e,"lowestAsk"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:this.safeFloat(e,"percentChange"),percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"baseVolume"),quoteVolume:this.safeFloat(e,"quoteVolume"),info:e}}async fetchTicker(e,t={}){return(await this.fetchTickers([e],t))[e]}async fetchTickers(e,t={}){await this.loadMarkets();let i={};if(e){let t=this.marketIds(e);i.pairs=t.join(",")}let s=await this.publicGetTicker(this.extend(i,t)),r=Object.keys(s),a={};for(let o=0;o<r.length;o++){let e=r[o],t=this.safeValue(this.marketsById,e);if(void 0===t)continue;let i=t.symbol,n=s[e];a[i]=this.parseTicker(n,t)}return a}async fetchOrderBook(e,t={}){await this.loadMarkets();let i=await this.publicGetOrderbook(this.extend({pair:this.marketId(e)},t));return this.parseOrderBook(i.result,void 0,"bids","asks","price","amount")}parseTrade(e,t){let i=t.symbol,s=1e3*parseInt(e.timestamp),r=parseFloat(e.price),a=parseFloat(e.amount),o=this.costToPrecision(i,r*a);return{timestamp:s,datetime:this.iso8601(s),symbol:i,id:this.safeString(e,"tid"),order:void 0,type:void 0,side:void 0,price:r,amount:a,cost:parseFloat(o),fee:void 0,info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pair:r.id};void 0!==t&&(a.since=parseInt(t/1e3)),void 0!==i&&(a.limit=i);let o=await this.publicGetTrades(this.extend(a,s));return this.parseTrades(o.result,r,t,i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostBalances(e),i={info:t},s=t.result,r=Object.keys(s);for(let a=0;a<r.length;a++){let e=r[a],t=s[e],o=e;o=e in this.currencies_by_id?this.currencies_by_id[e].code:this.commonCurrencyCode(o);let n={free:parseFloat(t.amount),used:parseFloat(t.locked),total:parseFloat(t.total)};i[o]=n}return this.parseBalance(i)}parseOrder(e,t){let i=void 0;t||(t=this.safeValue(this.marketsById,e.pair)),t&&(i=t.symbol);let s=1e3*this.safeInteger(e,"timestamp"),r=parseFloat(e.price),a=this.safeFloat(e,"original_amount"),o=this.safeFloat(e,"executed_amount"),n=this.safeFloat(e,"remaining_amount"),d="closed";return e.is_cancelled?d="canceled":e.is_live&&(d="open"),{id:this.safeString(e,"id"),datetime:this.iso8601(s),timestamp:s,status:d,symbol:i,type:this.safeString(e,"type"),side:this.safeString(e,"side"),price:r,cost:void 0,amount:a,filled:o,remaining:n,trades:void 0,fee:void 0,info:this.safeValue(e,"info",e)}}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n={pair:o.id,amount:s,type:t,side:i};"market"!==t&&(n.price=r);let d=await this.privatePostOrderNew(this.extend(n,a));n.id=d.result.order_id,n.timestamp=this.seconds(),n.original_amount=n.amount,n.info=d;let c=(n=this.parseOrder(n,o)).id;return this.orders[c]=n,n}async cancelOrder(e,t,i={}){let s=await this.privatePostOrderCancel(this.extend({order_id:e},i));return this.parseOrder(s.result)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostOrderStatus(this.extend({order_id:e},i));return this.parseOrder(s.result)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=await this.privatePostOrders();return this.parseOrders(r.result,void 0,t,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privatePostDepositAddress(this.extend({currency:i.id},t));return{currency:e,address:this.safeString(s.result,"address"),info:s}}async withdraw(e,t,i,s,r={}){await this.loadMarkets();let a={currency:this.currency(e).id,amount:t,address:i};s&&(a.additional=s);let o=await this.privatePostWithdraw(this.extend(a,r));return{id:o.result.withdrawal_id,info:o}}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+t+"/"+e;return"public"===t?Object.keys(s).length&&(o+="?"+this.urlencode(s)):(this.checkRequiredCredentials(),a=this.extend({nonce:this.nonce()},s),a=this.stringToBase64(this.json(a)),r={"X-BS-APIKEY":this.apiKey,"X-BS-PAYLOAD":a,"X-BS-SIGNATURE":this.hmac(this.encode(a),this.encode(this.secret),"sha384")}),{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if("string"==typeof o&&!(o.length<2||"{"!==o[0]&&"["!==o[0])){let e=JSON.parse(o),t=this.safeString(e,"statusCode");if(void 0!==t&&"0"!==t){const i=this.id+" "+this.json(e),s=this.exceptions;throw t in s?new s[t](i):new r(this.id+" "+this.json(e))}return e}}}},811:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,ExchangeNotAvailable:a,AuthenticationError:o,InvalidOrder:n,InsufficientFunds:d,OrderNotFound:c,DDoSProtection:h,PermissionDenied:l,AddressPending:u}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bittrex",name:"Bittrex",countries:["US"],version:"v1.1",rateLimit:1500,has:{CORS:!0,createMarketOrder:!1,fetchDepositAddress:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchMyTrades:!1,fetchOHLCV:!0,fetchOrder:!0,fetchOpenOrders:!0,fetchTickers:!0,withdraw:!0},timeframes:{"1m":"oneMin","5m":"fiveMin","30m":"thirtyMin","1h":"hour","1d":"day"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766352-cf0b3c26-5ed5-11e7-82b7-f3826b7a97d8.jpg",api:{public:"https://bittrex.com/api",account:"https://bittrex.com/api",market:"https://bittrex.com/api",v2:"https://bittrex.com/api/v2.0/pub"},www:"https://bittrex.com",doc:["https://bittrex.com/Home/Api","https://www.npmjs.org/package/node.bittrex.api"],fees:["https://bittrex.com/Fees","https://support.bittrex.com/hc/en-us/articles/115000199651-What-fees-does-Bittrex-charge-"]},api:{v2:{get:["currencies/GetBTCPrice","market/GetTicks","market/GetLatestTick","Markets/GetMarketSummaries","market/GetLatestTick"]},public:{get:["currencies","markethistory","markets","marketsummaries","marketsummary","orderbook","ticker"]},account:{get:["balance","balances","depositaddress","deposithistory","order","orders","orderhistory","withdrawalhistory","withdraw"]},market:{get:["buylimit","buymarket","cancel","openorders","selllimit","sellmarket"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:.0025,taker:.0025},funding:{tierBased:!1,percentage:!1,withdraw:{BTC:.001,LTC:.01,DOGE:2,VTC:.02,PPC:.02,FTC:.2,RDD:2,NXT:2,DASH:.002,POT:.002},deposit:{BTC:0,LTC:0,DOGE:0,VTC:0,PPC:0,FTC:0,RDD:0,NXT:0,DASH:0,POT:0}}},exceptions:{APISIGN_NOT_PROVIDED:o,INVALID_SIGNATURE:o,INVALID_CURRENCY:r,INVALID_PERMISSION:o,INSUFFICIENT_FUNDS:d,QUANTITY_NOT_PROVIDED:n,MIN_TRADE_REQUIREMENT_NOT_MET:n,ORDER_NOT_OPEN:c,INVALID_ORDER:n,UUID_INVALID:c,RATE_NOT_PROVIDED:n,WHITELIST_VIOLATION_IP:l},options:{pricePrecisionByCode:{USD:3},parseOrderStatus:!1,hasAlreadyAuthenticatedSuccessfully:!1},commonCurrencies:{BITS:"SWIFT",CPC:"CapriCoin"}})}costToPrecision(e,t){return this.truncate(parseFloat(t),this.markets[e].precision.price)}feeToPrecision(e,t){return this.truncate(parseFloat(t),this.markets[e].precision.price)}async fetchMarkets(){let e=await this.v2GetMarketsGetMarketSummaries(),t=[];for(let i=0;i<e.result.length;i++){let s=e.result[i].Market,r=s.MarketName,a=s.MarketCurrency,o=s.BaseCurrency,n=this.commonCurrencyCode(a),d=this.commonCurrencyCode(o),c=n+"/"+d,h=8;d in this.options.pricePrecisionByCode&&(h=this.options.pricePrecisionByCode[d]);let l={amount:8,price:h},u=s.IsActive||"true"===s.IsActive;t.push({id:r,symbol:c,base:n,quote:d,baseId:a,quoteId:o,active:u,info:s,precision:l,limits:{amount:{min:s.MinTradeSize,max:void 0},price:{min:Math.pow(10,-l.price),max:void 0}}})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.accountGetBalances(e)).result,i={info:t},s=this.indexBy(t,"Currency"),r=Object.keys(s);for(let a=0;a<r.length;a++){let e=r[a],t=this.commonCurrencyCode(e),o=this.account(),n=s[e],d=parseFloat(n.Available),c=parseFloat(n.Balance),h=c-d;o.free=d,o.used=h,o.total=c,i[t]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetOrderbook(this.extend({market:this.marketId(e),type:"both"},i)),r=s.result;return"type"in i&&("buy"===i.type?r={buy:s.result,sell:[]}:"sell"===i.type&&(r={buy:[],sell:s.result})),this.parseOrderBook(r,void 0,"buy","sell","Rate","Quantity")}parseTicker(e,t){let i=this.safeString(e,"TimeStamp"),s=void 0;"string"==typeof i&&i.length>0&&(i=this.parse8601(i),s=this.iso8601(i));let r=void 0;t&&(r=t.symbol);let a=this.safeFloat(e,"PrevDay"),o=this.safeFloat(e,"Last"),n=void 0,d=void 0;return void 0!==o&&void 0!==a&&(n=o-a,a>0&&(d=n/a*100)),{symbol:r,timestamp:i,datetime:s,high:this.safeFloat(e,"High"),low:this.safeFloat(e,"Low"),bid:this.safeFloat(e,"Bid"),bidVolume:void 0,ask:this.safeFloat(e,"Ask"),askVolume:void 0,vwap:void 0,open:a,close:o,last:o,previousClose:void 0,change:n,percentage:d,average:void 0,baseVolume:this.safeFloat(e,"Volume"),quoteVolume:this.safeFloat(e,"BaseVolume"),info:e}}async fetchCurrencies(e={}){let t=(await this.publicGetCurrencies(e)).result,i={};for(let s=0;s<t.length;s++){let e=t[s],r=e.Currency,a=this.commonCurrencyCode(r),o=8,n=this.safeValue(e,"BaseAddress");i[a]={id:r,code:a,address:n,info:e,type:e.CoinType,name:e.CurrencyLong,active:e.IsActive,fee:this.safeFloat(e,"TxFee"),precision:o,limits:{amount:{min:Math.pow(10,-o),max:Math.pow(10,o)},price:{min:Math.pow(10,-o),max:Math.pow(10,o)},cost:{min:void 0,max:void 0},withdraw:{min:e.TxFee,max:Math.pow(10,o)}}}}return i}async fetchTickers(e,t={}){await this.loadMarkets();let i=(await this.publicGetMarketsummaries(t)).result,s={};for(let r=0;r<i.length;r++){let e=i[r],t=e.MarketName,a=void 0,o=t;s[o=t in this.markets_by_id?(a=this.markets_by_id[t]).symbol:this.parseSymbol(t)]=this.parseTicker(e,a)}return s}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=(await this.publicGetMarketsummary(this.extend({market:i.id},t))).result[0];return this.parseTicker(s,i)}parseTrade(e,t){let i=this.parse8601(e.TimeStamp+"+00:00"),s=void 0;"BUY"===e.OrderType?s="buy":"SELL"===e.OrderType&&(s="sell");let r=void 0;return"Id"in e&&(r=e.Id.toString()),{id:r,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:"limit",side:s,price:this.safeFloat(e,"Price"),amount:this.safeFloat(e,"Quantity")}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let a=this.market(e),o=await this.publicGetMarkethistory(this.extend({market:a.id},s));if("result"in o&&void 0!==o.result)return this.parseTrades(o.result,a,t,i);throw new r(this.id+" fetchTrades() returned undefined response")}parseOHLCV(e,t,i="1d",s,r){return[this.parse8601(e.T+"+00:00"),e.O,e.H,e.L,e.C,e.V]}async fetchOHLCV(e,t="1m",i,s,a={}){await this.loadMarkets();let o=this.market(e),n={tickInterval:this.timeframes[t],marketName:o.id},d=await this.v2GetMarketGetTicks(this.extend(n,a));if("result"in d&&d.result)return this.parseOHLCVs(d.result,o,t,i,s);throw new r(this.id+" returned an empty or unrecognized response: "+this.json(d))}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r={},a=void 0;void 0!==e&&(a=this.market(e),r.market=a.id);let o=await this.marketGetOpenorders(this.extend(r,s)),n=this.parseOrders(o.result,a,t,i);return this.filterBySymbol(n,e)}async createOrder(e,t,i,s,a,o={}){if("limit"!==t)throw new r(this.id+" allows limit orders only");await this.loadMarkets();let n=this.market(e),d="marketGet"+this.capitalize(i)+t,c={market:n.id,quantity:this.amountToPrecision(e,s),rate:this.priceToPrecision(e,a)},h=await this[d](this.extend(c,o)),l=this.getOrderIdField();return{info:h,id:h.result[l],symbol:e,type:t,side:i,status:"open"}}getOrderIdField(){return"uuid"}async cancelOrder(e,t,i={}){await this.loadMarkets();let s={};s[this.getOrderIdField()]=e;let r=await this.marketGetCancel(this.extend(s,i));return this.parseOrder(r)}parseSymbol(e){let[t,i]=e.split("-");return(i=this.commonCurrencyCode(i))+"/"+(t=this.commonCurrencyCode(t))}parseOrder(e,t){let i=this.safeString(e,"OrderType");void 0===i&&(i=this.safeString(e,"Type"));let s="LIMIT_SELL"===i||"SELL"===i;("LIMIT_BUY"===i||"BUY"===i)&&(i="buy"),s&&(i="sell");let r=void 0;"Opened"in e&&e.Opened&&(r="open"),"Closed"in e&&e.Closed&&(r="closed"),"CancelInitiated"in e&&e.CancelInitiated&&(r="canceled"),"Status"in e&&this.options.parseOrderStatus&&(r=this.parseOrderStatus(e.Status));let a=void 0;if("Exchange"in e){let i=e.Exchange;a=i in this.markets_by_id?(t=this.markets_by_id[i]).symbol:this.parseSymbol(i)}else void 0!==t&&(a=t.symbol);let o=void 0;"Opened"in e&&(o=this.parse8601(e.Opened+"+00:00")),"Created"in e&&(o=this.parse8601(e.Created+"+00:00"));let n=void 0;"TimeStamp"in e&&void 0!==e.TimeStamp&&(n=this.parse8601(e.TimeStamp+"+00:00")),"Closed"in e&&void 0!==e.Closed&&(n=this.parse8601(e.Closed+"+00:00")),void 0===o&&(o=n);let d=void 0!==o?this.iso8601(o):void 0,c=void 0,h=void 0;if("Commission"in e?h="Commission":"CommissionPaid"in e&&(h="CommissionPaid"),h)if(c={cost:parseFloat(e[h])},void 0!==t)c.currency=t.quote;else if(void 0!==a){let e=a.split("/")[1];e in this.currencies_by_id?c.currency=this.currencies_by_id[e].code:c.currency=this.commonCurrencyCode(e)}let l=this.safeFloat(e,"Limit"),u=this.safeFloat(e,"Price"),p=this.safeFloat(e,"Quantity"),m=this.safeFloat(e,"QuantityRemaining"),f=void 0;void 0!==p&&void 0!==m&&(f=p-m),u||l&&f&&(u=l*f),l||u&&f&&(l=u/f);let y=this.safeFloat(e,"PricePerUnit"),b=this.safeString(e,"OrderUuid");return void 0===b&&(b=this.safeString(e,"OrderId")),{info:e,id:b,timestamp:o,datetime:d,lastTradeTimestamp:n,symbol:a,type:"limit",side:i,price:l,cost:u,average:y,amount:p,filled:f,remaining:m,status:r,fee:c}}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=void 0;try{let t=this.getOrderIdField(),r={};r[t]=e,s=await this.accountGetOrder(this.extend(r,i))}catch(e){if(this.last_json_response){if("UUID_INVALID"===this.safeString(this.last_json_response,"message"))throw new c(this.id+" fetchOrder() error: "+this.last_http_response)}throw e}if(!s.result)throw new c(this.id+" order "+e+" not found");return this.parseOrder(s.result)}async fetchClosedOrders(e,t,i,s={}){await this.loadMarkets();let r={},a=void 0;void 0!==e&&(a=this.market(e),r.market=a.id);let o=await this.accountGetOrderhistory(this.extend(r,s)),n=this.parseOrders(o.result,a,t,i);return void 0!==e?this.filterBySymbol(n,e):n}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.accountGetDepositaddress(this.extend({currency:i.id},t)),r=this.safeString(s.result,"Address"),a=this.safeString(s,"message");if(!r||"ADDRESS_GENERATING"===a)throw new u(this.id+" the address for "+e+" is being generated (pending, not ready yet, retry again later)");let o=void 0;return"XRP"!==e&&"XLM"!==e||(o=r,r=i.address),this.checkAddress(r),{currency:e,address:r,tag:o,info:s}}async withdraw(e,t,i,s,r={}){this.checkAddress(i),await this.loadMarkets();let a={currency:this.currency(e).id,quantity:t,address:i};s&&(a.paymentid=s);let o=await this.accountGetWithdraw(this.extend(a,r)),n=void 0;return"result"in o&&"uuid"in o.result&&(n=o.result.uuid),{info:o,id:n}}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t]+"/";if("v2"!==t&&(o+=this.version+"/"),"public"===t)o+=t+"/"+i.toLowerCase()+e,Object.keys(s).length&&(o+="?"+this.urlencode(s));else if("v2"===t)o+=e,Object.keys(s).length&&(o+="?"+this.urlencode(s));else{this.checkRequiredCredentials();let a=this.nonce();o+=t+"/",("account"===t&&"withdraw"!==e||"openorders"===e)&&(o+=i.toLowerCase()),o+=e+"?"+this.urlencode(this.extend({nonce:a,apikey:this.apiKey},s)),r={apisign:this.hmac(this.encode(o),this.encode(this.secret),"sha512")}}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,d,l){if("{"===l[0]){let e=JSON.parse(l),t=this.safeValue(e,"success");if(void 0===t)throw new r(this.id+": malformed response: "+this.json(e));if("string"==typeof t&&(t="true"===t),!t){const t=this.safeString(e,"message"),s=this.id+" "+this.json(e),d=this.exceptions;if("APIKEY_INVALID"===t)throw this.options.hasAlreadyAuthenticatedSuccessfully?new h(s):new o(s);if("DUST_TRADE_DISALLOWED_MIN_VALUE_50K_SAT"===t)throw new n(this.id+" order cost should be over 50k satoshi "+this.json(e));if("INVALID_ORDER"===t){let t="cancel";if(i.indexOf(t)>=0){let t=i.split("&"),s=void 0;for(let e=0;e<t.length;e++){let i=t[e].split("=");if("uuid"===i[0]){s=i[1];break}}throw new c(void 0!==s?this.id+" cancelOrder "+s+" "+this.json(e):this.id+" cancelOrder "+this.json(e))}}if(t in d)throw new d[t](s);if(void 0!==t){if(t.indexOf("throttled. Try again")>=0)throw new h(s);if(t.indexOf("problem")>=0)throw new a(s)}throw new r(s)}}}async request(e,t="public",i="GET",s={},r,a){let o=await this.fetch2(e,t,i,s,r,a);return"account"!==t&&"market"!==t||(this.options.hasAlreadyAuthenticatedSuccessfully=!0),o}}},812:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,InsufficientFunds:a,InvalidOrder:o,AuthenticationError:n,PermissionDenied:d,InvalidNonce:c,OrderNotFound:h,DDoSProtection:l}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"btcbox",name:"BtcBox",countries:["JP"],rateLimit:1e3,version:"v1",has:{CORS:!1,fetchOrder:!0,fetchOrders:!0,fetchOpenOrders:!0,fetchTickers:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/31275803-4df755a8-aaa1-11e7-9abb-11ec2fad9f2d.jpg",api:"https://www.btcbox.co.jp/api",www:"https://www.btcbox.co.jp/",doc:"https://www.btcbox.co.jp/help/asm"},api:{public:{get:["depth","orders","ticker","allticker"]},private:{post:["balance","trade_add","trade_cancel","trade_list","trade_view","wallet"]}},markets:{"BTC/JPY":{id:"BTC/JPY",symbol:"BTC/JPY",base:"BTC",quote:"JPY"}},exceptions:{104:n,105:d,106:c,107:o,200:a,201:o,202:o,203:h,401:h,402:l}})}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostBalance(),i={info:t},s=Object.keys(this.currencies);for(let r=0;r<s.length;r++){let e=s[r],a=e.toLowerCase();"dash"===a&&(a="drk");let o=this.account(),n=a+"_balance",d=a+"_lock";n in t&&(o.free=parseFloat(t[n])),d in t&&(o.used=parseFloat(t[d])),o.total=this.sum(o.free,o.used),i[e]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={};this.symbols.length>1&&(r.coin=s.id);let a=await this.publicGetDepth(this.extend(r,i));return this.parseOrderBook(a)}parseTicker(e,t){let i=this.milliseconds(),s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"vol"),quoteVolume:this.safeFloat(e,"volume"),info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetAllticker(t),s=Object.keys(i),r={};for(let a=0;a<s.length;a++){let e=s[a],t=this.markets_by_id[e],o=t.symbol,n=i[e];r[o]=this.parseTicker(n,t)}return r}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s={};this.symbols.length>1&&(s.coin=i.id);let r=await this.publicGetTicker(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t){let i=1e3*parseInt(e.date);return{info:e,id:e.tid,order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:e.type,price:e.price,amount:e.amount}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={};this.symbols.length>1&&(a.coin=r.id);let o=await this.publicGetOrders(this.extend(a,s));return this.parseTrades(o,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n={amount:s,price:r,type:i};this.symbols.length>1&&(n.coin=o.id);let d=await this.privatePostTradeAdd(this.extend(n,a));return{info:d,id:d.id}}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privatePostTradeCancel(this.extend({id:e},i))}parseOrder(e){const t=this.safeString(e,"id"),i=this.parse8601(e.datetime+"+09:00"),s=this.safeFloat(e,"amount_original"),r=this.safeFloat(e,"amount_outstanding");let a=void 0;void 0!==s&&void 0!==r&&(a=s-r);const o=this.safeFloat(e,"price");let n=void 0;void 0!==o&&void 0!==a&&(n=a*o);const d={part:"open",all:"closed",cancelled:"canceled",closed:"closed"};let c=void 0;e.status in d&&(c=d[e.status]),void 0===c&&void 0!==r&&0===r&&(c="closed");return{id:t,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,amount:s,remaining:r,filled:a,side:e.type,type:void 0,status:c,symbol:"BTC/JPY",price:o,cost:n,trades:void 0,fee:void 0,info:e}}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostTradeView(this.extend({id:e},i));return this.parseOrder(s)}async fetchOrders(e,t,i,s={}){await this.loadMarkets();let r=await this.privatePostTradeList(this.extend({type:"all"},s));return this.parseOrders(r)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=await this.privatePostTradeList(this.extend({type:"open"},s));const a=this.parseOrders(r);for(let o=0;o<a.length;o++){a[o].status="open"}return a}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.version+"/"+e;if("public"===t)Object.keys(s).length&&(o+="?"+this.urlencode(s));else{this.checkRequiredCredentials();let e=this.nonce().toString(),t=this.extend({key:this.apiKey,nonce:e},s),i=this.urlencode(t),o=this.hash(this.encode(this.secret));t.signature=this.hmac(this.encode(i),this.encode(o)),a=this.urlencode(t),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if(e>=400)return;if("{"!==o[0])return;const n=JSON.parse(o),d=this.safeValue(n,"result");if(void 0===d||!0===d)return;const c=this.safeValue(n,"code"),h=this.id+" "+this.json(n),l=this.exceptions;if(c in l)throw new l[c](h);throw new r(h)}}},813:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"btcturk",name:"BTCTurk",countries:["TR"],rateLimit:1e3,has:{CORS:!0,fetchTickers:!0,fetchOHLCV:!0},timeframes:{"1d":"1d"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27992709-18e15646-64a3-11e7-9fa2-b0950ec7712f.jpg",api:"https://www.btcturk.com/api",www:"https://www.btcturk.com",doc:"https://github.com/BTCTrader/broker-api-docs"},api:{public:{get:["ohlcdata","orderbook","ticker","trades"]},private:{get:["balance","openOrders","userTransactions"],post:["exchange","cancelOrder"]}},fees:{trading:{maker:.00236,taker:.00413}}})}async fetchMarkets(){let e=await this.publicGetTicker(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.pair,a=r.slice(0,3),o=r.slice(3,6),n=this.commonCurrencyCode(a),d=this.commonCurrencyCode(o);a=a.toLowerCase(),o=o.toLowerCase();let c=n+"/"+d,h={amount:8,price:8},l=!0;t.push({id:r,symbol:c,base:n,quote:d,baseId:a,quoteId:o,active:l,info:s,precision:h,limits:{amount:{min:Math.pow(10,-h.amount),max:void 0},price:{min:Math.pow(10,-h.price),max:void 0},cost:{min:void 0,max:void 0}}})}return t}async fetchBalance(e={}){let t=await this.privateGetBalance(),i={info:t},s=Object.keys(this.currencies);for(let r=0;r<s.length;r++){let e=s[r],a=this.currencies[e],o=this.account(),n=a.id+"_available",d=a.id+"_balance",c=a.id+"_reserved";n in t&&(o.free=this.safeFloat(t,n),o.total=this.safeFloat(t,d),o.used=this.safeFloat(t,c)),i[e]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){let s=this.market(e),r=await this.publicGetOrderbook(this.extend({pairSymbol:s.id},i)),a=parseInt(1e3*r.timestamp);return this.parseOrderBook(r,a)}parseTicker(e,t){let i=void 0;t&&(i=t.symbol);let s=1e3*parseInt(e.timestamp),r=this.safeFloat(e,"last");return{symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"bid"),bidVolume:void 0,ask:this.safeFloat(e,"ask"),askVolume:void 0,vwap:void 0,open:this.safeFloat(e,"open"),close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeFloat(e,"average"),baseVolume:this.safeFloat(e,"volume"),quoteVolume:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTicker(t),s={};for(let r=0;r<i.length;r++){let e=i[r],t=e.pair,a=void 0;t in this.markets_by_id&&(t=(a=this.markets_by_id[t]).symbol),s[t]=this.parseTicker(e,a)}return s}async fetchTicker(e,t={}){await this.loadMarkets();let i=await this.fetchTickers(),s=void 0;return e in i&&(s=i[e]),s}parseTrade(e,t){let i=1e3*e.date;return{id:e.tid,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:void 0,price:e.price,amount:e.amount}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetTrades(this.extend({pairSymbol:r.id},s));return this.parseTrades(a,r,t,i)}parseOHLCV(e,t,i="1d",s,r){return[this.parse8601(e.Time),e.Open,e.High,e.Low,e.Close,e.Volume]}async fetchOHLCV(e,t="1d",i,s,r={}){await this.loadMarkets();let a=this.market(e),o={};void 0!==s&&(o.last=s);let n=await this.publicGetOhlcdata(this.extend(o,r));return this.parseOHLCVs(n,a,t,i,s)}async createOrder(e,t,i,s,a,o={}){await this.loadMarkets();let n={PairSymbol:this.marketId(e),OrderType:"buy"===i?0:1,OrderMethod:"market"===t?1:0};if("market"===t){if(!("Total"in o))throw new r(this.id+' createOrder requires the "Total" extra parameter for market orders (amount and price are both ignored)')}else n.Price=a,n.Amount=s;let d=await this.privatePostExchange(this.extend(n,o));return{info:d,id:d.id}}async cancelOrder(e,t,i={}){return await this.privatePostCancelOrder({id:e})}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},a,o){if("btctrader"===this.id)throw new r(this.id+" is an abstract base API for BTCExchange, BTCTurk");let n=this.urls.api+"/"+e;if("public"===t)Object.keys(s).length&&(n+="?"+this.urlencode(s));else{this.checkRequiredCredentials();let e=this.nonce().toString();o=this.urlencode(s);let t=this.base64ToBinary(this.secret),i=this.apiKey+e;a={"X-PCK":this.apiKey,"X-Stamp":e,"X-Signature":this.stringToBase64(this.hmac(this.encode(i),t,"sha256","binary")),"Content-Type":"application/x-www-form-urlencoded"}}return{url:n,method:i,body:o,headers:a}}}},814:function(e,t,i){"use strict";const s=i(788),{InsufficientFunds:r,ExchangeError:a,InvalidOrder:o,AuthenticationError:n,NotSupported:d,OrderNotFound:c}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"gdax",name:"GDAX",countries:["US"],rateLimit:1e3,userAgent:this.userAgents.chrome,has:{CORS:!0,fetchOHLCV:!0,deposit:!0,withdraw:!0,fetchOrder:!0,fetchOrders:!0,fetchOpenOrders:!0,fetchClosedOrders:!0,fetchMyTrades:!0},timeframes:{"1m":60,"5m":300,"15m":900,"1h":3600,"6h":21600,"1d":86400},urls:{test:"https://api-public.sandbox.gdax.com",logo:"https://user-images.githubusercontent.com/1294454/27766527-b1be41c6-5edb-11e7-95f6-5b496c469e2c.jpg",api:"https://api.gdax.com",www:"https://www.gdax.com",doc:"https://docs.gdax.com",fees:["https://www.gdax.com/fees","https://support.gdax.com/customer/en/portal/topics/939402-depositing-and-withdrawing-funds/articles"]},requiredCredentials:{apiKey:!0,secret:!0,password:!0},api:{public:{get:["currencies","products","products/{id}/book","products/{id}/candles","products/{id}/stats","products/{id}/ticker","products/{id}/trades","time"]},private:{get:["accounts","accounts/{id}","accounts/{id}/holds","accounts/{id}/ledger","accounts/{id}/transfers","coinbase-accounts","fills","funding","orders","orders/{id}","payment-methods","position","reports/{id}","users/self/trailing-volume"],post:["deposits/coinbase-account","deposits/payment-method","coinbase-accounts/{id}/addresses","funding/repay","orders","position/close","profiles/margin-transfer","reports","withdrawals/coinbase","withdrawals/crypto","withdrawals/payment-method"],delete:["orders","orders/{id}"]}},fees:{trading:{tierBased:!0,percentage:!0,maker:0,taker:.003},funding:{tierBased:!1,percentage:!1,withdraw:{BCH:0,BTC:0,LTC:0,ETH:0,EUR:.15,USD:25},deposit:{BCH:0,BTC:0,LTC:0,ETH:0,EUR:.15,USD:10}}}})}async fetchMarkets(){let e=await this.publicGetProducts(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.id,a=s.base_currency,o=s.quote_currency,n=a+"/"+o,d={min:this.safeFloat(s,"quote_increment"),max:void 0},c={amount:8,price:this.precisionFromString(this.safeString(s,"quote_increment"))},h=this.fees.trading.taker;"ETH"!==a&&"LTC"!==a||(h=.003);let l="online"===s.status;t.push(this.extend(this.fees.trading,{id:r,symbol:n,base:a,quote:o,precision:c,limits:{amount:{min:this.safeFloat(s,"base_min_size"),max:this.safeFloat(s,"base_max_size")},price:d,cost:{min:this.safeFloat(s,"min_market_funds"),max:this.safeFloat(s,"max_market_funds")}},taker:h,active:l,info:s}))}return t}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetAccounts(),i={info:t};for(let s=0;s<t.length;s++){let e=t[s],r=e.currency,a={free:this.safeFloat(e,"available"),used:this.safeFloat(e,"hold"),total:this.safeFloat(e,"balance")};i[r]=a}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetProductsIdBook(this.extend({id:this.marketId(e),level:2},i));return this.parseOrderBook(s)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=this.extend({id:i.id},t),r=await this.publicGetProductsIdTicker(s),a=this.parse8601(r.time),o=void 0,n=void 0;"bid"in r&&(o=this.safeFloat(r,"bid")),"ask"in r&&(n=this.safeFloat(r,"ask"));let d=this.safeFloat(r,"price");return{symbol:e,timestamp:a,datetime:this.iso8601(a),high:void 0,low:void 0,bid:o,bidVolume:void 0,ask:n,askVolume:void 0,vwap:void 0,open:void 0,close:d,last:d,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(r,"volume"),quoteVolume:void 0,info:r}}parseTrade(e,t){let i=void 0;"time"in e?i=this.parse8601(e.time):"created_at"in e&&(i=this.parse8601(e.created_at));let s=void 0;void 0!==i&&(s=this.iso8601(i));let r=void 0;if(void 0===t&&"product_id"in e){let i=e.product_id;i in this.markets_by_id&&(t=this.markets_by_id[i])}t&&(r=t.symbol);let a=void 0,o=void 0;if(void 0!==t&&(o=t.quote,"liquidity"in e)){a=t["T"===e.liquidity?"taker":"maker"]}let n=this.safeFloat(e,"fill_fees");void 0===n&&(n=this.safeFloat(e,"fee"));let d={cost:n,currency:o,rate:a},c=this.safeString(e,"trade_id"),h="buy"===e.side?"sell":"buy",l=this.safeString(e,"order_id");return void 0!==l&&(h="buy"===e.side?"buy":"sell"),{id:c,order:l,info:e,timestamp:i,datetime:s,symbol:r,type:void 0,side:h,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"size"),fee:d}}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r=void 0,a={};void 0!==e&&(r=this.market(e),a.product_id=r.id),void 0!==i&&(a.limit=i);let o=await this.privateGetFills(this.extend(a,s));return this.parseTrades(o,r,t,i)}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetProductsIdTrades(this.extend({id:r.id},s));return this.parseTrades(a,r,t,i)}parseOHLCV(e,t,i="1m",s,r){return[1e3*e[0],e[3],e[2],e[1],e[4],e[5]]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),o=this.timeframes[t],n={id:a.id,granularity:o};void 0!==i&&(n.start=this.ymdhms(i),void 0===s&&(s=300),n.end=this.ymdhms(this.sum(s*o*1e3,i)));let d=await this.publicGetProductsIdCandles(this.extend(n,r));return this.parseOHLCVs(d,a,t,i,s)}async fetchTime(){let e=await this.publicGetTime();return this.parse8601(e.iso)}parseOrderStatus(e){return this.safeString({pending:"open",active:"open",open:"open",done:"closed",canceled:"canceled"},e,e)}parseOrder(e,t){let i=this.parse8601(e.created_at),s=void 0;void 0===t&&e.product_id in this.markets_by_id&&(t=this.markets_by_id[e.product_id]);let r=this.parseOrderStatus(e.status),a=this.safeFloat(e,"price"),o=this.safeFloat(e,"size");void 0===o&&(o=this.safeFloat(e,"funds")),void 0===o&&(o=this.safeFloat(e,"specified_funds"));let n=this.safeFloat(e,"filled_size"),d=void 0;void 0!==o&&void 0!==n&&(d=o-n);let c=this.safeFloat(e,"executed_value"),h={cost:this.safeFloat(e,"fill_fees"),currency:void 0,rate:void 0};return t&&(s=t.symbol),{id:e.id,info:e,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,status:r,symbol:s,type:e.type,side:e.side,price:a,cost:c,amount:o,filled:n,remaining:d,fee:h}}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrdersId(this.extend({id:e},i));return this.parseOrder(s)}async fetchOrders(e,t,i,s={}){await this.loadMarkets();let r={status:"all"},a=void 0;void 0!==e&&(a=this.market(e),r.product_id=a.id);let o=await this.privateGetOrders(this.extend(r,s));return this.parseOrders(o,a,t,i)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r={},a=void 0;void 0!==e&&(a=this.market(e),r.product_id=a.id);let o=await this.privateGetOrders(this.extend(r,s));return this.parseOrders(o,a,t,i)}async fetchClosedOrders(e,t,i,s={}){await this.loadMarkets();let r={status:"done"},a=void 0;void 0!==e&&(a=this.market(e),r.product_id=a.id);let o=await this.privateGetOrders(this.extend(r,s));return this.parseOrders(o,a,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o={product_id:this.marketId(e),side:i,size:s,type:t};"limit"===t&&(o.price=r);let n=await this.privatePostOrders(this.extend(o,a));return this.parseOrder(n)}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privateDeleteOrdersId({id:e})}feeToPrecision(e,t){return parseFloat(t).toFixed(this.currencies[e].precision)}calculateFee(e,t,i,s,r,a="taker",o={}){let n=this.markets[e],d=n[a],c=s*r,h=n.quote;return{type:a,currency:h,rate:d,cost:parseFloat(this.feeToPrecision(h,d*c))}}async getPaymentMethods(){return await this.privateGetPaymentMethods()}async deposit(e,t,i,s={}){await this.loadMarkets();let r={currency:e,amount:t},o="privatePostDeposits";if("payment_method_id"in s)o+="PaymentMethod";else{if(!("coinbase_account_id"in s))throw new d(this.id+" deposit() requires one of `coinbase_account_id` or `payment_method_id` extra params");o+="CoinbaseAccount"}let n=await this[o](this.extend(r,s));if(!n)throw new a(this.id+" deposit() error: "+this.json(n));return{info:n,id:n.id}}async withdraw(e,t,i,s,r={}){this.checkAddress(i),await this.loadMarkets();let o={currency:e,amount:t},n="privatePostWithdrawals";"payment_method_id"in r?n+="PaymentMethod":"coinbase_account_id"in r?n+="CoinbaseAccount":(n+="Crypto",o.crypto_address=i);let d=await this[n](this.extend(o,r));if(!d)throw new a(this.id+" withdraw() error: "+this.json(d));return{info:d,id:d.id}}sign(e,t="public",i="GET",s={},r,a){let o="/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));"GET"===i&&Object.keys(n).length&&(o+="?"+this.urlencode(n));let d=this.urls.api+o;if("private"===t){this.checkRequiredCredentials();let e=this.nonce().toString(),t="";"GET"!==i&&Object.keys(n).length&&(t=a=this.json(n));let s=e+i+o+t,d=this.base64ToBinary(this.secret),c=this.hmac(this.encode(s),d,"sha256","base64");r={"CB-ACCESS-KEY":this.apiKey,"CB-ACCESS-SIGN":this.decode(c),"CB-ACCESS-TIMESTAMP":e,"CB-ACCESS-PASSPHRASE":this.password,"Content-Type":"application/json"}}return{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,d,h){if(400===e||404===e){if("{"===h[0]){let e=JSON.parse(h).message,t=this.id+" "+e;if(e.indexOf("price too small")>=0)throw new o(t);if(e.indexOf("price too precise")>=0)throw new o(t);if("Insufficient funds"===e)throw new r(t);if("NotFound"===e)throw new c(t);if("Invalid API Key"===e)throw new n(t);throw new a(this.id+" "+e)}throw new a(this.id+" "+h)}}async request(e,t="public",i="GET",s={},r,o){let n=await this.fetch2(e,t,i,s,r,o);if("message"in n)throw new a(this.id+" "+this.json(n));return n}}},815:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"fybse",name:"FYB-SE",countries:["SE"],has:{CORS:!1},rateLimit:1500,urls:{logo:"https://user-images.githubusercontent.com/1294454/27766512-31019772-5edb-11e7-8241-2e675e6797f1.jpg",api:"https://www.fybse.se/api/SEK",www:"https://www.fybse.se",doc:"http://docs.fyb.apiary.io"},api:{public:{get:["ticker","tickerdetailed","orderbook","trades"]},private:{post:["test","getaccinfo","getpendingorders","getorderhistory","cancelpendingorder","placeorder","withdraw"]}},markets:{"BTC/SEK":{id:"SEK",symbol:"BTC/SEK",base:"BTC",quote:"SEK"}}})}async fetchBalance(e={}){let t=await this.privatePostGetaccinfo(),i=parseFloat(t.btcBal),s=this.symbols[0],r=this.markets[s].quote,a=r.toLowerCase()+"Bal",o=parseFloat(t[a]),n={BTC:{free:i,used:0,total:i}};return n[r]={free:o,used:0,total:o},n.info=t,this.parseBalance(n)}async fetchOrderBook(e,t,i={}){let s=await this.publicGetOrderbook(i);return this.parseOrderBook(s)}async fetchTicker(e,t={}){let i=await this.publicGetTickerdetailed(t),s=this.milliseconds(),r=void 0,a=void 0;return"last"in i&&(r=this.safeFloat(i,"last")),"vol"in i&&(a=this.safeFloat(i,"vol")),{symbol:e,timestamp:s,datetime:this.iso8601(s),high:void 0,low:void 0,bid:this.safeFloat(i,"bid"),bidVolume:void 0,ask:this.safeFloat(i,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:void 0,info:i}}parseTrade(e,t){let i=1e3*parseInt(e.date);return{info:e,id:e.tid.toString(),order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:void 0,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"amount")}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetTrades(s);return this.parseTrades(a,r,t,i)}async createOrder(e,t,i,s,r,a={}){let o=await this.privatePostPlaceorder(this.extend({qty:s,price:r,type:i[0].toUpperCase()},a));return{info:o,id:o.pending_oid}}async cancelOrder(e,t,i={}){return await this.privatePostCancelpendingorder({orderNo:e})}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+e;if("public"===t)o+=".json";else{this.checkRequiredCredentials();let e=this.nonce();a=this.urlencode(this.extend({timestamp:e},s)),r={"Content-Type":"application/x-www-form-urlencoded",key:this.apiKey,sig:this.hmac(this.encode(a),this.encode(this.secret),"sha1")}}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("private"===t&&"error"in n&&n.error)throw new r(this.id+" "+this.json(n));return n}}},816:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,InsufficientFunds:a,OrderNotFound:o}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"hitbtc",name:"HitBTC",countries:["HK"],rateLimit:1500,version:"1",has:{CORS:!1,fetchTrades:!0,fetchTickers:!0,fetchOrder:!0,fetchOpenOrders:!0,fetchClosedOrders:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766555-8eaec20e-5edc-11e7-9c5b-6dc69fc42f5e.jpg",api:"http://api.hitbtc.com",www:"https://hitbtc.com",referral:"https://hitbtc.com/?ref_id=5a5d39a65d466",doc:"https://github.com/hitbtc-com/hitbtc-api/blob/master/APIv1.md",fees:["https://hitbtc.com/fees-and-limits","https://support.hitbtc.com/hc/en-us/articles/115005148605-Fees-and-limits"]},api:{public:{get:["{symbol}/orderbook","{symbol}/ticker","{symbol}/trades","{symbol}/trades/recent","symbols","ticker","time"]},trading:{get:["balance","orders/active","orders/recent","order","trades/by/order","trades"],post:["new_order","cancel_order","cancel_orders"]},payment:{get:["balance","address/{currency}","transactions","transactions/{transaction}"],post:["transfer_to_trading","transfer_to_main","address/{currency}","payout"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:-1e-4,taker:.001},funding:{tierBased:!1,percentage:!1,withdraw:{BTC:.001,BCC:.0018,ETH:.00215,BCH:.0018,USDT:100,DASH:.03,BTG:5e-4,LTC:.003,ZEC:1e-4,XMR:.09,"1ST":.84,ADX:5.7,AE:6.7,AEON:.01006,AIR:565,AMP:9,ANT:6.7,ARDR:1,ARN:18.5,ART:26,ATB:4e-4,ATL:27,ATM:504,ATS:860,AVT:1.9,BAS:113,BCN:.1,"DAO.Casino":124,BKB:46,BMC:32,BMT:100,BNT:2.57,BQX:4.7,BTM:40,BTX:.04,BUS:.004,CCT:115,CDT:100,CDX:30,CFI:61,CLD:.88,CND:574,CNX:.04,COSS:65,CSNO:16,CTR:15,CTX:146,CVC:8.46,DBIX:.0168,DCN:12e4,DCT:.02,DDF:342,DENT:6240,DGB:.4,DGD:.01,DICE:.32,DLT:.26,DNT:.21,DOGE:2,DOV:34,DRPU:24,DRT:240,DSH:.017,EBET:84,EBTC:20,EBTCOLD:6.6,ECAT:14,EDG:2,EDO:2.9,ELE:.00172,ELM:.004,EMC:.03,EMGO:14,ENJ:163,EOS:1.5,ERO:34,ETBS:15,ETC:.002,ETP:.004,EVX:5.4,EXN:456,FRD:65,FUEL:123.00105,FUN:202.9598309,FYN:1.849,FYP:66.13,GNO:.0034,GUP:4,GVT:1.2,HAC:144,HDG:7,HGT:1082,HPC:.4,HVN:120,ICN:.55,ICO:34,ICOS:.35,IND:76,INDI:5913,ITS:15.0012,IXT:11,KBR:143,KICK:112,LA:41,LAT:1.44,LIFE:13e3,LRC:27,LSK:.3,LUN:.34,MAID:5,MANA:143,MCAP:5.44,MIPS:43,MNE:1.33,MSP:121,MTH:92,MYB:3.9,NDC:165,NEBL:.04,NET:3.96,NTO:998,NXC:13.39,NXT:3,OAX:15,ODN:.004,OMG:2,OPT:335,ORME:2.8,OTN:.57,PAY:3.1,PIX:96,PLBT:.33,PLR:114,PLU:.87,POE:784,POLL:3.5,PPT:2,PRE:32,PRG:39,PRO:41,PRS:60,PTOY:.5,QAU:63,QCN:.03,QTUM:.04,QVT:64,REP:.02,RKC:15,RVT:14,SAN:2.24,SBD:.03,SCL:2.6,SISA:1640,SKIN:407,SMART:.4,SMS:.0375,SNC:36,SNGLS:4,SNM:48,SNT:233,STEEM:.01,STRAT:.01,STU:14,STX:11,SUB:17,SUR:3,SWT:.51,TAAS:.91,TBT:2.37,TFL:15,TIME:.03,TIX:7.1,TKN:1,TKR:84,TNT:90,TRST:1.6,TRX:1395,UET:480,UGT:15,VEN:14,VERI:.037,VIB:50,VIBE:145,VOISE:618,WEALTH:.0168,WINGS:2.4,WTC:.75,XAUR:3.23,XDN:.01,XEM:15,XUC:.9,YOYOW:140,ZAP:24,ZRX:23,ZSC:191},deposit:{BTC:6e-4,ETH:.003,BCH:0,USDT:0,BTG:0,LTC:0,ZEC:0,XMR:0,"1ST":0,ADX:0,AE:0,AEON:0,AIR:0,AMP:0,ANT:0,ARDR:0,ARN:0,ART:0,ATB:0,ATL:0,ATM:0,ATS:0,AVT:0,BAS:0,BCN:0,"DAO.Casino":0,BKB:0,BMC:0,BMT:0,BNT:0,BQX:0,BTM:0,BTX:0,BUS:0,CCT:0,CDT:0,CDX:0,CFI:0,CLD:0,CND:0,CNX:0,COSS:0,CSNO:0,CTR:0,CTX:0,CVC:0,DBIX:0,DCN:0,DCT:0,DDF:0,DENT:0,DGB:0,DGD:0,DICE:0,DLT:0,DNT:0,DOGE:0,DOV:0,DRPU:0,DRT:0,DSH:0,EBET:0,EBTC:0,EBTCOLD:0,ECAT:0,EDG:0,EDO:0,ELE:0,ELM:0,EMC:0,EMGO:0,ENJ:0,EOS:0,ERO:0,ETBS:0,ETC:0,ETP:0,EVX:0,EXN:0,FRD:0,FUEL:0,FUN:0,FYN:0,FYP:0,GNO:0,GUP:0,GVT:0,HAC:0,HDG:0,HGT:0,HPC:0,HVN:0,ICN:0,ICO:0,ICOS:0,IND:0,INDI:0,ITS:0,IXT:0,KBR:0,KICK:0,LA:0,LAT:0,LIFE:0,LRC:0,LSK:0,LUN:0,MAID:0,MANA:0,MCAP:0,MIPS:0,MNE:0,MSP:0,MTH:0,MYB:0,NDC:0,NEBL:0,NET:0,NTO:0,NXC:0,NXT:0,OAX:0,ODN:0,OMG:0,OPT:0,ORME:0,OTN:0,PAY:0,PIX:0,PLBT:0,PLR:0,PLU:0,POE:0,POLL:0,PPT:0,PRE:0,PRG:0,PRO:0,PRS:0,PTOY:0,QAU:0,QCN:0,QTUM:0,QVT:0,REP:0,RKC:0,RVT:0,SAN:0,SBD:0,SCL:0,SISA:0,SKIN:0,SMART:0,SMS:0,SNC:0,SNGLS:0,SNM:0,SNT:0,STEEM:0,STRAT:0,STU:0,STX:0,SUB:0,SUR:0,SWT:0,TAAS:0,TBT:0,TFL:0,TIME:0,TIX:0,TKN:0,TKR:0,TNT:0,TRST:0,TRX:0,UET:0,UGT:0,VEN:0,VERI:0,VIB:0,VIBE:0,VOISE:0,WEALTH:0,WINGS:0,WTC:0,XAUR:0,XDN:0,XEM:0,XUC:0,YOYOW:0,ZAP:0,ZRX:0,ZSC:0}}},commonCurrencies:{BCC:"BCC",BET:"DAO.Casino",CAT:"BitClave",DRK:"DASH",EMGO:"MGO",GET:"Themis",LNC:"LinkerCoin",UNC:"Unigame",USD:"USDT",XBT:"BTC"},options:{defaultTimeInForce:"FOK"}})}async fetchMarkets(){let e=await this.publicGetSymbols(),t=[];for(let i=0;i<e.symbols.length;i++){let s=e.symbols[i],r=s.symbol,a=s.commodity,o=s.currency,n=this.safeFloat(s,"lot"),d=this.safeFloat(s,"step"),c=this.commonCurrencyCode(a),h=this.commonCurrencyCode(o),l=c+"/"+h;t.push({info:s,id:r,symbol:l,base:c,quote:h,baseId:a,quoteId:o,lot:n,step:d,active:!0,maker:this.safeFloat(s,"provideLiquidityRate"),taker:this.safeFloat(s,"takeLiquidityRate"),precision:{amount:this.precisionFromString(s.lot),price:this.precisionFromString(s.step)},limits:{amount:{min:n,max:void 0},price:{min:d,max:void 0},cost:{min:void 0,max:void 0}}})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=this.safeString(e,"type","trading");t+="GetBalance";let i=this.omit(e,"type"),s=(await this[t](i)).balance,r={info:s};for(let a=0;a<s.length;a++){let e=s[a],t=e.currency_code,i=this.commonCurrencyCode(t),o=this.safeFloat(e,"cash",0);o=this.safeFloat(e,"balance",o);let n=this.safeFloat(e,"reserved",0),d={free:o,used:n,total:this.sum(o,n)};r[i]=d}return this.parseBalance(r)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetSymbolOrderbook(this.extend({symbol:this.marketId(e)},i));return this.parseOrderBook(s)}parseTicker(e,t){let i=e.timestamp,s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"bid"),bidVolume:void 0,ask:this.safeFloat(e,"ask"),askVolume:void 0,vwap:void 0,open:this.safeFloat(e,"open"),close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"volume"),quoteVolume:this.safeFloat(e,"volume_quote"),info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTicker(t),s=Object.keys(i),r={};for(let a=0;a<s.length;a++){let e=s[a],t=this.markets_by_id[e],o=t.symbol,n=i[e];r[o]=this.parseTicker(n,t)}return r}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetSymbolTicker(this.extend({symbol:i.id},t));if("message"in s)throw new r(this.id+" "+s.message);return this.parseTicker(s,i)}parseTrade(e,t){return Array.isArray(e)?this.parsePublicTrade(e,t):this.parseOrderTrade(e,t)}parsePublicTrade(e,t){let i=void 0;return t&&(i=t.symbol),{info:e,id:e[0].toString(),timestamp:e[3],datetime:this.iso8601(e[3]),symbol:i,type:void 0,side:e[4],price:parseFloat(e[1]),amount:parseFloat(e[2])}}parseOrderTrade(e,t){let i=void 0;t&&(i=t.symbol);let s=this.safeFloat(e,"execQuantity");t&&(s*=t.lot);let r=this.safeFloat(e,"execPrice"),a=r*s,o={cost:this.safeFloat(e,"fee"),currency:void 0,rate:void 0},n=e.timestamp;return{info:e,id:e.tradeId,order:e.clientOrderId,timestamp:n,datetime:this.iso8601(n),symbol:i,type:void 0,side:e.side,price:r,amount:s,cost:a,fee:o}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetSymbolTrades(this.extend({symbol:r.id,side:"true"},s));return this.parseTrades(a.trades,r,t,i)}async createOrder(e,t,i,s,a,o={}){await this.loadMarkets();let n=this.market(e),d=parseFloat(s)/n.lot,c=Math.round(d),h=d-c;if(Math.abs(h)>n.step)throw new r(this.id+" order amount should be evenly divisible by lot unit size of "+n.lot.toString());let l={clientOrderId:this.milliseconds().toString(),symbol:n.id,side:i,quantity:c.toString(),type:t};"limit"===t?l.price=this.priceToPrecision(e,a):l.timeInForce=this.options.defaultTimeInForce;let u=await this.tradingPostNewOrder(this.extend(l,o));return this.parseOrder(u.ExecutionReport,n)}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.tradingPostCancelOrder(this.extend({clientOrderId:e},i))}parseOrderStatus(e){return this.safeString({new:"open",partiallyFilled:"open",filled:"closed",canceled:"canceled",rejected:"rejected",expired:"expired"},e)}parseOrder(e,t){let i=this.safeInteger(e,"lastTimestamp");void 0===i&&(i=this.safeInteger(e,"timestamp"));let s=void 0;t||(t=this.markets_by_id[e.symbol]);let r=this.safeString(e,"orderStatus");r&&(r=this.parseOrderStatus(r));let a=this.safeFloat(e,"orderPrice");a=this.safeFloat(e,"price",a),a=this.safeFloat(e,"avgPrice",a);let o=this.safeFloat(e,"orderQuantity");o=this.safeFloat(e,"quantity",o);let n=this.safeFloat(e,"quantityLeaves"),d=void 0,c=void 0,h=void 0!==o,l=void 0!==(n=this.safeFloat(e,"leavesQuantity",n));if(void 0!==t)s=t.symbol,h&&(o*=t.lot),l&&(n*=t.lot);else{let i=this.safeString(e,"symbol");i in this.markets_by_id&&(t=this.markets_by_id[i])}h&&l&&(c=a*(d=o-n));let u=this.safeFloat(e,"fee"),p=void 0;void 0!==t&&(s=t.symbol,p=t.quote);let m={cost:u,currency:p,rate:void 0};return{id:e.clientOrderId.toString(),info:e,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,status:r,symbol:s,type:e.type,side:e.side,price:a,cost:c,amount:o,filled:d,remaining:n,fee:m}}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.tradingGetOrder(this.extend({clientOrderId:e},i));if(s.orders[0])return this.parseOrder(s.orders[0]);throw new o(this.id+" fetchOrder() error: "+this.response)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=void 0,a={sort:"desc",statuses:["new","partiallyFiiled"].join(",")};void 0!==e&&(r=this.market(e),a.symbols=r.id);let o=await this.tradingGetOrdersActive(this.extend(a,s));return this.parseOrders(o.orders,r,t,i)}async fetchClosedOrders(e,t,i,s={}){await this.loadMarkets();let r=void 0,a={sort:"desc",statuses:["filled","canceled","rejected","expired"].join(","),max_results:1e3};void 0!==e&&(r=this.market(e),a.symbols=r.id);let o=await this.tradingGetOrdersRecent(this.extend(a,s));return this.parseOrders(o.orders,r,t,i)}async fetchOrderTrades(e,t,i,s,r={}){await this.loadMarkets();let a=void 0;void 0!==t&&(a=this.market(t));let o=await this.tradingGetTradesByOrder(this.extend({clientOrderId:e},r));return this.parseTrades(o.trades,a,i,s)}async withdraw(e,t,i,s,r={}){this.checkAddress(i),await this.loadMarkets();let a={currency_code:this.currency(e).id,amount:t,address:i};s&&(a.paymentId=s);let o=await this.paymentPostPayout(this.extend(a,r));return{info:o,id:o.transaction}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o="/api/"+this.version+"/"+t+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials();let e={nonce:this.nonce(),apikey:this.apiKey};n=this.extend(e,n);let t=o+="GET"===i?"?"+this.urlencode(n):"?"+this.urlencode(e);"POST"===i&&Object.keys(n).length&&(t+=a=this.urlencode(n)),r={"Content-Type":"application/x-www-form-urlencoded","X-Signature":this.hmac(this.encode(t),this.encode(this.secret),"sha512").toLowerCase()}}return{url:o=this.urls.api+o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},o,n){let d=await this.fetch2(e,t,i,s,o,n);if("code"in d){if("ExecutionReport"in d&&"orderExceedsLimit"===d.ExecutionReport.orderRejectReason)throw new a(this.id+" "+this.json(d));throw new r(this.id+" "+this.json(d))}return d}}},817:function(e,t,i){"use strict";const s=i(788),{InvalidNonce:r,OrderNotFound:a,InvalidOrder:o,InsufficientFunds:n,AuthenticationError:d}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"qryptos",name:"QRYPTOS",countries:["CN","TW"],version:"2",rateLimit:1e3,has:{CORS:!1,fetchTickers:!0,fetchOrder:!0,fetchOrders:!0,fetchOpenOrders:!0,fetchClosedOrders:!0,fetchMyTrades:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/30953915-b1611dc0-a436-11e7-8947-c95bd5a42086.jpg",api:"https://api.qryptos.com",www:"https://www.qryptos.com",doc:["https://developers.quoine.com","https://developers.quoine.com/v2"],fees:"https://qryptos.zendesk.com/hc/en-us/articles/115007858167-Fees"},api:{public:{get:["products","products/{id}","products/{id}/price_levels","executions","ir_ladders/{currency}"]},private:{get:["accounts/balance","accounts/main_asset","crypto_accounts","executions/me","fiat_accounts","loan_bids","loans","orders","orders/{id}","orders/{id}/trades","orders/{id}/executions","trades","trades/{id}/loans","trading_accounts","trading_accounts/{id}"],post:["fiat_accounts","loan_bids","orders"],put:["loan_bids/{id}/close","loans/{id}","orders/{id}","orders/{id}/cancel","trades/{id}","trades/{id}/close","trades/close_all","trading_accounts/{id}"]}},skipJsonOnStatusCodes:[401],exceptions:{messages:{"API Authentication failed":d,"Nonce is too small":r,"Order not found":a,user:{not_enough_free_balance:n},price:{must_be_positive:o},quantity:{less_than_order_size:o}}},commonCurrencies:{WIN:"WCOIN"}})}async fetchMarkets(){let e=await this.publicGetProducts(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.id.toString(),a=s.base_currency,o=s.quoted_currency,n=this.commonCurrencyCode(a),d=this.commonCurrencyCode(o),c=n+"/"+d,h=this.safeFloat(s,"maker_fee"),l=this.safeFloat(s,"taker_fee"),u=!s.disabled,p=void 0,m=void 0;"BTC"===n?p=.001:"ETH"===n&&(p=.01),"BTC"===d?m=1e-8:"ETH"!==d&&"USD"!==d&&"JPY"!==d||(m=1e-5);let f={amount:{min:p},price:{min:m},cost:{min:void 0}};void 0!==m&&void 0!==p&&(f.cost.min=m*p);let y={amount:void 0,price:void 0};void 0!==p&&(y.amount=-Math.log10(p)),void 0!==m&&(y.price=-Math.log10(m)),t.push({id:r,symbol:c,base:n,quote:d,baseId:a,quoteId:o,maker:h,taker:l,limits:f,precision:y,active:u,info:s})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetAccountsBalance(e),i={info:t};for(let s=0;s<t.length;s++){let e=t[s],r=e.currency,a=r;r in this.currencies_by_id&&(a=this.currencies_by_id[r].code);let o=parseFloat(e.balance),n={free:o,used:0,total:o};i[a]=n}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetProductsIdPriceLevels(this.extend({id:this.marketId(e)},i));return this.parseOrderBook(s,void 0,"buy_price_levels","sell_price_levels")}parseTicker(e,t){let i=this.milliseconds(),s=void 0;if("last_traded_price"in e&&e.last_traded_price){e.last_traded_price.length>0&&(s=this.safeFloat(e,"last_traded_price"))}let r=void 0;if(void 0===t){let i=this.safeString(e,"id");if(i in this.markets_by_id)t=this.markets_by_id[i];else{let i=this.safeString(e,"base_currency"),s=this.safeString(e,"quoted_currency"),a=this.commonCurrencyCode(i),o=this.commonCurrencyCode(s);r in this.markets?t=this.markets[r]:r=a+"/"+o}}void 0!==t&&(r=t.symbol);let a=void 0,o=void 0,n=void 0,d=this.safeFloat(e,"last_price_24h");return void 0!==d&&void 0!==s&&(a=s-d,n=this.sum(s,d)/2,d>0&&(o=a/d*100)),{symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high_market_ask"),low:this.safeFloat(e,"low_market_bid"),bid:this.safeFloat(e,"market_bid"),bidVolume:void 0,ask:this.safeFloat(e,"market_ask"),askVolume:void 0,vwap:void 0,open:d,close:s,last:s,previousClose:void 0,change:a,percentage:o,average:n,baseVolume:this.safeFloat(e,"volume_24h"),quoteVolume:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetProducts(t),s={};for(let r=0;r<i.length;r++){let e=i[r],t=e.base_currency+"/"+e.quoted_currency,a=this.markets[t];s[t]=this.parseTicker(e,a)}return s}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetProductsId(this.extend({id:i.id},t));return this.parseTicker(s,i)}parseTrade(e,t){let i=1e3*e.created_at,s=this.safeString(e,"taker_side"),r=this.safeString(e,"my_side"),a=void 0!==r?r:s,o=void 0;return void 0!==r&&(o=s===r?"taker":"maker"),{info:e,id:e.id.toString(),order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:a,takerOrMaker:o,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"quantity")}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={product_id:r.id};void 0!==i&&(a.limit=i);let o=await this.publicGetExecutions(this.extend(a,s));return this.parseTrades(o.models,r,t,i)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={product_id:r.id};void 0!==i&&(a.limit=i);let o=await this.privateGetExecutionsMe(this.extend(a,s));return this.parseTrades(o.models,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o={order_type:t,product_id:this.marketId(e),side:i,quantity:s};"limit"===t&&(o.price=r);let n=await this.privatePostOrders(this.extend(o,a));return this.parseOrder(n)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePutOrdersIdCancel(this.extend({id:e},i)),r=this.parseOrder(s);if("closed"===r.status)throw new a(this.id+" "+this.json(r));return r}parseOrder(e,t){let i=1e3*e.created_at,s=this.safeString(e,"product_id");void 0!==s&&s in this.markets_by_id&&(t=this.markets_by_id[s]);let r=void 0;"status"in e&&("live"===e.status?r="open":"filled"===e.status?r="closed":"cancelled"===e.status&&(r="canceled"));let a=this.safeFloat(e,"quantity"),o=this.safeFloat(e,"filled_quantity"),n=this.safeFloat(e,"price"),d=void 0;return void 0!==t&&(d=t.symbol),{id:e.id.toString(),timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,type:e.order_type,status:r,symbol:d,side:e.side,price:n,amount:a,filled:o,remaining:a-o,trades:void 0,fee:{currency:void 0,cost:this.safeFloat(e,"order_fee")},info:e}}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrdersId(this.extend({id:e},i));return this.parseOrder(s)}async fetchOrders(e,t,i,s={}){await this.loadMarkets();let r=void 0,a={};void 0!==e&&(r=this.market(e),a.product_id=r.id);let o=this.safeValue(s,"status");o&&(s=this.omit(s,"status"),"open"===o?a.status="live":"closed"===o?a.status="filled":"canceled"===o&&(a.status="cancelled")),void 0!==i&&(a.limit=i);let n=(await this.privateGetOrders(this.extend(a,s))).models;return this.parseOrders(n,r,t,i)}fetchOpenOrders(e,t,i,s={}){return this.fetchOrders(e,t,i,this.extend({status:"open"},s))}fetchClosedOrders(e,t,i,s={}){return this.fetchOrders(e,t,i,this.extend({status:"closed"},s))}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o="/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));if(r={"X-Quoine-API-Version":this.version,"Content-Type":"application/json"},"public"===t)Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials(),"GET"===i?Object.keys(n).length&&(o+="?"+this.urlencode(n)):Object.keys(n).length&&(a=this.json(n));let e=this.nonce(),t={path:o,nonce:e,token_id:this.apiKey,iat:Math.floor(e/1e3)};r["X-Quoine-Auth"]=this.jwt(t,this.secret)}return{url:o=this.urls.api+o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,o){if(e>=200&&e<=299)return;const n=this.exceptions.messages;if(401===e){if(a in n)throw new n[a](this.id+" "+a);return}if(void 0===o){if("{"!==a[0]&&"["!==a[0])return;o=JSON.parse(a)}const d=this.id+" "+this.json(o);if(404===e){const e=this.safeString(o,"message");if(e in n)throw new n[e](d)}else if(422===e&&"errors"in o){const e=o.errors,t=["user","quantity","price"];for(let i=0;i<t.length;i++){const s=t[i];if(s in e){const t=e[s];for(let e=0;e<t.length;e++){const i=t[e];if(i in n[s])throw new n[s][i](d)}}}}}}},818:function(e,t,i){"use strict";const s=i(788),r=i(801),a=i(787);s.ccxtVersion="1.16.15";const o={_1broker:i(851),_1btcxe:i(809),acx:i(797),allcoin:i(852),anxpro:i(853),anybits:i(854),bibox:i(855),binance:i(856),bit2c:i(857),bitbank:i(858),bitbay:i(859),bitfinex:i(798),bitfinex2:i(860),bitflyer:i(861),bithumb:i(862),bitkk:i(863),bitlish:i(864),bitmarket:i(865),bitmex:i(866),bitsane:i(810),bitso:i(867),bitstamp:i(868),bitstamp1:i(869),bittrex:i(811),bitz:i(870),bl3p:i(871),bleutrade:i(872),braziliex:i(873),btcalpha:i(874),btcbox:i(812),btcchina:i(875),btcexchange:i(876),btcmarkets:i(877),btctradeim:i(878),btctradeua:i(879),btcturk:i(813),btcx:i(880),bxinth:i(881),ccex:i(882),cex:i(883),chbtc:i(884),chilebit:i(885),cobinhood:i(886),coinbase:i(887),coinbasepro:i(888),coincheck:i(889),coinegg:i(800),coinex:i(890),coinexchange:i(891),coinfalcon:i(892),coinfloor:i(893),coingi:i(894),coinmarketcap:i(895),coinmate:i(896),coinnest:i(897),coinone:i(898),coinsecure:i(899),coinspot:i(900),cointiger:i(901),coolcoin:i(902),crypton:i(903),cryptopia:i(904),deribit:i(905),dsx:i(906),ethfinex:i(907),exmo:i(908),exx:i(909),fcoin:i(910),flowbtc:i(911),foxbit:i(790),fybse:i(815),fybsg:i(912),gatecoin:i(913),gateio:i(914),gdax:i(814),gemini:i(915),getbtc:i(916),hadax:i(917),hitbtc:i(816),hitbtc2:i(918),huobi:i(919),huobicny:i(920),huobipro:i(794),ice3x:i(921),independentreserve:i(922),indodax:i(923),itbit:i(924),jubi:i(925),kraken:i(926),kucoin:i(927),kuna:i(928),lakebtc:i(929),lbank:i(930),liqui:i(791),livecoin:i(931),luno:i(932),lykke:i(933),mercado:i(934),mixcoins:i(935),negociecoins:i(936),nova:i(937),okcoincny:i(938),okcoinusd:i(793),okex:i(939),paymium:i(940),poloniex:i(941),qryptos:i(817),quadrigacx:i(942),quoinex:i(943),rightbtc:i(944),southxchange:i(945),surbitcoin:i(946),therock:i(947),tidebit:i(948),tidex:i(949),urdubit:i(950),vaultoro:i(951),vbtc:i(952),virwox:i(953),wex:i(954),xbtce:i(955),yobit:i(956),yunbi:i(957),zaif:i(958),zb:i(799)};e.exports=Object.assign({version:"1.16.15",Exchange:s,exchanges:Object.keys(o)},o,r,a)},819:function(e,t,i){"use strict";(function(t){const i="undefined"!=typeof window,s=void 0!==t&&void 0!==t.versions&&void 0!==t.versions.electron,r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope,a=void 0!==t&&"win32"===t.platform,o=!(i||r);e.exports={isBrowser:i,isElectron:s,isWebWorker:r,isNode:o,isWindows:a}}).call(t,i(140))},820:function(e,t,i){"use strict";const{isObject:s,isNumber:r,isDictionary:a,isArray:o}=i(796),n=Object.keys,d=e=>o(e)?e:Object.values(e),c=e=>new Set(d(e)),h=(...e)=>Object.assign({},...e),l=e=>o(e)?Array.from(e):h(e);e.exports={keys:n,values:d,extend:h,clone:l,index:c,ordered:e=>e,unique:e=>Array.from(c(e)),inArray:(e,t)=>t.includes(e),toArray:e=>Object.values(e),isEmpty:e=>!e||(Array.isArray(e)?e:Object.keys(e)).length<1,keysort(e,t={}){for(const i of n(e).sort())t[i]=e[i];return t},indexBy(e,t,i={}){for(const s of d(e))t in s&&(i[s[t]]=s);return i},groupBy(e,t,i={}){for(const s of d(e))if(t in s){const e=s[t];i[e]=i[e]||[],i[e].push(s)}return i},filterBy(e,t,i,s=[]){for(const r of d(e))r[t]===i&&s.push(r);return s},sortBy:(e,t,i=!1,s=(i?-1:1))=>e.sort((e,i)=>e[t]<i[t]?-s:e[t]>i[t]?s:0),flatten:function e(t,i=[]){for(const s of t)o(s)?e(s,i):i.push(s);return i},pluck:(e,t)=>d(e).filter(e=>t in e).map(e=>e[t]),omit(e,...t){const i=l(e);for(const s of t)if(o(s))for(const e of s)delete i[e];else delete i[s];return i},sum(...e){const t=e.filter(r);return t.length>0?t.reduce((e,t)=>e+t,0):void 0},deepExtend:function e(...t){let i=void 0;for(const r of t)if(a(r)){s(i)||(i={});for(const t in r)i[t]=e(i[t],r[t])}else i=r;return i}}},821:function(e,t,i){var s;s=function(e){return function(){if("function"==typeof ArrayBuffer){var t=e.lib.WordArray,i=t.init;(t.init=function(e){if(e instanceof ArrayBuffer&&(e=new Uint8Array(e)),(e instanceof Int8Array||"undefined"!=typeof Uint8ClampedArray&&e instanceof Uint8ClampedArray||e instanceof Int16Array||e instanceof Uint16Array||e instanceof Int32Array||e instanceof Uint32Array||e instanceof Float32Array||e instanceof Float64Array)&&(e=new Uint8Array(e.buffer,e.byteOffset,e.byteLength)),e instanceof Uint8Array){for(var t=e.byteLength,s=[],r=0;r<t;r++)s[r>>>2]|=e[r]<<24-r%4*8;i.call(this,s,t)}else i.apply(this,arguments)}).prototype=t}}(),e.lib.WordArray},e.exports=s(i(43))},822:function(e,t,i){var s;s=function(e){return function(){var t=e,i=t.lib.WordArray,s=t.enc;s.Utf16=s.Utf16BE={stringify:function(e){for(var t=e.words,i=e.sigBytes,s=[],r=0;r<i;r+=2){var a=t[r>>>2]>>>16-r%4*8&65535;s.push(String.fromCharCode(a))}return s.join("")},parse:function(e){for(var t=e.length,s=[],r=0;r<t;r++)s[r>>>1]|=e.charCodeAt(r)<<16-r%2*16;return i.create(s,2*t)}};function r(e){return e<<8&4278255360|e>>>8&16711935}s.Utf16LE={stringify:function(e){for(var t=e.words,i=e.sigBytes,s=[],a=0;a<i;a+=2){var o=r(t[a>>>2]>>>16-a%4*8&65535);s.push(String.fromCharCode(o))}return s.join("")},parse:function(e){for(var t=e.length,s=[],a=0;a<t;a++)s[a>>>1]|=r(e.charCodeAt(a)<<16-a%2*16);return i.create(s,2*t)}}}(),e.enc.Utf16},e.exports=s(i(43))},823:function(e,t,i){var s;s=function(e){var t,i,s,r,a;return i=(t=e).lib.WordArray,s=t.algo,r=s.SHA256,a=s.SHA224=r.extend({_doReset:function(){this._hash=new i.init([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428])},_doFinalize:function(){var e=r._doFinalize.call(this);return e.sigBytes-=4,e}}),t.SHA224=r._createHelper(a),t.HmacSHA224=r._createHmacHelper(a),e.SHA224},e.exports=s(i(43),i(804))},824:function(e,t,i){var s;s=function(e){var t,i,s,r,a,o,n;return i=(t=e).x64,s=i.Word,r=i.WordArray,a=t.algo,o=a.SHA512,n=a.SHA384=o.extend({_doReset:function(){this._hash=new r.init([new s.init(3418070365,3238371032),new s.init(1654270250,914150663),new s.init(2438529370,812702999),new s.init(355462360,4144912697),new s.init(1731405415,4290775857),new s.init(2394180231,1750603025),new s.init(3675008525,1694076839),new s.init(1203062813,3204075428)])},_doFinalize:function(){var e=o._doFinalize.call(this);return e.sigBytes-=16,e}}),t.SHA384=o._createHelper(n),t.HmacSHA384=o._createHmacHelper(n),e.SHA384},e.exports=s(i(43),i(792),i(805))},825:function(e,t,i){var s;s=function(e){return function(t){var i=e,s=i.lib,r=s.WordArray,a=s.Hasher,o=i.x64.Word,n=i.algo,d=[],c=[],h=[];!function(){for(var e=1,t=0,i=0;i<24;i++){d[e+5*t]=(i+1)*(i+2)/2%64;var s=(2*e+3*t)%5;e=t%5,t=s}for(e=0;e<5;e++)for(t=0;t<5;t++)c[e+5*t]=t+(2*e+3*t)%5*5;for(var r=1,a=0;a<24;a++){for(var n=0,l=0,u=0;u<7;u++){if(1&r){var p=(1<<u)-1;p<32?l^=1<<p:n^=1<<p-32}128&r?r=r<<1^113:r<<=1}h[a]=o.create(n,l)}}();var l=[];!function(){for(var e=0;e<25;e++)l[e]=o.create()}();var u=n.SHA3=a.extend({cfg:a.cfg.extend({outputLength:512}),_doReset:function(){for(var e=this._state=[],t=0;t<25;t++)e[t]=new o.init;this.blockSize=(1600-2*this.cfg.outputLength)/32},_doProcessBlock:function(e,t){for(var i=this._state,s=this.blockSize/2,r=0;r<s;r++){var a=e[t+2*r],o=e[t+2*r+1];a=16711935&(a<<8|a>>>24)|4278255360&(a<<24|a>>>8),o=16711935&(o<<8|o>>>24)|4278255360&(o<<24|o>>>8),(S=i[r]).high^=o,S.low^=a}for(var n=0;n<24;n++){for(var u=0;u<5;u++){for(var p=0,m=0,f=0;f<5;f++){p^=(S=i[u+5*f]).high,m^=S.low}var y=l[u];y.high=p,y.low=m}for(u=0;u<5;u++){var b=l[(u+4)%5],w=l[(u+1)%5],v=w.high,k=w.low;for(p=b.high^(v<<1|k>>>31),m=b.low^(k<<1|v>>>31),f=0;f<5;f++){(S=i[u+5*f]).high^=p,S.low^=m}}for(var g=1;g<25;g++){var T=(S=i[g]).high,C=S.low,O=d[g];if(O<32)p=T<<O|C>>>32-O,m=C<<O|T>>>32-O;else p=C<<O-32|T>>>64-O,m=T<<O-32|C>>>64-O;var x=l[c[g]];x.high=p,x.low=m}var _=l[0],B=i[0];_.high=B.high,_.low=B.low;for(u=0;u<5;u++)for(f=0;f<5;f++){var S=i[g=u+5*f],I=l[g],E=l[(u+1)%5+5*f],M=l[(u+2)%5+5*f];S.high=I.high^~E.high&M.high,S.low=I.low^~E.low&M.low}S=i[0];var F=h[n];S.high^=F.high,S.low^=F.low}},_doFinalize:function(){var e=this._data,i=e.words,s=(this._nDataBytes,8*e.sigBytes),a=32*this.blockSize;i[s>>>5]|=1<<24-s%32,i[(t.ceil((s+1)/a)*a>>>5)-1]|=128,e.sigBytes=4*i.length,this._process();for(var o=this._state,n=this.cfg.outputLength/8,d=n/8,c=[],h=0;h<d;h++){var l=o[h],u=l.high,p=l.low;u=16711935&(u<<8|u>>>24)|4278255360&(u<<24|u>>>8),p=16711935&(p<<8|p>>>24)|4278255360&(p<<24|p>>>8),c.push(p),c.push(u)}return new r.init(c,n)},clone:function(){for(var e=a.clone.call(this),t=e._state=this._state.slice(0),i=0;i<25;i++)t[i]=t[i].clone();return e}});i.SHA3=a._createHelper(u),i.HmacSHA3=a._createHmacHelper(u)}(Math),e.SHA3},e.exports=s(i(43),i(792))},826:function(e,t,i){var s;s=function(e){return function(t){var i=e,s=i.lib,r=s.WordArray,a=s.Hasher,o=i.algo,n=r.create([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]),d=r.create([5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]),c=r.create([11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]),h=r.create([8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]),l=r.create([0,1518500249,1859775393,2400959708,2840853838]),u=r.create([1352829926,1548603684,1836072691,2053994217,0]),p=o.RIPEMD160=a.extend({_doReset:function(){this._hash=r.create([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(e,t){for(var i=0;i<16;i++){var s=t+i,r=e[s];e[s]=16711935&(r<<8|r>>>24)|4278255360&(r<<24|r>>>8)}var a,o,p,k,g,T,C,O,x,_,B,S=this._hash.words,I=l.words,E=u.words,M=n.words,F=d.words,P=c.words,A=h.words;T=a=S[0],C=o=S[1],O=p=S[2],x=k=S[3],_=g=S[4];for(i=0;i<80;i+=1)B=a+e[t+M[i]]|0,B+=i<16?m(o,p,k)+I[0]:i<32?f(o,p,k)+I[1]:i<48?y(o,p,k)+I[2]:i<64?b(o,p,k)+I[3]:w(o,p,k)+I[4],B=(B=v(B|=0,P[i]))+g|0,a=g,g=k,k=v(p,10),p=o,o=B,B=T+e[t+F[i]]|0,B+=i<16?w(C,O,x)+E[0]:i<32?b(C,O,x)+E[1]:i<48?y(C,O,x)+E[2]:i<64?f(C,O,x)+E[3]:m(C,O,x)+E[4],B=(B=v(B|=0,A[i]))+_|0,T=_,_=x,x=v(O,10),O=C,C=B;B=S[1]+p+x|0,S[1]=S[2]+k+_|0,S[2]=S[3]+g+T|0,S[3]=S[4]+a+C|0,S[4]=S[0]+o+O|0,S[0]=B},_doFinalize:function(){var e=this._data,t=e.words,i=8*this._nDataBytes,s=8*e.sigBytes;t[s>>>5]|=128<<24-s%32,t[14+(s+64>>>9<<4)]=16711935&(i<<8|i>>>24)|4278255360&(i<<24|i>>>8),e.sigBytes=4*(t.length+1),this._process();for(var r=this._hash,a=r.words,o=0;o<5;o++){var n=a[o];a[o]=16711935&(n<<8|n>>>24)|4278255360&(n<<24|n>>>8)}return r},clone:function(){var e=a.clone.call(this);return e._hash=this._hash.clone(),e}});function m(e,t,i){return e^t^i}function f(e,t,i){return e&t|~e&i}function y(e,t,i){return(e|~t)^i}function b(e,t,i){return e&i|t&~i}function w(e,t,i){return e^(t|~i)}function v(e,t){return e<<t|e>>>32-t}i.RIPEMD160=a._createHelper(p),i.HmacRIPEMD160=a._createHmacHelper(p)}(Math),e.RIPEMD160},e.exports=s(i(43))},827:function(e,t,i){var s;s=function(e){var t,i,s,r,a,o,n,d;return i=(t=e).lib,s=i.Base,r=i.WordArray,a=t.algo,o=a.SHA1,n=a.HMAC,d=a.PBKDF2=s.extend({cfg:s.extend({keySize:4,hasher:o,iterations:1}),init:function(e){this.cfg=this.cfg.extend(e)},compute:function(e,t){for(var i=this.cfg,s=n.create(i.hasher,e),a=r.create(),o=r.create([1]),d=a.words,c=o.words,h=i.keySize,l=i.iterations;d.length<h;){var u=s.update(t).finalize(o);s.reset();for(var p=u.words,m=p.length,f=u,y=1;y<l;y++){f=s.finalize(f),s.reset();for(var b=f.words,w=0;w<m;w++)p[w]^=b[w]}a.concat(u),c[0]++}return a.sigBytes=4*h,a}}),t.PBKDF2=function(e,t,i){return d.create(i).compute(e,t)},e.PBKDF2},e.exports=s(i(43),i(352),i(353))},828:function(e,t,i){var s;s=function(e){return e.mode.CFB=function(){var t=e.lib.BlockCipherMode.extend();function i(e,t,i,s){var r=this._iv;if(r){var a=r.slice(0);this._iv=void 0}else a=this._prevBlock;s.encryptBlock(a,0);for(var o=0;o<i;o++)e[t+o]^=a[o]}return t.Encryptor=t.extend({processBlock:function(e,t){var s=this._cipher,r=s.blockSize;i.call(this,e,t,r,s),this._prevBlock=e.slice(t,t+r)}}),t.Decryptor=t.extend({processBlock:function(e,t){var s=this._cipher,r=s.blockSize,a=e.slice(t,t+r);i.call(this,e,t,r,s),this._prevBlock=a}}),t}(),e.mode.CFB},e.exports=s(i(43),i(349))},829:function(e,t,i){var s;s=function(e){var t,i;return e.mode.CTR=(t=e.lib.BlockCipherMode.extend(),i=t.Encryptor=t.extend({processBlock:function(e,t){var i=this._cipher,s=i.blockSize,r=this._iv,a=this._counter;r&&(a=this._counter=r.slice(0),this._iv=void 0);var o=a.slice(0);i.encryptBlock(o,0),a[s-1]=a[s-1]+1|0;for(var n=0;n<s;n++)e[t+n]^=o[n]}}),t.Decryptor=i,t),e.mode.CTR},e.exports=s(i(43),i(349))},830:function(e,t,i){var s;s=function(e){return e.mode.CTRGladman=function(){var t=e.lib.BlockCipherMode.extend();function i(e){if(255==(e>>24&255)){var t=e>>16&255,i=e>>8&255,s=255&e;255===t?(t=0,255===i?(i=0,255===s?s=0:++s):++i):++t,e=0,e+=t<<16,e+=i<<8,e+=s}else e+=1<<24;return e}var s=t.Encryptor=t.extend({processBlock:function(e,t){var s=this._cipher,r=s.blockSize,a=this._iv,o=this._counter;a&&(o=this._counter=a.slice(0),this._iv=void 0),function(e){0===(e[0]=i(e[0]))&&(e[1]=i(e[1]))}(o);var n=o.slice(0);s.encryptBlock(n,0);for(var d=0;d<r;d++)e[t+d]^=n[d]}});return t.Decryptor=s,t}(),e.mode.CTRGladman},e.exports=s(i(43),i(349))},831:function(e,t,i){var s;s=function(e){var t,i;return e.mode.OFB=(t=e.lib.BlockCipherMode.extend(),i=t.Encryptor=t.extend({processBlock:function(e,t){var i=this._cipher,s=i.blockSize,r=this._iv,a=this._keystream;r&&(a=this._keystream=r.slice(0),this._iv=void 0),i.encryptBlock(a,0);for(var o=0;o<s;o++)e[t+o]^=a[o]}}),t.Decryptor=i,t),e.mode.OFB},e.exports=s(i(43),i(349))},832:function(e,t,i){var s;s=function(e){var t;return e.mode.ECB=((t=e.lib.BlockCipherMode.extend()).Encryptor=t.extend({processBlock:function(e,t){this._cipher.encryptBlock(e,t)}}),t.Decryptor=t.extend({processBlock:function(e,t){this._cipher.decryptBlock(e,t)}}),t),e.mode.ECB},e.exports=s(i(43),i(349))},833:function(e,t,i){var s;s=function(e){return e.pad.AnsiX923={pad:function(e,t){var i=e.sigBytes,s=4*t,r=s-i%s,a=i+r-1;e.clamp(),e.words[a>>>2]|=r<<24-a%4*8,e.sigBytes+=r},unpad:function(e){var t=255&e.words[e.sigBytes-1>>>2];e.sigBytes-=t}},e.pad.Ansix923},e.exports=s(i(43),i(349))},834:function(e,t,i){var s;s=function(e){return e.pad.Iso10126={pad:function(t,i){var s=4*i,r=s-t.sigBytes%s;t.concat(e.lib.WordArray.random(r-1)).concat(e.lib.WordArray.create([r<<24],1))},unpad:function(e){var t=255&e.words[e.sigBytes-1>>>2];e.sigBytes-=t}},e.pad.Iso10126},e.exports=s(i(43),i(349))},835:function(e,t,i){var s;s=function(e){return e.pad.Iso97971={pad:function(t,i){t.concat(e.lib.WordArray.create([2147483648],1)),e.pad.ZeroPadding.pad(t,i)},unpad:function(t){e.pad.ZeroPadding.unpad(t),t.sigBytes--}},e.pad.Iso97971},e.exports=s(i(43),i(349))},836:function(e,t,i){var s;s=function(e){return e.pad.ZeroPadding={pad:function(e,t){var i=4*t;e.clamp(),e.sigBytes+=i-(e.sigBytes%i||i)},unpad:function(e){for(var t=e.words,i=e.sigBytes-1;!(t[i>>>2]>>>24-i%4*8&255);)i--;e.sigBytes=i+1}},e.pad.ZeroPadding},e.exports=s(i(43),i(349))},837:function(e,t,i){var s;s=function(e){return e.pad.NoPadding={pad:function(){},unpad:function(){}},e.pad.NoPadding},e.exports=s(i(43),i(349))},838:function(e,t,i){var s;s=function(e){var t,i,s;return i=(t=e).lib.CipherParams,s=t.enc.Hex,t.format.Hex={stringify:function(e){return e.ciphertext.toString(s)},parse:function(e){var t=s.parse(e);return i.create({ciphertext:t})}},e.format.Hex},e.exports=s(i(43),i(349))},839:function(e,t,i){var s;s=function(e){return function(){var t=e,i=t.lib,s=i.WordArray,r=i.BlockCipher,a=t.algo,o=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4],n=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32],d=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28],c=[{0:8421888,268435456:32768,536870912:8421378,805306368:2,1073741824:512,1342177280:8421890,1610612736:8389122,1879048192:8388608,2147483648:514,2415919104:8389120,2684354560:33280,2952790016:8421376,3221225472:32770,3489660928:8388610,3758096384:0,4026531840:33282,134217728:0,402653184:8421890,671088640:33282,939524096:32768,1207959552:8421888,1476395008:512,1744830464:8421378,2013265920:2,2281701376:8389120,2550136832:33280,2818572288:8421376,3087007744:8389122,3355443200:8388610,3623878656:32770,3892314112:514,4160749568:8388608,1:32768,268435457:2,536870913:8421888,805306369:8388608,1073741825:8421378,1342177281:33280,1610612737:512,1879048193:8389122,2147483649:8421890,2415919105:8421376,2684354561:8388610,2952790017:33282,3221225473:514,3489660929:8389120,3758096385:32770,4026531841:0,134217729:8421890,402653185:8421376,671088641:8388608,939524097:512,1207959553:32768,1476395009:8388610,1744830465:2,2013265921:33282,2281701377:32770,2550136833:8389122,2818572289:514,3087007745:8421888,3355443201:8389120,3623878657:0,3892314113:33280,4160749569:8421378},{0:1074282512,16777216:16384,33554432:524288,50331648:1074266128,67108864:1073741840,83886080:1074282496,100663296:1073758208,117440512:16,134217728:540672,150994944:1073758224,167772160:1073741824,184549376:540688,201326592:524304,218103808:0,234881024:16400,251658240:1074266112,8388608:1073758208,25165824:540688,41943040:16,58720256:1073758224,75497472:1074282512,92274688:1073741824,109051904:524288,125829120:1074266128,142606336:524304,159383552:0,176160768:16384,192937984:1074266112,209715200:1073741840,226492416:540672,243269632:1074282496,260046848:16400,268435456:0,285212672:1074266128,301989888:1073758224,318767104:1074282496,335544320:1074266112,352321536:16,369098752:540688,385875968:16384,402653184:16400,419430400:524288,436207616:524304,452984832:1073741840,469762048:540672,486539264:1073758208,503316480:1073741824,520093696:1074282512,276824064:540688,293601280:524288,310378496:1074266112,327155712:16384,343932928:1073758208,360710144:1074282512,377487360:16,394264576:1073741824,411041792:1074282496,427819008:1073741840,444596224:1073758224,461373440:524304,478150656:0,494927872:16400,511705088:1074266128,528482304:540672},{0:260,1048576:0,2097152:67109120,3145728:65796,4194304:65540,5242880:67108868,6291456:67174660,7340032:67174400,8388608:67108864,9437184:67174656,10485760:65792,11534336:67174404,12582912:67109124,13631488:65536,14680064:4,15728640:256,524288:67174656,1572864:67174404,2621440:0,3670016:67109120,4718592:67108868,5767168:65536,6815744:65540,7864320:260,8912896:4,9961472:256,11010048:67174400,12058624:65796,13107200:65792,14155776:67109124,15204352:67174660,16252928:67108864,16777216:67174656,17825792:65540,18874368:65536,19922944:67109120,20971520:256,22020096:67174660,23068672:67108868,24117248:0,25165824:67109124,26214400:67108864,27262976:4,28311552:65792,29360128:67174400,30408704:260,31457280:65796,32505856:67174404,17301504:67108864,18350080:260,19398656:67174656,20447232:0,21495808:65540,22544384:67109120,23592960:256,24641536:67174404,25690112:65536,26738688:67174660,27787264:65796,28835840:67108868,29884416:67109124,30932992:67174400,31981568:4,33030144:65792},{0:2151682048,65536:2147487808,131072:4198464,196608:2151677952,262144:0,327680:4198400,393216:2147483712,458752:4194368,524288:2147483648,589824:4194304,655360:64,720896:2147487744,786432:2151678016,851968:4160,917504:4096,983040:2151682112,32768:2147487808,98304:64,163840:2151678016,229376:2147487744,294912:4198400,360448:2151682112,425984:0,491520:2151677952,557056:4096,622592:2151682048,688128:4194304,753664:4160,819200:2147483648,884736:4194368,950272:4198464,1015808:2147483712,1048576:4194368,1114112:4198400,1179648:2147483712,1245184:0,1310720:4160,1376256:2151678016,1441792:2151682048,1507328:2147487808,1572864:2151682112,1638400:2147483648,1703936:2151677952,1769472:4198464,1835008:2147487744,1900544:4194304,1966080:64,2031616:4096,1081344:2151677952,1146880:2151682112,1212416:0,1277952:4198400,1343488:4194368,1409024:2147483648,1474560:2147487808,1540096:64,1605632:2147483712,1671168:4096,1736704:2147487744,1802240:2151678016,1867776:4160,1933312:2151682048,1998848:4194304,2064384:4198464},{0:128,4096:17039360,8192:262144,12288:536870912,16384:537133184,20480:16777344,24576:553648256,28672:262272,32768:16777216,36864:537133056,40960:536871040,45056:553910400,49152:553910272,53248:0,57344:17039488,61440:553648128,2048:17039488,6144:553648256,10240:128,14336:17039360,18432:262144,22528:537133184,26624:553910272,30720:536870912,34816:537133056,38912:0,43008:553910400,47104:16777344,51200:536871040,55296:553648128,59392:16777216,63488:262272,65536:262144,69632:128,73728:536870912,77824:553648256,81920:16777344,86016:553910272,90112:537133184,94208:16777216,98304:553910400,102400:553648128,106496:17039360,110592:537133056,114688:262272,118784:536871040,122880:0,126976:17039488,67584:553648256,71680:16777216,75776:17039360,79872:537133184,83968:536870912,88064:17039488,92160:128,96256:553910272,100352:262272,104448:553910400,108544:0,112640:553648128,116736:16777344,120832:262144,124928:537133056,129024:536871040},{0:268435464,256:8192,512:270532608,768:270540808,1024:268443648,1280:2097152,1536:2097160,1792:268435456,2048:0,2304:268443656,2560:2105344,2816:8,3072:270532616,3328:2105352,3584:8200,3840:270540800,128:270532608,384:270540808,640:8,896:2097152,1152:2105352,1408:268435464,1664:268443648,1920:8200,2176:2097160,2432:8192,2688:268443656,2944:270532616,3200:0,3456:270540800,3712:2105344,3968:268435456,4096:268443648,4352:270532616,4608:270540808,4864:8200,5120:2097152,5376:268435456,5632:268435464,5888:2105344,6144:2105352,6400:0,6656:8,6912:270532608,7168:8192,7424:268443656,7680:270540800,7936:2097160,4224:8,4480:2105344,4736:2097152,4992:268435464,5248:268443648,5504:8200,5760:270540808,6016:270532608,6272:270540800,6528:270532616,6784:8192,7040:2105352,7296:2097160,7552:0,7808:268435456,8064:268443656},{0:1048576,16:33555457,32:1024,48:1049601,64:34604033,80:0,96:1,112:34603009,128:33555456,144:1048577,160:33554433,176:34604032,192:34603008,208:1025,224:1049600,240:33554432,8:34603009,24:0,40:33555457,56:34604032,72:1048576,88:33554433,104:33554432,120:1025,136:1049601,152:33555456,168:34603008,184:1048577,200:1024,216:34604033,232:1,248:1049600,256:33554432,272:1048576,288:33555457,304:34603009,320:1048577,336:33555456,352:34604032,368:1049601,384:1025,400:34604033,416:1049600,432:1,448:0,464:34603008,480:33554433,496:1024,264:1049600,280:33555457,296:34603009,312:1,328:33554432,344:1048576,360:1025,376:34604032,392:33554433,408:34603008,424:0,440:34604033,456:1049601,472:1024,488:33555456,504:1048577},{0:134219808,1:131072,2:134217728,3:32,4:131104,5:134350880,6:134350848,7:2048,8:134348800,9:134219776,10:133120,11:134348832,12:2080,13:0,14:134217760,15:133152,2147483648:2048,2147483649:134350880,2147483650:134219808,2147483651:134217728,2147483652:134348800,2147483653:133120,2147483654:133152,2147483655:32,2147483656:134217760,2147483657:2080,2147483658:131104,2147483659:134350848,2147483660:0,2147483661:134348832,2147483662:134219776,2147483663:131072,16:133152,17:134350848,18:32,19:2048,20:134219776,21:134217760,22:134348832,23:131072,24:0,25:131104,26:134348800,27:134219808,28:134350880,29:133120,30:2080,31:134217728,2147483664:131072,2147483665:2048,2147483666:134348832,2147483667:133152,2147483668:32,2147483669:134348800,2147483670:134217728,2147483671:134219808,2147483672:134350880,2147483673:134217760,2147483674:134219776,2147483675:0,2147483676:133120,2147483677:2080,2147483678:131104,2147483679:134350848}],h=[4160749569,528482304,33030144,2064384,129024,8064,504,2147483679],l=a.DES=r.extend({_doReset:function(){for(var e=this._key.words,t=[],i=0;i<56;i++){var s=o[i]-1;t[i]=e[s>>>5]>>>31-s%32&1}for(var r=this._subKeys=[],a=0;a<16;a++){var c=r[a]=[],h=d[a];for(i=0;i<24;i++)c[i/6|0]|=t[(n[i]-1+h)%28]<<31-i%6,c[4+(i/6|0)]|=t[28+(n[i+24]-1+h)%28]<<31-i%6;c[0]=c[0]<<1|c[0]>>>31;for(i=1;i<7;i++)c[i]=c[i]>>>4*(i-1)+3;c[7]=c[7]<<5|c[7]>>>27}var l=this._invSubKeys=[];for(i=0;i<16;i++)l[i]=r[15-i]},encryptBlock:function(e,t){this._doCryptBlock(e,t,this._subKeys)},decryptBlock:function(e,t){this._doCryptBlock(e,t,this._invSubKeys)},_doCryptBlock:function(e,t,i){this._lBlock=e[t],this._rBlock=e[t+1],u.call(this,4,252645135),u.call(this,16,65535),p.call(this,2,858993459),p.call(this,8,16711935),u.call(this,1,1431655765);for(var s=0;s<16;s++){for(var r=i[s],a=this._lBlock,o=this._rBlock,n=0,d=0;d<8;d++)n|=c[d][((o^r[d])&h[d])>>>0];this._lBlock=o,this._rBlock=a^n}var l=this._lBlock;this._lBlock=this._rBlock,this._rBlock=l,u.call(this,1,1431655765),p.call(this,8,16711935),p.call(this,2,858993459),u.call(this,16,65535),u.call(this,4,252645135),e[t]=this._lBlock,e[t+1]=this._rBlock},keySize:2,ivSize:2,blockSize:2});function u(e,t){var i=(this._lBlock>>>e^this._rBlock)&t;this._rBlock^=i,this._lBlock^=i<<e}function p(e,t){var i=(this._rBlock>>>e^this._lBlock)&t;this._lBlock^=i,this._rBlock^=i<<e}t.DES=r._createHelper(l);var m=a.TripleDES=r.extend({_doReset:function(){var e=this._key.words;this._des1=l.createEncryptor(s.create(e.slice(0,2))),this._des2=l.createEncryptor(s.create(e.slice(2,4))),this._des3=l.createEncryptor(s.create(e.slice(4,6)))},encryptBlock:function(e,t){this._des1.encryptBlock(e,t),this._des2.decryptBlock(e,t),this._des3.encryptBlock(e,t)},decryptBlock:function(e,t){this._des3.decryptBlock(e,t),this._des2.encryptBlock(e,t),this._des1.decryptBlock(e,t)},keySize:6,ivSize:2,blockSize:2});t.TripleDES=r._createHelper(m)}(),e.TripleDES},e.exports=s(i(43),i(350),i(351),i(220),i(349))},840:function(e,t,i){var s;s=function(e){return function(){var t=e,i=t.lib.StreamCipher,s=t.algo,r=s.RC4=i.extend({_doReset:function(){for(var e=this._key,t=e.words,i=e.sigBytes,s=this._S=[],r=0;r<256;r++)s[r]=r;r=0;for(var a=0;r<256;r++){var o=r%i,n=t[o>>>2]>>>24-o%4*8&255;a=(a+s[r]+n)%256;var d=s[r];s[r]=s[a],s[a]=d}this._i=this._j=0},_doProcessBlock:function(e,t){e[t]^=a.call(this)},keySize:8,ivSize:0});function a(){for(var e=this._S,t=this._i,i=this._j,s=0,r=0;r<4;r++){i=(i+e[t=(t+1)%256])%256;var a=e[t];e[t]=e[i],e[i]=a,s|=e[(e[t]+e[i])%256]<<24-8*r}return this._i=t,this._j=i,s}t.RC4=i._createHelper(r);var o=s.RC4Drop=r.extend({cfg:r.cfg.extend({drop:192}),_doReset:function(){r._doReset.call(this);for(var e=this.cfg.drop;e>0;e--)a.call(this)}});t.RC4Drop=i._createHelper(o)}(),e.RC4},e.exports=s(i(43),i(350),i(351),i(220),i(349))},841:function(e,t,i){var s;s=function(e){return function(){var t=e,i=t.lib.StreamCipher,s=[],r=[],a=[],o=t.algo.Rabbit=i.extend({_doReset:function(){for(var e=this._key.words,t=this.cfg.iv,i=0;i<4;i++)e[i]=16711935&(e[i]<<8|e[i]>>>24)|4278255360&(e[i]<<24|e[i]>>>8);var s=this._X=[e[0],e[3]<<16|e[2]>>>16,e[1],e[0]<<16|e[3]>>>16,e[2],e[1]<<16|e[0]>>>16,e[3],e[2]<<16|e[1]>>>16],r=this._C=[e[2]<<16|e[2]>>>16,4294901760&e[0]|65535&e[1],e[3]<<16|e[3]>>>16,4294901760&e[1]|65535&e[2],e[0]<<16|e[0]>>>16,4294901760&e[2]|65535&e[3],e[1]<<16|e[1]>>>16,4294901760&e[3]|65535&e[0]];this._b=0;for(i=0;i<4;i++)n.call(this);for(i=0;i<8;i++)r[i]^=s[i+4&7];if(t){var a=t.words,o=a[0],d=a[1],c=16711935&(o<<8|o>>>24)|4278255360&(o<<24|o>>>8),h=16711935&(d<<8|d>>>24)|4278255360&(d<<24|d>>>8),l=c>>>16|4294901760&h,u=h<<16|65535&c;r[0]^=c,r[1]^=l,r[2]^=h,r[3]^=u,r[4]^=c,r[5]^=l,r[6]^=h,r[7]^=u;for(i=0;i<4;i++)n.call(this)}},_doProcessBlock:function(e,t){var i=this._X;n.call(this),s[0]=i[0]^i[5]>>>16^i[3]<<16,s[1]=i[2]^i[7]>>>16^i[5]<<16,s[2]=i[4]^i[1]>>>16^i[7]<<16,s[3]=i[6]^i[3]>>>16^i[1]<<16;for(var r=0;r<4;r++)s[r]=16711935&(s[r]<<8|s[r]>>>24)|4278255360&(s[r]<<24|s[r]>>>8),e[t+r]^=s[r]},blockSize:4,ivSize:2});function n(){for(var e=this._X,t=this._C,i=0;i<8;i++)r[i]=t[i];t[0]=t[0]+1295307597+this._b|0,t[1]=t[1]+3545052371+(t[0]>>>0<r[0]>>>0?1:0)|0,t[2]=t[2]+886263092+(t[1]>>>0<r[1]>>>0?1:0)|0,t[3]=t[3]+1295307597+(t[2]>>>0<r[2]>>>0?1:0)|0,t[4]=t[4]+3545052371+(t[3]>>>0<r[3]>>>0?1:0)|0,t[5]=t[5]+886263092+(t[4]>>>0<r[4]>>>0?1:0)|0,t[6]=t[6]+1295307597+(t[5]>>>0<r[5]>>>0?1:0)|0,t[7]=t[7]+3545052371+(t[6]>>>0<r[6]>>>0?1:0)|0,this._b=t[7]>>>0<r[7]>>>0?1:0;for(i=0;i<8;i++){var s=e[i]+t[i],o=65535&s,n=s>>>16,d=((o*o>>>17)+o*n>>>15)+n*n,c=((4294901760&s)*s|0)+((65535&s)*s|0);a[i]=d^c}e[0]=a[0]+(a[7]<<16|a[7]>>>16)+(a[6]<<16|a[6]>>>16)|0,e[1]=a[1]+(a[0]<<8|a[0]>>>24)+a[7]|0,e[2]=a[2]+(a[1]<<16|a[1]>>>16)+(a[0]<<16|a[0]>>>16)|0,e[3]=a[3]+(a[2]<<8|a[2]>>>24)+a[1]|0,e[4]=a[4]+(a[3]<<16|a[3]>>>16)+(a[2]<<16|a[2]>>>16)|0,e[5]=a[5]+(a[4]<<8|a[4]>>>24)+a[3]|0,e[6]=a[6]+(a[5]<<16|a[5]>>>16)+(a[4]<<16|a[4]>>>16)|0,e[7]=a[7]+(a[6]<<8|a[6]>>>24)+a[5]|0}t.Rabbit=i._createHelper(o)}(),e.Rabbit},e.exports=s(i(43),i(350),i(351),i(220),i(349))},842:function(e,t,i){var s;s=function(e){return function(){var t=e,i=t.lib.StreamCipher,s=[],r=[],a=[],o=t.algo.RabbitLegacy=i.extend({_doReset:function(){var e=this._key.words,t=this.cfg.iv,i=this._X=[e[0],e[3]<<16|e[2]>>>16,e[1],e[0]<<16|e[3]>>>16,e[2],e[1]<<16|e[0]>>>16,e[3],e[2]<<16|e[1]>>>16],s=this._C=[e[2]<<16|e[2]>>>16,4294901760&e[0]|65535&e[1],e[3]<<16|e[3]>>>16,4294901760&e[1]|65535&e[2],e[0]<<16|e[0]>>>16,4294901760&e[2]|65535&e[3],e[1]<<16|e[1]>>>16,4294901760&e[3]|65535&e[0]];this._b=0;for(var r=0;r<4;r++)n.call(this);for(r=0;r<8;r++)s[r]^=i[r+4&7];if(t){var a=t.words,o=a[0],d=a[1],c=16711935&(o<<8|o>>>24)|4278255360&(o<<24|o>>>8),h=16711935&(d<<8|d>>>24)|4278255360&(d<<24|d>>>8),l=c>>>16|4294901760&h,u=h<<16|65535&c;s[0]^=c,s[1]^=l,s[2]^=h,s[3]^=u,s[4]^=c,s[5]^=l,s[6]^=h,s[7]^=u;for(r=0;r<4;r++)n.call(this)}},_doProcessBlock:function(e,t){var i=this._X;n.call(this),s[0]=i[0]^i[5]>>>16^i[3]<<16,s[1]=i[2]^i[7]>>>16^i[5]<<16,s[2]=i[4]^i[1]>>>16^i[7]<<16,s[3]=i[6]^i[3]>>>16^i[1]<<16;for(var r=0;r<4;r++)s[r]=16711935&(s[r]<<8|s[r]>>>24)|4278255360&(s[r]<<24|s[r]>>>8),e[t+r]^=s[r]},blockSize:4,ivSize:2});function n(){for(var e=this._X,t=this._C,i=0;i<8;i++)r[i]=t[i];t[0]=t[0]+1295307597+this._b|0,t[1]=t[1]+3545052371+(t[0]>>>0<r[0]>>>0?1:0)|0,t[2]=t[2]+886263092+(t[1]>>>0<r[1]>>>0?1:0)|0,t[3]=t[3]+1295307597+(t[2]>>>0<r[2]>>>0?1:0)|0,t[4]=t[4]+3545052371+(t[3]>>>0<r[3]>>>0?1:0)|0,t[5]=t[5]+886263092+(t[4]>>>0<r[4]>>>0?1:0)|0,t[6]=t[6]+1295307597+(t[5]>>>0<r[5]>>>0?1:0)|0,t[7]=t[7]+3545052371+(t[6]>>>0<r[6]>>>0?1:0)|0,this._b=t[7]>>>0<r[7]>>>0?1:0;for(i=0;i<8;i++){var s=e[i]+t[i],o=65535&s,n=s>>>16,d=((o*o>>>17)+o*n>>>15)+n*n,c=((4294901760&s)*s|0)+((65535&s)*s|0);a[i]=d^c}e[0]=a[0]+(a[7]<<16|a[7]>>>16)+(a[6]<<16|a[6]>>>16)|0,e[1]=a[1]+(a[0]<<8|a[0]>>>24)+a[7]|0,e[2]=a[2]+(a[1]<<16|a[1]>>>16)+(a[0]<<16|a[0]>>>16)|0,e[3]=a[3]+(a[2]<<8|a[2]>>>24)+a[1]|0,e[4]=a[4]+(a[3]<<16|a[3]>>>16)+(a[2]<<16|a[2]>>>16)|0,e[5]=a[5]+(a[4]<<8|a[4]>>>24)+a[3]|0,e[6]=a[6]+(a[5]<<16|a[5]>>>16)+(a[4]<<16|a[4]>>>16)|0,e[7]=a[7]+(a[6]<<8|a[6]>>>24)+a[5]|0}t.RabbitLegacy=i._createHelper(o)}(),e.RabbitLegacy},e.exports=s(i(43),i(350),i(351),i(220),i(349))},843:function(e,t,i){"use strict";var s=i(844),r=i(845),a=i(807);e.exports={formats:a,parse:r,stringify:s}},844:function(e,t,i){"use strict";var s=i(806),r=i(807),a={brackets:function(e){return e+"[]"},indices:function(e,t){return e+"["+t+"]"},repeat:function(e){return e}},o=Date.prototype.toISOString,n={delimiter:"&",encode:!0,encoder:s.encode,encodeValuesOnly:!1,serializeDate:function(e){return o.call(e)},skipNulls:!1,strictNullHandling:!1},d=function e(t,i,r,a,o,d,c,h,l,u,p,m){var f=t;if("function"==typeof c)f=c(i,f);else if(f instanceof Date)f=u(f);else if(null===f){if(a)return d&&!m?d(i,n.encoder):i;f=""}if("string"==typeof f||"number"==typeof f||"boolean"==typeof f||s.isBuffer(f))return d?[p(m?i:d(i,n.encoder))+"="+p(d(f,n.encoder))]:[p(i)+"="+p(String(f))];var y,b=[];if(void 0===f)return b;if(Array.isArray(c))y=c;else{var w=Object.keys(f);y=h?w.sort(h):w}for(var v=0;v<y.length;++v){var k=y[v];o&&null===f[k]||(b=Array.isArray(f)?b.concat(e(f[k],r(i,k),r,a,o,d,c,h,l,u,p,m)):b.concat(e(f[k],i+(l?"."+k:"["+k+"]"),r,a,o,d,c,h,l,u,p,m)))}return b};e.exports=function(e,t){var i=e,o=t?s.assign({},t):{};if(null!==o.encoder&&void 0!==o.encoder&&"function"!=typeof o.encoder)throw new TypeError("Encoder has to be a function.");var c=void 0===o.delimiter?n.delimiter:o.delimiter,h="boolean"==typeof o.strictNullHandling?o.strictNullHandling:n.strictNullHandling,l="boolean"==typeof o.skipNulls?o.skipNulls:n.skipNulls,u="boolean"==typeof o.encode?o.encode:n.encode,p="function"==typeof o.encoder?o.encoder:n.encoder,m="function"==typeof o.sort?o.sort:null,f=void 0!==o.allowDots&&o.allowDots,y="function"==typeof o.serializeDate?o.serializeDate:n.serializeDate,b="boolean"==typeof o.encodeValuesOnly?o.encodeValuesOnly:n.encodeValuesOnly;if(void 0===o.format)o.format=r.default;else if(!Object.prototype.hasOwnProperty.call(r.formatters,o.format))throw new TypeError("Unknown format option provided.");var w,v,k=r.formatters[o.format];"function"==typeof o.filter?i=(v=o.filter)("",i):Array.isArray(o.filter)&&(w=v=o.filter);var g,T=[];if("object"!=typeof i||null===i)return"";g=o.arrayFormat in a?o.arrayFormat:"indices"in o?o.indices?"indices":"repeat":"indices";var C=a[g];w||(w=Object.keys(i)),m&&w.sort(m);for(var O=0;O<w.length;++O){var x=w[O];l&&null===i[x]||(T=T.concat(d(i[x],x,C,h,l,u?p:null,v,m,f,y,k,b)))}var _=T.join(c),B=!0===o.addQueryPrefix?"?":"";return _.length>0?B+_:""}},845:function(e,t,i){"use strict";var s=i(806),r=Object.prototype.hasOwnProperty,a={allowDots:!1,allowPrototypes:!1,arrayLimit:20,decoder:s.decode,delimiter:"&",depth:5,parameterLimit:1e3,plainObjects:!1,strictNullHandling:!1},o=function(e,t,i){if(e){var s=i.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,a=/(\[[^[\]]*])/g,o=/(\[[^[\]]*])/.exec(s),n=o?s.slice(0,o.index):s,d=[];if(n){if(!i.plainObjects&&r.call(Object.prototype,n)&&!i.allowPrototypes)return;d.push(n)}for(var c=0;null!==(o=a.exec(s))&&c<i.depth;){if(c+=1,!i.plainObjects&&r.call(Object.prototype,o[1].slice(1,-1))&&!i.allowPrototypes)return;d.push(o[1])}return o&&d.push("["+s.slice(o.index)+"]"),function(e,t,i){for(var s=t,r=e.length-1;r>=0;--r){var a,o=e[r];if("[]"===o)a=(a=[]).concat(s);else{a=i.plainObjects?Object.create(null):{};var n="["===o.charAt(0)&&"]"===o.charAt(o.length-1)?o.slice(1,-1):o,d=parseInt(n,10);!isNaN(d)&&o!==n&&String(d)===n&&d>=0&&i.parseArrays&&d<=i.arrayLimit?(a=[])[d]=s:a[n]=s}s=a}return s}(d,t,i)}};e.exports=function(e,t){var i=t?s.assign({},t):{};if(null!==i.decoder&&void 0!==i.decoder&&"function"!=typeof i.decoder)throw new TypeError("Decoder has to be a function.");if(i.ignoreQueryPrefix=!0===i.ignoreQueryPrefix,i.delimiter="string"==typeof i.delimiter||s.isRegExp(i.delimiter)?i.delimiter:a.delimiter,i.depth="number"==typeof i.depth?i.depth:a.depth,i.arrayLimit="number"==typeof i.arrayLimit?i.arrayLimit:a.arrayLimit,i.parseArrays=!1!==i.parseArrays,i.decoder="function"==typeof i.decoder?i.decoder:a.decoder,i.allowDots="boolean"==typeof i.allowDots?i.allowDots:a.allowDots,i.plainObjects="boolean"==typeof i.plainObjects?i.plainObjects:a.plainObjects,i.allowPrototypes="boolean"==typeof i.allowPrototypes?i.allowPrototypes:a.allowPrototypes,i.parameterLimit="number"==typeof i.parameterLimit?i.parameterLimit:a.parameterLimit,i.strictNullHandling="boolean"==typeof i.strictNullHandling?i.strictNullHandling:a.strictNullHandling,""===e||null===e||void 0===e)return i.plainObjects?Object.create(null):{};for(var n="string"==typeof e?function(e,t){for(var i={},s=t.ignoreQueryPrefix?e.replace(/^\?/,""):e,o=t.parameterLimit===1/0?void 0:t.parameterLimit,n=s.split(t.delimiter,o),d=0;d<n.length;++d){var c,h,l=n[d],u=l.indexOf("]="),p=-1===u?l.indexOf("="):u+1;-1===p?(c=t.decoder(l,a.decoder),h=t.strictNullHandling?null:""):(c=t.decoder(l.slice(0,p),a.decoder),h=t.decoder(l.slice(p+1),a.decoder)),r.call(i,c)?i[c]=[].concat(i[c]).concat(h):i[c]=h}return i}(e,i):e,d=i.plainObjects?Object.create(null):{},c=Object.keys(n),h=0;h<c.length;++h){var l=c[h],u=o(l,n[l],i);d=s.merge(d,u,i)}return s.compact(d)}},846:function(e,t,i){"use strict";const s=i(803),{capitalize:r}=i(795),{stringToBase64:a,utf16ToBase64:o,urlencodeBase64:n}=i(802),d=(e,t,i="sha256",a="hex")=>{const o=s["Hmac"+i.toUpperCase()](e,t);if(a){const e="binary"===a?"Latin1":r(a);return o.toString(s.enc[r(e)])}return o};e.exports={hash:(e,t="md5",i="hex")=>{const a=s[t.toUpperCase()](e);return"binary"===i?a:a.toString(s.enc[r(i)])},hmac:d,jwt:function(e,t,i="HS256",s="sha256"){const r=[n(a(JSON.stringify({alg:i,typ:"JWT"}))),n(a(JSON.stringify(e)))].join(".");return[r,n(o(d(r,t,s,"utf16")))].join(".")}}},847:function(e,t,i){"use strict";const{sleep:s,now:r}=i(808);e.exports={throttle:function e(t){let i=r(),a=void 0!==t.numTokens?t.numTokens:t.capacity,o=!1;const n=[];return Object.assign(e=>{if(n.length>t.maxCapacity)throw new Error("Backlog is over max capacity of "+t.maxCapacity);return new Promise(async(d,c)=>{try{if(n.push({cost:e,resolve:d,reject:c}),!o){for(o=!0;n.length>0;){if((t.capacity?a>0:a>=0)&&n.length>0){let{cost:e,resolve:i,reject:s}=n[0];e=e||t.defaultCost,a>=Math.min(e,t.capacity)&&(a-=e,n.shift(),i())}const e=r(),o=e-i;i=e,a=Math.min(t.capacity,a+o*t.refillRate),await s(t.delay)}o=!1}}catch(e){c(e)}})},t,{configure:i=>e(Object.assign({},t,i))})}}},848:function(e,t,i){"use strict";const s=e=>{let t=e.slice(0,-1),i=e.slice(-1),s=60;return"y"===i?s=31536e3:"M"===i?s=2592e3:"w"===i?s=604800:"d"===i?s=86400:"h"===i&&(s=3600),t*s};e.exports={aggregate(e){let t={};for(const[i,s]of e)s>0&&(t[i]=(t[i]||0)+s);return Object.keys(t).map(e=>[parseFloat(e),parseFloat(t[e])])},parseTimeframe:s,buildOHLCVC:(e,t="1m",i=-1/0,r=1/0)=>{let a=1e3*s(t),o=[];const[n,,d,c,h,l,u]=[0,1,2,3,4,5,6];let p=Math.min(e.length-1,r);for(let s=0;s<=p;s++){let t=e[s];if(t.timestamp<i)continue;let r=Math.floor(t.timestamp/a)*a,p=o.length-1;-1===p||r>=o[p][n]+a?o.push([r,t.price,t.price,t.price,t.price,t.amount,1]):(o[p][d]=Math.max(o[p][d],t.price),o[p][c]=Math.min(o[p][c],t.price),o[p][h]=t.price,o[p][l]+=t.amount,o[p][u]++)}return o}}},849:function(e,t,i){"use strict";e.exports=class{constructor(e,t){this.exchange=e,this.symbol=t,this.market=e.markets[t]}amountToPrecision(e){return this.exchange.amountToPrecision(this.symbol,e)}createLimitBuyOrder(e,t){return this.exchange.createLimitBuyOrder(this.symbol,e,t)}createLimitSellOrder(e,t){return this.exchange.createLimitSellOrder(this.symbol,e,t)}}},850:function(e,t,i){var s;!function(r){"use strict";function a(e){var t=e&&e.Promise||r.Promise,i=e&&e.XMLHttpRequest||r.XMLHttpRequest,s=r;return function(){var e=Object.create(s,{fetch:{value:void 0,writable:!0}});return function(e){if(!e.fetch){var s={searchParams:"URLSearchParams"in e,iterable:"Symbol"in e&&"iterator"in Symbol,blob:"FileReader"in e&&"Blob"in e&&function(){try{return new Blob,!0}catch(e){return!1}}(),formData:"FormData"in e,arrayBuffer:"ArrayBuffer"in e};if(s.arrayBuffer)var r=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],a=function(e){return e&&DataView.prototype.isPrototypeOf(e)},o=ArrayBuffer.isView||function(e){return e&&r.indexOf(Object.prototype.toString.call(e))>-1};u.prototype.append=function(e,t){e=c(e),t=h(t);var i=this.map[e];this.map[e]=i?i+","+t:t},u.prototype.delete=function(e){delete this.map[c(e)]},u.prototype.get=function(e){return e=c(e),this.has(e)?this.map[e]:null},u.prototype.has=function(e){return this.map.hasOwnProperty(c(e))},u.prototype.set=function(e,t){this.map[c(e)]=h(t)},u.prototype.forEach=function(e,t){for(var i in this.map)this.map.hasOwnProperty(i)&&e.call(t,this.map[i],i,this)},u.prototype.keys=function(){var e=[];return this.forEach(function(t,i){e.push(i)}),l(e)},u.prototype.values=function(){var e=[];return this.forEach(function(t){e.push(t)}),l(e)},u.prototype.entries=function(){var e=[];return this.forEach(function(t,i){e.push([i,t])}),l(e)},s.iterable&&(u.prototype[Symbol.iterator]=u.prototype.entries);var n=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];w.prototype.clone=function(){return new w(this,{body:this._bodyInit})},b.call(w.prototype),b.call(k.prototype),k.prototype.clone=function(){return new k(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new u(this.headers),url:this.url})},k.error=function(){var e=new k(null,{status:0,statusText:""});return e.type="error",e};var d=[301,302,303,307,308];k.redirect=function(e,t){if(-1===d.indexOf(t))throw new RangeError("Invalid status code");return new k(null,{status:t,headers:{location:e}})},e.Headers=u,e.Request=w,e.Response=k,e.fetch=function(e,r){return new t(function(t,a){var o=new w(e,r),n=new i;n.onload=function(){var e,i,s={status:n.status,statusText:n.statusText,headers:(e=n.getAllResponseHeaders()||"",i=new u,e.split(/\r?\n/).forEach(function(e){var t=e.split(":"),s=t.shift().trim();if(s){var r=t.join(":").trim();i.append(s,r)}}),i)};s.url="responseURL"in n?n.responseURL:s.headers.get("X-Request-URL");var r="response"in n?n.response:n.responseText;t(new k(r,s))},n.onerror=function(){a(new TypeError("Network request failed"))},n.ontimeout=function(){a(new TypeError("Network request failed"))},n.open(o.method,o.url,!0),"include"===o.credentials&&(n.withCredentials=!0),"responseType"in n&&s.blob&&(n.responseType="blob"),o.headers.forEach(function(e,t){n.setRequestHeader(t,e)}),n.send(void 0===o._bodyInit?null:o._bodyInit)})},e.fetch.polyfill=!0}function c(e){if("string"!=typeof e&&(e=String(e)),/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e))throw new TypeError("Invalid character in header field name");return e.toLowerCase()}function h(e){return"string"!=typeof e&&(e=String(e)),e}function l(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return s.iterable&&(t[Symbol.iterator]=function(){return t}),t}function u(e){this.map={},e instanceof u?e.forEach(function(e,t){this.append(t,e)},this):Array.isArray(e)?e.forEach(function(e){this.append(e[0],e[1])},this):e&&Object.getOwnPropertyNames(e).forEach(function(t){this.append(t,e[t])},this)}function p(e){if(e.bodyUsed)return t.reject(new TypeError("Already read"));e.bodyUsed=!0}function m(e){return new t(function(t,i){e.onload=function(){t(e.result)},e.onerror=function(){i(e.error)}})}function f(e){var t=new FileReader,i=m(t);return t.readAsArrayBuffer(e),i}function y(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function b(){return this.bodyUsed=!1,this._initBody=function(e){if(this._bodyInit=e,e)if("string"==typeof e)this._bodyText=e;else if(s.blob&&Blob.prototype.isPrototypeOf(e))this._bodyBlob=e;else if(s.formData&&FormData.prototype.isPrototypeOf(e))this._bodyFormData=e;else if(s.searchParams&&URLSearchParams.prototype.isPrototypeOf(e))this._bodyText=e.toString();else if(s.arrayBuffer&&s.blob&&a(e))this._bodyArrayBuffer=y(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer]);else{if(!s.arrayBuffer||!ArrayBuffer.prototype.isPrototypeOf(e)&&!o(e))throw new Error("unsupported BodyInit type");this._bodyArrayBuffer=y(e)}else this._bodyText="";this.headers.get("content-type")||("string"==typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):s.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},s.blob&&(this.blob=function(){var e=p(this);if(e)return e;if(this._bodyBlob)return t.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return t.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return t.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?p(this)||t.resolve(this._bodyArrayBuffer):this.blob().then(f)}),this.text=function(){var e,i,s,r=p(this);if(r)return r;if(this._bodyBlob)return e=this._bodyBlob,i=new FileReader,s=m(i),i.readAsText(e),s;if(this._bodyArrayBuffer)return t.resolve(function(e){for(var t=new Uint8Array(e),i=new Array(t.length),s=0;s<t.length;s++)i[s]=String.fromCharCode(t[s]);return i.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return t.resolve(this._bodyText)},s.formData&&(this.formData=function(){return this.text().then(v)}),this.json=function(){return this.text().then(JSON.parse)},this}function w(e,t){var i,s,r=(t=t||{}).body;if(e instanceof w){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new u(e.headers)),this.method=e.method,this.mode=e.mode,r||null==e._bodyInit||(r=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"omit",!t.headers&&this.headers||(this.headers=new u(t.headers)),this.method=(i=t.method||this.method||"GET",s=i.toUpperCase(),n.indexOf(s)>-1?s:i),this.mode=t.mode||this.mode||null,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&r)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(r)}function v(e){var t=new FormData;return e.trim().split("&").forEach(function(e){if(e){var i=e.split("="),s=i.shift().replace(/\+/g," "),r=i.join("=").replace(/\+/g," ");t.append(decodeURIComponent(s),decodeURIComponent(r))}}),t}function k(e,t){t||(t={}),this.type="default",this.status="status"in t?t.status:200,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in t?t.statusText:"OK",this.headers=new u(t.headers),this.url=t.url||"",this._initBody(e)}}(void 0!==e?e:this),{fetch:e.fetch,Headers:e.Headers,Request:e.Request,Response:e.Response}}()}void 0===(s=function(){return a}.call(t,i,t,e))||(e.exports=s)}("undefined"==typeof self?this:self)},851:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,NotSupported:a}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"_1broker",name:"1Broker",countries:["US"],rateLimit:1500,version:"v2",has:{publicAPI:!1,CORS:!0,fetchTrades:!1,fetchOHLCV:!0},timeframes:{"1m":"60","15m":"900","1h":"3600","1d":"86400"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766021-420bd9fc-5ecb-11e7-8ed6-56d0081efed2.jpg",api:"https://1broker.com/api",www:"https://1broker.com",doc:"https://1broker.com/?c=en/content/api-documentation"},requiredCredentials:{apiKey:!0,secret:!1},api:{private:{get:["market/bars","market/categories","market/details","market/list","market/quotes","market/ticks","order/cancel","order/create","order/open","position/close","position/close_cancel","position/edit","position/history","position/open","position/shared/get","social/profile_statistics","social/profile_trades","user/bitcoin_deposit_address","user/details","user/overview","user/quota_status","user/transaction_log"]}}})}async fetchCategories(){let e=(await this.privateGetMarketCategories()).response,t=[];for(let i=0;i<e.length;i++)e[i]&&t.push(e[i]);return t}async fetchMarkets(){let e=this,t=await this.fetchCategories(),i=[];for(let s=0;s<t.length;s++){let r=t[s],a=await e.privateGetMarketList({category:r.toLowerCase()});for(let t=0;t<a.response.length;t++){let s=a.response[t],o=s.symbol,n=void 0,d=void 0,c=void 0;if("FOREX"===r||"CRYPTO"===r){let e=(n=s.name).split("/");d=e[0],c=e[1]}else n=(d=o)+"/"+(c="USD");d=e.commonCurrencyCode(d),c=e.commonCurrencyCode(c),i.push({id:o,symbol:n,base:d,quote:c,info:s})}}return i}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privateGetUserOverview()).response,i={info:t},s=Object.keys(this.currencies);for(let a=0;a<s.length;a++){i[s[a]]=this.account()}let r=this.safeFloat(t,"balance");return i.BTC.free=r,i.BTC.total=r,this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=(await this.privateGetMarketQuotes(this.extend({symbols:this.marketId(e)},i))).response[0],r=this.parse8601(s.updated),a=[this.safeFloat(s,"bid"),void 0],o=[this.safeFloat(s,"ask"),void 0];return{timestamp:r,datetime:this.iso8601(r),bids:[a],asks:[o],nonce:void 0}}async fetchTrades(e){throw new a(this.id+" fetchTrades () method not implemented yet")}async fetchTicker(e,t={}){await this.loadMarkets();let i=(await this.privateGetMarketBars(this.extend({symbol:this.marketId(e),resolution:60,limit:1},t))).response[0],s=this.parse8601(i.date),r=this.safeFloat(i,"o"),a=this.safeFloat(i,"c"),o=a-r;return{symbol:e,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(i,"h"),low:this.safeFloat(i,"l"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:r,close:a,last:a,previousClose:void 0,change:o,percentage:o/r*100,average:void 0,baseVolume:void 0,quoteVolume:void 0,info:i}}parseOHLCV(e,t,i="1m",s,r){return[this.parse8601(e.date),parseFloat(e.o),parseFloat(e.h),parseFloat(e.l),parseFloat(e.c),void 0]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),o={symbol:a.id,resolution:this.timeframes[t]};void 0!==i&&(o.date_start=this.iso8601(i)),void 0!==s&&(o.limit=s);let n=await this.privateGetMarketBars(this.extend(o,r));return this.parseOHLCVs(n.response,a,t,i,s)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o={symbol:this.marketId(e),margin:s,direction:"sell"===i?"short":"long",leverage:1,type:i};"limit"===t?o.price=r:o.type+="_market";let n=await this.privateGetOrderCreate(this.extend(o,a));return{info:n,id:n.response.order_id}}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privatePostOrderCancel({order_id:e})}sign(e,t="public",i="GET",s={},r,a){this.checkRequiredCredentials();let o=this.urls.api+"/"+this.version+"/"+e+".php",n=this.extend({token:this.apiKey},s);return{url:o+="?"+this.urlencode(n),method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("warning"in n&&n.warning)throw new r(this.id+" "+this.json(n));if("error"in n&&n.error)throw new r(this.id+" "+this.json(n));return n}}},852:function(e,t,i){"use strict";const s=i(793);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"allcoin",name:"Allcoin",countries:["CA"],has:{CORS:!1},extension:"",urls:{logo:"https://user-images.githubusercontent.com/1294454/31561809-c316b37c-b061-11e7-8d5a-b547b4d730eb.jpg",api:{web:"https://www.allcoin.com",public:"https://api.allcoin.com/api",private:"https://api.allcoin.com/api"},www:"https://www.allcoin.com",doc:"https://www.allcoin.com/About/APIReference"},api:{web:{get:["Home/MarketOverViewDetail/"]},public:{get:["depth","kline","ticker","trades"]},private:{post:["batch_trade","cancel_order","order_history","order_info","orders_info","repayment","trade","trade_history","userinfo"]}}})}async fetchMarkets(){let e=[],t=(await this.webGetHomeMarketOverViewDetail()).marketCoins;for(let i=0;i<t.length;i++){let s=t[i].Markets;for(let t=0;t<s.length;t++){let i=s[t].Market,r=i.Primary,a=i.Secondary,o=r.toLowerCase(),n=a.toLowerCase(),d=o+"_"+n,c=r+"/"+a,h=i.TradeEnabled&&i.BuyEnabled&&i.SellEnabled;e.push({id:d,symbol:c,base:r,quote:a,baseId:o,quoteId:n,active:h,type:"spot",spot:!0,future:!1,maker:i.AskFeeRate,taker:i.AskFeeRate,precision:{amount:i.PrimaryDigits,price:i.SecondaryDigits},limits:{amount:{min:i.MinTradeAmount,max:i.MaxTradeAmount},price:{min:i.MinOrderPrice,max:i.MaxOrderPrice},cost:{min:void 0,max:void 0}},info:i})}}return e}parseOrderStatus(e){return-1===e?"canceled":0===e?"open":1===e?"open":2===e?"closed":10===e?"canceled":e}getCreateDateField(){return"create_data"}getOrdersField(){return"order"}}},853:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"anxpro",name:"ANXPro",countries:["JP","SG","HK","NZ"],version:"2",rateLimit:1500,has:{CORS:!1,fetchOHLCV:!1,fetchTrades:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27765983-fd8595da-5ec9-11e7-82e3-adb3ab8c2612.jpg",api:"https://anxpro.com/api",www:"https://anxpro.com",doc:["http://docs.anxv2.apiary.io","https://anxpro.com/pages/api"]},api:{public:{get:["{currency_pair}/money/ticker","{currency_pair}/money/depth/full","{currency_pair}/money/trade/fetch"]},private:{post:["{currency_pair}/money/order/add","{currency_pair}/money/order/cancel","{currency_pair}/money/order/quote","{currency_pair}/money/order/result","{currency_pair}/money/orders","money/{currency}/address","money/{currency}/send_simple","money/info","money/trade/list","money/wallet/history"]}},markets:{"BTC/USD":{id:"BTCUSD",symbol:"BTC/USD",base:"BTC",quote:"USD",multiplier:1e5},"BTC/HKD":{id:"BTCHKD",symbol:"BTC/HKD",base:"BTC",quote:"HKD",multiplier:1e5},"BTC/EUR":{id:"BTCEUR",symbol:"BTC/EUR",base:"BTC",quote:"EUR",multiplier:1e5},"BTC/CAD":{id:"BTCCAD",symbol:"BTC/CAD",base:"BTC",quote:"CAD",multiplier:1e5},"BTC/AUD":{id:"BTCAUD",symbol:"BTC/AUD",base:"BTC",quote:"AUD",multiplier:1e5},"BTC/SGD":{id:"BTCSGD",symbol:"BTC/SGD",base:"BTC",quote:"SGD",multiplier:1e5},"BTC/JPY":{id:"BTCJPY",symbol:"BTC/JPY",base:"BTC",quote:"JPY",multiplier:1e5},"BTC/GBP":{id:"BTCGBP",symbol:"BTC/GBP",base:"BTC",quote:"GBP",multiplier:1e5},"BTC/NZD":{id:"BTCNZD",symbol:"BTC/NZD",base:"BTC",quote:"NZD",multiplier:1e5},"LTC/BTC":{id:"LTCBTC",symbol:"LTC/BTC",base:"LTC",quote:"BTC",multiplier:1e5},"STR/BTC":{id:"STRBTC",symbol:"STR/BTC",base:"STR",quote:"BTC",multiplier:1e8},"XRP/BTC":{id:"XRPBTC",symbol:"XRP/BTC",base:"XRP",quote:"BTC",multiplier:1e8},"DOGE/BTC":{id:"DOGEBTC",symbol:"DOGE/BTC",base:"DOGE",quote:"BTC",multiplier:1e8}},fees:{trading:{maker:.003,taker:.006}}})}async fetchBalance(e={}){let t=(await this.privatePostMoneyInfo()).data,i=Object.keys(t.Wallets),s={info:t};for(let r=0;r<i.length;r++){let e=i[r],a=this.account();if(e in t.Wallets){let i=t.Wallets[e];a.free=parseFloat(i.Available_Balance.value),a.total=parseFloat(i.Balance.value),a.used=a.total-a.free}s[e]=a}return this.parseBalance(s)}async fetchOrderBook(e,t,i={}){let s=(await this.publicGetCurrencyPairMoneyDepthFull(this.extend({currency_pair:this.marketId(e)},i))).data,r=parseInt(s.dataUpdateTime),a=parseInt(r/1e3);return this.parseOrderBook(s,a,"bids","asks","price","amount")}async fetchTicker(e,t={}){let i=(await this.publicGetCurrencyPairMoneyTicker(this.extend({currency_pair:this.marketId(e)},t))).data,s=parseInt(i.dataUpdateTime),r=parseInt(s/1e3),a=this.safeFloat(i.buy,"value"),o=this.safeFloat(i.sell,"value"),n=parseFloat(i.vol.value),d=parseFloat(i.last.value);return{symbol:e,timestamp:r,datetime:this.iso8601(r),high:parseFloat(i.high.value),low:parseFloat(i.low.value),bid:a,bidVolume:void 0,ask:o,askVolume:void 0,vwap:void 0,open:void 0,close:d,last:d,previousClose:void 0,change:void 0,percentage:void 0,average:parseFloat(i.avg.value),baseVolume:n,quoteVolume:void 0,info:i}}async fetchTrades(e,t,i,s={}){throw new r(this.id+" switched off the trades endpoint, see their docs at http://docs.anxv2.apiary.io/reference/market-data/currencypairmoneytradefetch-disabled")}async createOrder(e,t,i,s,r,a={}){let o=this.market(e),n={currency_pair:o.id,amount_int:parseInt(1e8*s)};"limit"===t&&(n.price_int=parseInt(r*o.multiplier)),n.type="buy"===i?"bid":"ask";let d=await this.privatePostCurrencyPairMoneyOrderAdd(this.extend(n,a));return{info:d,id:d.data}}async cancelOrder(e,t,i={}){return await this.privatePostCurrencyPairMoneyOrderCancel({oid:e})}getAmountMultiplier(e){return"BTC"===e?1e8:"LTC"===e?1e8:"STR"===e?1e8:"XRP"===e?1e8:"DOGE"===e?1e8:100}async withdraw(e,t,i,s,r={}){this.checkAddress(i),await this.loadMarkets();let a=this.getAmountMultiplier(e),o=await this.privatePostMoneyCurrencySendSimple(this.extend({currency:e,amount_int:parseInt(t*a),address:i},r));return{info:o,id:o.data.transactionId}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o=this.implodeParams(e,s),n=this.omit(s,this.extractParams(e)),d=this.urls.api+"/"+this.version+"/"+o;if("public"===t)Object.keys(n).length&&(d+="?"+this.urlencode(n));else{this.checkRequiredCredentials();let e=this.nonce();a=this.urlencode(this.extend({nonce:e},n));let t=this.base64ToBinary(this.secret),i=o+"\0"+a,s=this.hmac(this.encode(i),t,"sha512","base64");r={"Content-Type":"application/x-www-form-urlencoded","Rest-Key":this.apiKey,"Rest-Sign":this.decode(s)}}return{url:d,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if(void 0!==n&&"result"in n&&"success"===n.result)return n;throw new r(this.id+" "+this.json(n))}}},854:function(e,t,i){"use strict";const s=i(810);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"anybits",name:"Anybits",countries:["IE"],has:{fetchCurrencies:!0,fetchTickers:!0,fetchOpenOrders:!0,fetchDepositAddress:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/41388454-ae227544-6f94-11e8-82a4-127d51d34903.jpg",api:"https://anybits.com/api",www:"https://anybits.com",doc:"https://anybits.com/help/api",fees:"https://anybits.com/help/fees"},api:{public:{get:["assets/currencies","assets/pairs","ticker","orderbook","trades"]},private:{post:["balances","order/cancel","order/new","order/status","orders","orders/history","deposit/address","withdraw","withdrawal/status","transactions/history","vouchers","vouchers/create","vouchers/redeem"]}},fees:{trading:{maker:.0015,taker:.0025}}})}}},855:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,AuthenticationError:a,DDoSProtection:o,ExchangeNotAvailable:n,InvalidOrder:d,OrderNotFound:c,PermissionDenied:h,InsufficientFunds:l}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bibox",name:"Bibox",countries:["CN","US","KR"],version:"v1",has:{CORS:!1,publicAPI:!1,fetchBalance:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchFundingFees:!0,fetchTickers:!0,fetchOrder:!0,fetchOpenOrders:!0,fetchClosedOrders:!0,fetchMyTrades:!0,fetchOHLCV:!0,createMarketOrder:!1,withdraw:!0},timeframes:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","12h":"12hour","1d":"day","1w":"week"},urls:{logo:"https://user-images.githubusercontent.com/1294454/34902611-2be8bf1a-f830-11e7-91a2-11b2f292e750.jpg",api:"https://api.bibox.com",www:"https://www.bibox.com",doc:["https://github.com/Biboxcom/api_reference/wiki/home_en","https://github.com/Biboxcom/api_reference/wiki/api_reference"],fees:"https://bibox.zendesk.com/hc/en-us/articles/115004417013-Fee-Structure-on-Bibox"},api:{public:{post:["mdata"],get:["mdata"]},private:{post:["user","orderpending","transfer"]}},fees:{trading:{tierBased:!1,percentage:!0,taker:.001,maker:0},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{}}},exceptions:{2021:l,2015:a,2027:l,2033:c,2067:d,2068:d,3012:a,3024:h,3025:a,4000:n,4003:o},commonCurrencies:{KEY:"Bihu"}})}async fetchMarkets(e={}){let t=(await this.publicGetMdata(this.extend({cmd:"marketAll"},e))).result,i=[];for(let s=0;s<t.length;s++){let e=t[s],r=e.coin_symbol,a=e.currency_symbol,o=this.commonCurrencyCode(r),n=this.commonCurrencyCode(a),d=o+"/"+n,c=o+"_"+n,h={amount:4,price:8};i.push({id:c,symbol:d,base:o,quote:n,baseId:o,quoteId:n,active:!0,info:e,lot:Math.pow(10,-h.amount),precision:h,limits:{amount:{min:Math.pow(10,-h.amount),max:void 0},price:{min:void 0,max:void 0}}})}return i}parseTicker(e,t){let i=this.safeInteger(e,"timestamp"),s=void 0;if(void 0!==t)s=t.symbol;else{let t=e.coin_symbol,i=e.currency_symbol;s=this.commonCurrencyCode(t)+"/"+this.commonCurrencyCode(i)}let r=this.safeFloat(e,"last"),a=this.safeFloat(e,"change"),o=void 0;o="vol"in e?this.safeFloat(e,"vol"):this.safeFloat(e,"vol24H");let n=void 0;void 0!==r&&void 0!==a&&(n=r-a);let d=void 0;return void 0!==i&&(d=this.iso8601(i)),{symbol:s,timestamp:i,datetime:d,high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:n,close:r,last:r,previousClose:void 0,change:a,percentage:this.safeString(e,"percent"),average:void 0,baseVolume:o,quoteVolume:this.safeFloat(e,"amount"),info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetMdata(this.extend({cmd:"ticker",pair:i.id},t));return this.parseTicker(s.result,i)}parseTickers(e,t){let i=[];for(let s=0;s<e.length;s++)i.push(this.parseTicker(e[s]));return this.filterByArray(i,"symbol",t)}async fetchTickers(e,t={}){let i=await this.publicGetMdata(this.extend({cmd:"marketAll"},t));return this.parseTickers(i.result,e)}parseTrade(e,t){let i=this.safeInteger(e,"time");i=this.safeInteger(e,"createdAt",i);let s=this.safeInteger(e,"side");s=1===(s=this.safeInteger(e,"order_side",s))?"buy":"sell";let r=void 0;if(void 0===t){let i=this.safeString(e,"pair");if(void 0===i){let t=this.safeString(e,"coin_symbol"),s=this.safeString(e,"currency_symbol");void 0!==t&&void 0!==s&&(i=t+"_"+s)}i in this.markets_by_id&&(t=this.markets_by_id[i])}void 0!==t&&(r=t.symbol);let a=void 0,o=this.safeFloat(e,"fee"),n=this.safeString(e,"fee_symbol");void 0!==n&&(n=n in this.currencies_by_id?this.currencies_by_id[n].code:this.commonCurrencyCode(n));let d=this.safeFloat(e,"price"),c=this.safeFloat(e,"amount"),h=d*c;return void 0!==o&&(a={cost:o,currency:n,rate:void 0}),{info:e,id:this.safeString(e,"id"),order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:r,type:"limit",takerOrMaker:void 0,side:s,price:d,amount:c,cost:h,fee:a}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=i||200,o=await this.publicGetMdata(this.extend({cmd:"deals",pair:r.id,size:a},s));return this.parseTrades(o.result,r,t,i)}async fetchOrderBook(e,t=200,i={}){await this.loadMarkets();let s={cmd:"depth",pair:this.market(e).id};s.size=t;let r=await this.publicGetMdata(this.extend(s,i));return this.parseOrderBook(r.result,this.safeFloat(r.result,"update_time"),"bids","asks","price","volume")}parseOHLCV(e,t,i="1m",s,r){return[e.time,e.open,e.high,e.low,e.close,e.vol]}async fetchOHLCV(e,t="1m",i,s=1e3,r={}){await this.loadMarkets();let a=this.market(e),o=await this.publicGetMdata(this.extend({cmd:"kline",pair:a.id,period:this.timeframes[t],size:s},r));return this.parseOHLCVs(o.result,a,t,i,s)}async fetchCurrencies(e={}){let t=(await this.privatePostTransfer({cmd:"transfer/coinList",body:{}})).result,i={};for(let s=0;s<t.length;s++){let e=t[s],r=e.symbol,a=this.commonCurrencyCode(r),o=8,n=e.enable_deposit,d=e.enable_withdraw,c=!(!n||!d);i[a]={id:r,code:a,info:e,name:e.name,active:c,fee:void 0,precision:o,limits:{amount:{min:Math.pow(10,-o),max:Math.pow(10,o)},price:{min:Math.pow(10,-o),max:Math.pow(10,o)},cost:{min:void 0,max:void 0},withdraw:{min:void 0,max:Math.pow(10,o)}}}}return i}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privatePostTransfer({cmd:"transfer/assets",body:this.extend({select:1},e)})).result,i={info:t},s=void 0;s="assets_list"in t?this.indexBy(t.assets_list,"coin_symbol"):t;let r=Object.keys(s);for(let a=0;a<r.length;a++){let e=r[a],t=e.toUpperCase();t.indexOf("TOTAL_")>=0&&(t=t.slice(6)),t in this.currencies_by_id&&(t=this.currencies_by_id[t].code);let o=this.account(),n=s[e];"string"==typeof n?(n=parseFloat(n),o.free=n,o.used=0,o.total=n):(o.free=parseFloat(n.balance),o.used=parseFloat(n.freeze),o.total=this.sum(o.free,o.used)),i[t]=o}return this.parseBalance(i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n="limit"===t?2:1,d="buy"===i?1:2,c=await this.privatePostOrderpending({cmd:"orderpending/trade",body:this.extend({pair:o.id,account_type:0,order_type:n,order_side:d,pay_bix:0,amount:s,price:r},a)});return{info:c,id:this.safeString(c,"result")}}async cancelOrder(e,t,i={}){return await this.privatePostOrderpending({cmd:"orderpending/cancelTrade",body:this.extend({orders_id:e},i)})}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostOrderpending({cmd:"orderpending/order",body:this.extend({id:e},i)}),r=this.safeValue(s,"result");if(this.isEmpty(r))throw new c(this.id+" order "+e+" not found");return this.parseOrder(r)}parseOrder(e,t){let i=void 0;if(void 0===t){let i=void 0,s=this.safeString(e,"coin_symbol"),r=this.safeString(e,"currency_symbol");void 0!==s&&void 0!==r&&(i=s+"_"+r),i in this.markets_by_id&&(t=this.markets_by_id[i])}void 0!==t&&(i=t.symbol);let s=1===e.order_type?"market":"limit",r=e.createdAt,a=this.safeFloat(e,"price");a=this.safeFloat(e,"deal_price",a);let o=this.safeFloat(e,"deal_amount"),n=this.safeFloat(e,"amount"),d=this.safeFloat(e,"money");d=this.safeFloat(e,"deal_money",d);let c=void 0;void 0!==o&&(void 0!==n&&(c=n-o),void 0===d&&(d=a*o));let h=1===e.order_side?"buy":"sell",l=this.safeString(e,"status");return void 0!==l&&(l=this.parseOrderStatus(l)),{info:e,id:this.safeString(e,"id"),timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,symbol:i,type:s,side:h,price:a,amount:n,cost:d||parseFloat(a)*o,filled:o,remaining:c,status:l,fee:this.safeFloat(e,"fee")}}parseOrderStatus(e){return this.safeString({1:"open",2:"open",3:"closed",4:"canceled",5:"canceled",6:"canceled"},e,e.toLowerCase())}async fetchOpenOrders(e,t,i,s={}){let r=void 0,a=void 0;void 0!==e&&(await this.loadMarkets(),a=(r=this.market(e)).id);let o=i||200,n=await this.privatePostOrderpending({cmd:"orderpending/orderPendingList",body:this.extend({pair:a,account_type:0,page:1,size:o},s)}),d=this.safeValue(n.result,"items",[]);return this.parseOrders(d,r,t,i)}async fetchClosedOrders(e,t,i=200,s={}){if(void 0===e)throw new r(this.id+" fetchClosedOrders requires a symbol argument");await this.loadMarkets();let a=this.market(e),o=await this.privatePostOrderpending({cmd:"orderpending/pendingHistoryList",body:this.extend({pair:a.id,account_type:0,page:1,size:i},s)}),n=this.safeValue(o.result,"items",[]);return this.parseOrders(n,a,t,i)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new r(this.id+" fetchMyTrades requires a symbol argument");await this.loadMarkets();let a=this.market(e),o=i||200,n=await this.privatePostOrderpending({cmd:"orderpending/orderHistoryList",body:this.extend({pair:a.id,account_type:0,page:1,size:o},s)}),d=this.safeValue(n.result,"items",[]);return this.parseTrades(d,a,t,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privatePostTransfer({cmd:"transfer/transferIn",body:this.extend({coin_symbol:i.id},t)});return{info:s,address:this.safeString(s,"result")}}async withdraw(e,t,i,s,a={}){this.checkAddress(i),await this.loadMarkets();let o=this.currency(e);if(void 0===this.password&&!("trade_pwd"in a))throw new r(this.id+" withdraw() requires this.password set on the exchange instance or a trade_pwd parameter");if(!("totp_code"in a))throw new r(this.id+" withdraw() requires a totp_code parameter for 2FA authentication");let n={trade_pwd:this.password,coin_symbol:o.id,amount:t,addr:i};return void 0!==s&&(n.address_remark=s),{info:await this.privatePostTransfer({cmd:"transfer/transferOut",body:this.extend(n,a)}),id:void 0}}async fetchFundingFees(e,t={}){await this.loadMarkets();let i={},s={};void 0===e&&(e=Object.keys(this.currencies));for(let r=0;r<e.length;r++){let a=e[r],o=this.currency(a),n=await this.privatePostTransfer({cmd:"transfer/transferOutInfo",body:this.extend({coin_symbol:o.id},t)});s[a]=n,i[a]=n.result.withdraw_fee}return{info:s,withdraw:i,deposit:{}}}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.version+"/"+e,n=this.json([s]);return"public"===t?"GET"!==i?a={cmds:n}:Object.keys(s).length&&(o+="?"+this.urlencode(s)):(this.checkRequiredCredentials(),a={cmds:n,apikey:this.apiKey,sign:this.hmac(this.encode(n),this.encode(this.secret),"md5")}),void 0!==a&&(a=this.json(a,{convertArraysToObjects:!0})),{url:o,method:i,body:a,headers:{"Content-Type":"application/json"}}}handleErrors(e,t,i,s,a,o){if(o.length>0&&"{"===o[0]){let e=JSON.parse(o);if("error"in e){if("code"in e.error){let t=this.safeString(e.error,"code"),i=this.id+" "+o;const s=this.exceptions;throw t in s?new s[t](i):new r(i)}throw new r(this.id+': "error" in response: '+o)}if(!("result"in e))throw new r(this.id+" "+o)}}async request(e,t="public",i="GET",s={},r,a){let o=await this.fetch2(e,t,i,s,r,a);return"GET"===i?o:o.result[0]}}},856:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,ExchangeNotAvailable:a,InsufficientFunds:o,OrderNotFound:n,InvalidOrder:d,DDoSProtection:c,InvalidNonce:h,AuthenticationError:l}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"binance",name:"Binance",countries:["JP"],rateLimit:500,has:{fetchDepositAddress:!0,CORS:!1,fetchBidsAsks:!0,fetchTickers:!0,fetchOHLCV:!0,fetchMyTrades:!0,fetchOrder:!0,fetchOrders:!0,fetchOpenOrders:!0,fetchClosedOrders:!0,withdraw:!0,fetchFundingFees:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","8h":"8h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/29604020-d5483cdc-87ee-11e7-94c7-d1a8d9169293.jpg",api:{web:"https://www.binance.com",wapi:"https://api.binance.com/wapi/v3",public:"https://api.binance.com/api/v1",private:"https://api.binance.com/api/v3",v3:"https://api.binance.com/api/v3",v1:"https://api.binance.com/api/v1"},www:"https://www.binance.com",referral:"https://www.binance.com/?ref=10205187",doc:"https://github.com/binance-exchange/binance-official-api-docs/blob/master/rest-api.md",fees:["https://binance.zendesk.com/hc/en-us/articles/115000429332","https://support.binance.com/hc/en-us/articles/115000583311"]},api:{web:{get:["exchange/public/product","assetWithdraw/getAllAsset.html"]},wapi:{post:["withdraw"],get:["getAllAsset","depositHistory","withdrawHistory","depositAddress","accountStatus","systemStatus","withdrawFee"]},v3:{get:["ticker/price","ticker/bookTicker"]},public:{get:["exchangeInfo","ping","time","depth","aggTrades","klines","ticker/24hr","ticker/allPrices","ticker/allBookTickers","ticker/price","ticker/bookTicker","exchangeInfo"],put:["userDataStream"],post:["userDataStream"],delete:["userDataStream"]},private:{get:["order","openOrders","allOrders","account","myTrades"],post:["order","order/test"],delete:["order"]}},fees:{trading:{tierBased:!1,percentage:!0,taker:.001,maker:.001},funding:{tierBased:!1,percentage:!1,withdraw:{ADA:1,ADX:4.7,AION:1.9,AMB:11.4,APPC:6.5,ARK:.1,ARN:3.1,AST:10,BAT:18,BCD:1,BCH:.001,BCPT:10.2,BCX:1,BNB:.7,BNT:1.5,BQX:1.6,BRD:6.4,BTC:.001,BTG:.001,BTM:5,BTS:1,CDT:67,CMT:37,CND:47,CTR:5.4,DASH:.002,DGD:.06,DLT:11.7,DNT:51,EDO:2.5,ELF:6.5,ENG:2.1,ENJ:42,EOS:1,ETC:.01,ETF:1,ETH:.01,EVX:2.5,FUEL:45,FUN:85,GAS:0,GTO:20,GVT:.53,GXS:.3,HCC:5e-4,HSR:1e-4,ICN:3.5,ICX:1.3,INS:1.5,IOTA:.5,KMD:.002,KNC:2.6,LEND:54,LINK:12.8,LLT:54,LRC:9.1,LSK:.1,LTC:.01,LUN:.29,MANA:74,MCO:.86,MDA:4.7,MOD:2,MTH:34,MTL:1.9,NAV:.2,NEBL:.01,NEO:0,NULS:2.1,OAX:8.3,OMG:.57,OST:17,POE:88,POWR:8.6,PPT:.25,QSP:21,QTUM:.01,RCN:35,RDN:2.2,REQ:18.1,RLC:4.1,SALT:1.3,SBTC:1,SNGLS:42,SNM:29,SNT:32,STORJ:5.9,STRAT:.1,SUB:7.4,TNB:82,TNT:47,TRIG:6.7,TRX:129,USDT:23,VEN:1.8,VIB:28,VIBE:7.2,WABI:3.5,WAVES:.002,WINGS:9.3,WTC:.5,XLM:.01,XMR:.04,XRP:.25,XVG:.1,XZC:.02,YOYOW:39,ZEC:.005,ZRX:5.7},deposit:{}}},commonCurrencies:{YOYO:"YOYOW",BCC:"BCH"},options:{defaultTimeInForce:"GTC",defaultLimitOrderType:"limit",hasAlreadyAuthenticatedSuccessfully:!1,warnOnFetchOpenOrdersWithoutSymbol:!0,recvWindow:5e3,timeDifference:0,adjustForTimeDifference:!1,parseOrderToPrecision:!1,newOrderRespType:"RESULT"},exceptions:{"-1000":a,"-1013":d,"-1021":h,"-1022":l,"-1100":d,"-2010":r,"-2011":n,"-2013":n,"-2014":l,"-2015":l}})}nonce(){return this.milliseconds()-this.options.timeDifference}async loadTimeDifference(){const e=await this.publicGetTime(),t=this.milliseconds();return this.options.timeDifference=parseInt(t-e.serverTime),this.options.timeDifference}async fetchMarkets(){let e=await this.publicGetExchangeInfo();this.options.adjustForTimeDifference&&await this.loadTimeDifference();let t=e.symbols,i=[];for(let s=0;s<t.length;s++){let e=t[s],r=e.symbol;if("123456"===r)continue;let a=e.baseAsset,o=e.quoteAsset,n=this.commonCurrencyCode(a),d=this.commonCurrencyCode(o),c=n+"/"+d,h=this.indexBy(e.filters,"filterType"),l={base:e.baseAssetPrecision,quote:e.quotePrecision,amount:e.baseAssetPrecision,price:e.quotePrecision},u="TRADING"===e.status,p=-1*Math.log10(l.amount),m={id:r,symbol:c,base:n,quote:d,baseId:a,quoteId:o,info:e,lot:p,active:u,precision:l,limits:{amount:{min:Math.pow(10,-l.amount),max:void 0},price:{min:Math.pow(10,-l.price),max:void 0},cost:{min:p,max:void 0}}};if("PRICE_FILTER"in h){let e=h.PRICE_FILTER;m.precision.price=this.precisionFromString(e.tickSize),m.limits.price={min:this.safeFloat(e,"minPrice"),max:this.safeFloat(e,"maxPrice")}}if("LOT_SIZE"in h){let e=h.LOT_SIZE;m.precision.amount=this.precisionFromString(e.stepSize),m.lot=this.safeFloat(e,"stepSize"),m.limits.amount={min:this.safeFloat(e,"minQty"),max:this.safeFloat(e,"maxQty")}}"MIN_NOTIONAL"in h&&(m.limits.cost.min=parseFloat(h.MIN_NOTIONAL.minNotional)),i.push(m)}return i}calculateFee(e,t,i,s,r,a="taker",o={}){let n=this.markets[e],d="quote",c=n[a],h=parseFloat(this.costToPrecision(e,s*c));return"sell"===i?h*=r:d="base",{type:a,currency:n[d],rate:c,cost:parseFloat(this.feeToPrecision(e,h))}}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetAccount(e),i={info:t},s=t.balances;for(let r=0;r<s.length;r++){let e=s[r],t=e.asset;t in this.currencies_by_id&&(t=this.currencies_by_id[t].code);let a={free:parseFloat(e.free),used:parseFloat(e.locked),total:0};a.total=this.sum(a.free,a.used),i[t]=a}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={symbol:this.market(e).id};void 0!==t&&(s.limit=t);let r=await this.publicGetDepth(this.extend(s,i)),a=this.parseOrderBook(r);return a.nonce=this.safeInteger(r,"lastUpdateId"),a}parseTicker(e,t){let i=this.safeInteger(e,"closeTime"),s=void 0===i?void 0:this.iso8601(i),r=this.findSymbol(this.safeString(e,"symbol"),t),a=this.safeFloat(e,"lastPrice");return{symbol:r,timestamp:i,datetime:s,high:this.safeFloat(e,"highPrice"),low:this.safeFloat(e,"lowPrice"),bid:this.safeFloat(e,"bidPrice"),bidVolume:this.safeFloat(e,"bidQty"),ask:this.safeFloat(e,"askPrice"),askVolume:this.safeFloat(e,"askQty"),vwap:this.safeFloat(e,"weightedAvgPrice"),open:this.safeFloat(e,"openPrice"),close:a,last:a,previousClose:this.safeFloat(e,"prevClosePrice"),change:this.safeFloat(e,"priceChange"),percentage:this.safeFloat(e,"priceChangePercent"),average:void 0,baseVolume:this.safeFloat(e,"volume"),quoteVolume:this.safeFloat(e,"quoteVolume"),info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTicker24hr(this.extend({symbol:i.id},t));return this.parseTicker(s,i)}parseTickers(e,t){let i=[];for(let s=0;s<e.length;s++)i.push(this.parseTicker(e[s]));return this.filterByArray(i,"symbol",t)}async fetchBidsAsks(e,t={}){await this.loadMarkets();let i=await this.publicGetTickerBookTicker(t);return this.parseTickers(i,e)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTicker24hr(t);return this.parseTickers(i,e)}parseOHLCV(e,t,i="1m",s,r){return[e[0],parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3]),parseFloat(e[4]),parseFloat(e[5])]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),o={symbol:a.id,interval:this.timeframes[t]};void 0!==i&&(o.startTime=i),void 0!==s&&(o.limit=s);let n=await this.publicGetKlines(this.extend(o,r));return this.parseOHLCVs(n,a,t,i,s)}parseTrade(e,t){let i="T"in e?"T":"time",s=this.safeInteger(e,i),r="p"in e?"p":"price",a=this.safeFloat(e,r),o="q"in e?"q":"qty",n=this.safeFloat(e,o),d="a"in e?"a":"id",c=this.safeString(e,d),h=void 0,l=void 0;"orderId"in e&&(l=this.safeString(e,"orderId")),"m"in e?h=e.m?"sell":"buy":"isBuyer"in e&&(h=e.isBuyer?"buy":"sell");let u=void 0;"commission"in e&&(u={cost:this.safeFloat(e,"commission"),currency:this.commonCurrencyCode(e.commissionAsset)});let p=void 0;return"isMaker"in e&&(p=e.isMaker?"maker":"taker"),{info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,id:c,order:l,type:void 0,takerOrMaker:p,side:h,price:a,cost:a*n,amount:n,fee:u}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==t&&(a.startTime=t,a.endTime=t+36e5),void 0!==i&&(a.limit=i);let o=await this.publicGetAggTrades(this.extend(a,s));return this.parseTrades(o,r,t,i)}parseOrderStatus(e){let t={NEW:"open",PARTIALLY_FILLED:"open",FILLED:"closed",CANCELED:"canceled"};return e in t?t[e]:e.toLowerCase()}parseOrder(e,t){let i=this.safeValue(e,"status");void 0!==i&&(i=this.parseOrderStatus(i));let s=this.findSymbol(this.safeString(e,"symbol"),t),r=void 0;"time"in e?r=e.time:"transactTime"in e&&(r=e.transactTime);let a=void 0;void 0!==r&&(a=this.iso8601(r));let o=this.safeFloat(e,"price"),n=this.safeFloat(e,"origQty"),d=this.safeFloat(e,"executedQty"),c=void 0,h=void 0;void 0!==d&&(void 0!==n&&(c=n-d,this.options.parseOrderToPrecision&&(c=parseFloat(this.amountToPrecision(s,c))),c=Math.max(c,0)),void 0!==o&&(h=o*d));let l=this.safeString(e,"orderId"),u=this.safeString(e,"type");void 0!==u&&(u=u.toLowerCase());let p=this.safeString(e,"side");void 0!==p&&(p=p.toLowerCase());let m=void 0,f=void 0;const y=this.safeValue(e,"fills");if(void 0!==y){if((f=this.parseTrades(y,t)).length>0){h=f[0].cost,m={cost:f[0].fee.cost,currency:f[0].fee.currency};for(let e=1;e<f.length;e++)h=this.sum(h,f[e].cost),m.cost=this.sum(m.cost,f[e].fee.cost);h&&d&&(o=h/d)}}return void 0!==h&&this.options.parseOrderToPrecision&&(h=parseFloat(this.costToPrecision(s,h))),{info:e,id:l,timestamp:r,datetime:a,lastTradeTimestamp:void 0,symbol:s,type:u,side:p,price:o,amount:n,cost:h,filled:d,remaining:c,status:i,fee:m,trades:f}}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n="privatePostOrder";this.safeValue(a,"test",!1)&&(n+="Test",a=this.omit(a,"test"));let c=t.toUpperCase(),h={symbol:o.id,quantity:this.amountToString(e,s),type:c,side:i.toUpperCase(),newOrderRespType:this.options.newOrderRespType},l=!1,u=!1,p=!1;if("LIMIT"===c?(u=!0,l=!0):"STOP_LOSS"===c||"TAKE_PROFIT"===c?p=!0:"STOP_LOSS_LIMIT"===c||"TAKE_PROFIT_LIMIT"===c?(p=!0,u=!0,l=!0):"LIMIT_MAKER"===c&&(u=!0),u){if(void 0===r)throw new d(this.id+" createOrder method requires a price argument for a "+t+" order");h.price=this.priceToPrecision(e,r)}if(l&&(h.timeInForce=this.options.defaultTimeInForce),p){let i=this.safeFloat(a,"stopPrice");if(void 0===i)throw new d(this.id+" createOrder method requires a stopPrice extra param for a "+t+" order");h.stopPrice=this.priceToPrecision(e,i)}let m=await this[n](this.extend(h,a));return this.parseOrder(m,o)}async fetchOrder(e,t,i={}){if(void 0===t)throw new r(this.id+" fetchOrder requires a symbol argument");await this.loadMarkets();let s=this.market(t),a=this.safeValue(i,"origClientOrderId"),o={symbol:s.id};void 0!==a?o.origClientOrderId=a:o.orderId=parseInt(e);let n=await this.privateGetOrder(this.extend(o,i));return this.parseOrder(n,s)}async fetchOrders(e,t,i,s={}){if(void 0===e)throw new r(this.id+" fetchOrders requires a symbol argument");await this.loadMarkets();let a=this.market(e),o={symbol:a.id};void 0!==i&&(o.limit=i);let n=await this.privateGetAllOrders(this.extend(o,s));return this.parseOrders(n,a,t,i)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let a=void 0,o={};if(void 0!==e)a=this.market(e),o.symbol=a.id;else if(this.options.warnOnFetchOpenOrdersWithoutSymbol){let e=this.symbols.length,t=parseInt(e/2);throw new r(this.id+" fetchOpenOrders WARNING: fetching open orders without specifying a symbol is rate-limited to one call per "+t.toString()+" seconds. Do not call this method frequently to avoid ban. Set "+this.id+'.options["warnOnFetchOpenOrdersWithoutSymbol"] = false to suppress this warning message.')}let n=await this.privateGetOpenOrders(this.extend(o,s));return this.parseOrders(n,a,t,i)}async fetchClosedOrders(e,t,i,s={}){let r=await this.fetchOrders(e,t,i,s);return this.filterBy(r,"status","closed")}async cancelOrder(e,t,i={}){if(void 0===t)throw new r(this.id+" cancelOrder requires a symbol argument");await this.loadMarkets();let s=this.market(t),a=await this.privateDeleteOrder(this.extend({symbol:s.id,orderId:parseInt(e)},i));return this.parseOrder(a)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new r(this.id+" fetchMyTrades requires a symbol argument");await this.loadMarkets();let a=this.market(e),o={symbol:a.id};void 0!==i&&(o.limit=i);let n=await this.privateGetMyTrades(this.extend(o,s));return this.parseTrades(n,a,t,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.wapiGetDepositAddress(this.extend({asset:i.id},t));if("success"in s&&s.success){let t=this.safeString(s,"address"),i=this.safeString(s,"addressTag");return{currency:e,address:this.checkAddress(t),tag:i,info:s}}}async fetchFundingFees(e,t={}){await this.loadMarkets();let i={},s={};void 0===e&&(e=Object.keys(this.currencies));for(let r=0;r<e.length;r++){let t=e[r],a=this.currency(t),o=await this.wapiGetWithdrawFee({asset:a.id});i[t]=this.safeFloat(o,"withdrawFee"),s[t]=o}return{withdraw:i,deposit:{},info:s}}async withdraw(e,t,i,s,r={}){this.checkAddress(i),await this.loadMarkets();let a=this.currency(e),o=i.slice(0,20),n={asset:a.id,address:i,amount:parseFloat(t),name:o};s&&(n.addressTag=s);let d=await this.wapiPostWithdraw(this.extend(n,r));return{info:d,id:this.safeString(d,"id")}}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t];if(o+="/"+e,"wapi"===t&&(o+=".html"),"userDataStream"===e)a=this.urlencode(s),r={"X-MBX-APIKEY":this.apiKey,"Content-Type":"application/x-www-form-urlencoded"};else if("private"===t||"wapi"===t){this.checkRequiredCredentials();let e=this.urlencode(this.extend({timestamp:this.nonce(),recvWindow:this.options.recvWindow},s));e+="&signature="+this.hmac(this.encode(e),this.encode(this.secret)),r={"X-MBX-APIKEY":this.apiKey},"GET"===i||"DELETE"===i||"wapi"===t?o+="?"+e:(a=e,r["Content-Type"]="application/x-www-form-urlencoded")}else Object.keys(s).length&&(o+="?"+this.urlencode(s));return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,n,h){if(418===e||429===e)throw new c(this.id+" "+e.toString()+" "+t+" "+h);if(e>=400){if(h.indexOf("Price * QTY is zero or less")>=0)throw new d(this.id+" order cost = amount * price is zero or less "+h);if(h.indexOf("LOT_SIZE")>=0)throw new d(this.id+" order amount should be evenly divisible by lot size, use this.amountToLots (symbol, amount) "+h);if(h.indexOf("PRICE_FILTER")>=0)throw new d(this.id+" order price exceeds allowed price precision or invalid, use this.priceToPrecision (symbol, amount) "+h)}if(h.length>0&&"{"===h[0]){let e=JSON.parse(h),t=this.safeValue(e,"success",!0);if(!t&&"msg"in e)try{e=JSON.parse(e.msg)}catch(t){e={}}let i=this.safeString(e,"code");if(void 0!==i){const t=this.exceptions;if(i in t){if("-2015"===i&&this.options.hasAlreadyAuthenticatedSuccessfully)throw new c(this.id+" temporary banned: "+h);const s=this.safeString(e,"msg");if("Order would trigger immediately."===s)throw new d(this.id+" "+h);if("Account has insufficient balance for requested action."===s)throw new o(this.id+" "+h);if("Rest API trading is not enabled."===s)throw new a(this.id+" "+h);throw new t[i](this.id+" "+h)}throw new r(this.id+": unknown error code: "+h+" "+i)}if(!t)throw new r(this.id+": success value false: "+h)}}async request(e,t="public",i="GET",s={},r,a){let o=await this.fetch2(e,t,i,s,r,a);return"private"!==t&&"wapi"!==t||(this.options.hasAlreadyAuthenticatedSuccessfully=!0),o}}},857:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bit2c",name:"Bit2C",countries:["IL"],rateLimit:3e3,has:{CORS:!1,fetchOpenOrders:!0,fetchMyTrades:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766119-3593220e-5ece-11e7-8b3a-5a041f6bcc3f.jpg",api:"https://bit2c.co.il",www:"https://www.bit2c.co.il",doc:["https://www.bit2c.co.il/home/api","https://github.com/OferE/bit2c"]},api:{public:{get:["Exchanges/{pair}/Ticker","Exchanges/{pair}/orderbook","Exchanges/{pair}/trades","Exchanges/{pair}/lasttrades"]},private:{post:["Merchant/CreateCheckout","Order/AddCoinFundsRequest","Order/AddFund","Order/AddOrder","Order/AddOrderMarketPriceBuy","Order/AddOrderMarketPriceSell","Order/CancelOrder","Order/AddCoinFundsRequest","Order/AddStopOrder","Payment/GetMyId","Payment/Send","Payment/Pay"],get:["Account/Balance","Account/Balance/v2","Order/MyOrders","Order/GetById","Order/AccountHistory","Order/OrderHistory"]}},markets:{"BTC/NIS":{id:"BtcNis",symbol:"BTC/NIS",base:"BTC",quote:"NIS"},"BCH/NIS":{id:"BchNis",symbol:"BCH/NIS",base:"BCH",quote:"NIS"},"LTC/NIS":{id:"LtcNis",symbol:"LTC/NIS",base:"LTC",quote:"NIS"},"BTG/NIS":{id:"BtgNis",symbol:"BTG/NIS",base:"BTG",quote:"NIS"}},fees:{trading:{maker:.005,taker:.005}}})}async fetchBalance(e={}){let t=await this.privateGetAccountBalanceV2(),i={info:t},s=Object.keys(this.currencies);for(let r=0;r<s.length;r++){let e=s[r],a=this.account();if(e in t){let i="AVAILABLE_"+e;a.free=t[i],a.total=t[e],a.used=a.total-a.free}i[e]=a}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){let s=await this.publicGetExchangesPairOrderbook(this.extend({pair:this.marketId(e)},i));return this.parseOrderBook(s)}async fetchTicker(e,t={}){let i=await this.publicGetExchangesPairTicker(this.extend({pair:this.marketId(e)},t)),s=this.milliseconds(),r=this.safeFloat(i,"av"),a=this.safeFloat(i,"a"),o=a*r,n=this.safeFloat(i,"ll");return{symbol:e,timestamp:s,datetime:this.iso8601(s),high:void 0,low:void 0,bid:this.safeFloat(i,"h"),bidVolume:void 0,ask:this.safeFloat(i,"l"),askVolume:void 0,vwap:void 0,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:r,baseVolume:a,quoteVolume:o,info:i}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetExchangesPairTrades(this.extend({pair:r.id},s));return this.parseTrades(a,r,t,i)}async createOrder(e,t,i,s,r,a={}){let o="privatePostOrderAddOrder",n={Amount:s,Pair:this.marketId(e)};"market"===t?o+="MarketPrice"+this.capitalize(i):(n.Price=r,n.Total=s*r,n.IsBid="buy"===i);let d=await this[o](this.extend(n,a));return{info:d,id:d.NewOrder.id}}async cancelOrder(e,t,i={}){return await this.privatePostOrderCancelOrder({id:e})}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.implodeParams(e,s);if("public"===t)o+=".json";else{this.checkRequiredCredentials();let e=this.nonce(),t=this.extend({nonce:e},s);a=this.urlencode(t);let i=this.hmac(this.encode(a),this.encode(this.secret),"sha512","base64");r={"Content-Type":"application/x-www-form-urlencoded",key:this.apiKey,sign:this.decode(i)}}return{url:o,method:i,body:a,headers:r}}async fetchOpenOrders(e,t,i,s={}){if(await this.loadMarkets(),void 0===e)throw new r(this.id+" fetchOpenOrders() requires a symbol argument");let a=this.market(e),o=await this.privateGetOrderMyOrders(this.extend({pair:a.id},s)),n=this.safeValue(o,a.id,{}),d=this.safeValue(n,"ask"),c=this.safeValue(n,"bid");return this.parseOrders(this.arrayConcat(d,c),a,t,i)}parseOrder(e,t){let i=e.created,s=e.price,r=e.amount,a=s*r,o=void 0;void 0!==t&&(o=t.symbol);let n=this.safeValue(e,"type");0===n?n="buy":1===n&&(n="sell");let d=this.safeString(e,"id"),c=this.safeString(e,"status");return{id:d,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,status:c,symbol:o,type:void 0,side:n,price:s,amount:r,filled:void 0,remaining:void 0,cost:a,trades:void 0,fee:void 0,info:e}}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r=void 0,a={};void 0!==i&&(a.take=i),a.take=i,void 0!==t&&(a.toTime=this.ymd(this.milliseconds(),"."),a.fromTime=this.ymd(t,".")),void 0!==e&&(r=this.market(e),a.pair=r.id);let o=await this.privateGetOrderOrderhistory(this.extend(a,s));return this.parseTrades(o,r,t,i)}parseTrade(e,t){let i=void 0,s=void 0,r=void 0,a=void 0,o=void 0,n=void 0,d=void 0,c=this.safeString(e,"reference");if(void 0!==c){i=1e3*this.safeInteger(e,"ticks"),r=this.safeFloat(e,"price"),a=this.safeFloat(e,"firstAmount");let h=c.split("|");if(void 0===t){let i=this.safeString(e,"pair");i in this.markets_by_id[i]?t=this.markets_by_id[i]:h[0]in this.markets_by_id&&(t=this.markets_by_id[h[0]])}o=h[1],s=h[2],0===(d=this.safeInteger(e,"action"))?d="buy":1===d&&(d="sell"),n=this.safeFloat(e,"feeAmount")}else i=1e3*this.safeInteger(e,"date"),s=this.safeInteger(e,"tid"),r=this.safeFloat(e,"price"),a=this.safeFloat(e,"amount");let h=void 0;return void 0!==t&&(h=t.symbol),{info:e,id:s,timestamp:i,datetime:this.iso8601(i),symbol:h,order:o,type:void 0,side:d,takerOrMaker:void 0,price:r,amount:a,cost:r*a,fee:{cost:n,currency:"NIS",rate:void 0}}}}},858:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,AuthenticationError:a,InvalidNonce:o,InsufficientFunds:n,InvalidOrder:d,OrderNotFound:c,PermissionDenied:h}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bitbank",name:"bitbank",countries:["JP"],version:"v1",has:{fetchOHLCV:!0,fetchOpenOrders:!0,fetchMyTrades:!0,fetchDepositAddress:!0,withdraw:!0},timeframes:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","4h":"4hour","8h":"8hour","12h":"12hour","1d":"1day","1w":"1week"},urls:{logo:"https://user-images.githubusercontent.com/1294454/37808081-b87f2d9c-2e59-11e8-894d-c1900b7584fe.jpg",api:{public:"https://public.bitbank.cc",private:"https://api.bitbank.cc"},www:"https://bitbank.cc/",doc:"https://docs.bitbank.cc/",fees:"https://bitbank.cc/docs/fees/"},api:{public:{get:["{pair}/ticker","{pair}/depth","{pair}/transactions","{pair}/transactions/{yyyymmdd}","{pair}/candlestick/{candletype}/{yyyymmdd}"]},private:{get:["user/assets","user/spot/order","user/spot/active_orders","user/spot/trade_history","user/withdrawal_account"],post:["user/spot/order","user/spot/cancel_order","user/spot/cancel_orders","user/spot/orders_info","user/request_withdrawal"]}},markets:{"BCH/BTC":{id:"bcc_btc",symbol:"BCH/BTC",base:"BCH",quote:"BTC",baseId:"bcc",quoteId:"btc"},"BCH/JPY":{id:"bcc_jpy",symbol:"BCH/JPY",base:"BCH",quote:"JPY",baseId:"bcc",quoteId:"jpy"},"MONA/BTC":{id:"mona_btc",symbol:"MONA/BTC",base:"MONA",quote:"BTC",baseId:"mona",quoteId:"btc"},"MONA/JPY":{id:"mona_jpy",symbol:"MONA/JPY",base:"MONA",quote:"JPY",baseId:"mona",quoteId:"jpy"},"ETH/BTC":{id:"eth_btc",symbol:"ETH/BTC",base:"ETH",quote:"BTC",baseId:"eth",quoteId:"btc"},"LTC/BTC":{id:"ltc_btc",symbol:"LTC/BTC",base:"LTC",quote:"BTC",baseId:"ltc",quoteId:"btc"},"XRP/JPY":{id:"xrp_jpy",symbol:"XRP/JPY",base:"XRP",quote:"JPY",baseId:"xrp",quoteId:"jpy"},"BTC/JPY":{id:"btc_jpy",symbol:"BTC/JPY",base:"BTC",quote:"JPY",baseId:"btc",quoteId:"jpy"}},fees:{trading:{maker:0,taker:0},funding:{withdraw:{BTC:.001,LTC:.001,XRP:.15,ETH:5e-4,MONA:.001,BCC:.001}}},precision:{price:8,amount:8},exceptions:{20001:a,20002:a,20003:a,20005:a,20004:o,40020:d,40021:d,40025:r,40013:c,40014:c,50008:h,50009:c,50010:c,60001:n,60005:d}})}parseTicker(e,t){let i=t.symbol,s=e.timestamp,r=this.safeFloat(e,"last");return{symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"vol"),quoteVolume:void 0,info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetPairTicker(this.extend({pair:i.id},t));return this.parseTicker(s.data,i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=(await this.publicGetPairDepth(this.extend({pair:this.marketId(e)},i))).data;return this.parseOrderBook(s,s.timestamp)}parseTrade(e,t){let i=e.executed_at,s=this.safeFloat(e,"price"),r=this.safeFloat(e,"amount"),a=t.symbol,o=this.costToPrecision(a,s*r),n=this.safeString(e,"transaction_id");n||(n=this.safeString(e,"trade_id"));let d=void 0;return"fee_amount_quote"in e&&(d={currency:t.quote,cost:this.safeFloat(e,"fee_amount_quote")}),{timestamp:i,datetime:this.iso8601(i),symbol:a,id:n,order:this.safeString(e,"order_id"),type:this.safeString(e,"type"),side:e.side,price:s,amount:r,cost:o,fee:d,info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetPairTransactions(this.extend({pair:r.id},s));return this.parseTrades(a.data.transactions,r,t,i)}parseOHLCV(e,t,i="5m",s,r){return[e[5],parseFloat(e[0]),parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3]),parseFloat(e[4])]}async fetchOHLCV(e,t="5m",i,s,r={}){await this.loadMarkets();let a=this.market(e),o=this.milliseconds();o=(o=this.ymd(o)).split("-");let n=(await this.publicGetPairCandlestickCandletypeYyyymmdd(this.extend({pair:a.id,candletype:this.timeframes[t],yyyymmdd:o.join("")},r))).data.candlestick[0].ohlcv;return this.parseOHLCVs(n,a,t,i,s)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetUserAssets(e),i={info:t},s=t.data.assets;for(let r=0;r<s.length;r++){let e=s[r],t=e.asset,a=t;t in this.currencies_by_id&&(a=this.currencies_by_id[t].code);let o={free:parseFloat(e.free_amount),used:parseFloat(e.locked_amount),total:parseFloat(e.onhand_amount)};i[a]=o}return this.parseBalance(i)}parseOrder(e,t){let i=this.safeString(e,"pair"),s=void 0;i&&!t&&i in this.marketsById&&(t=this.marketsById[i]),t&&(s=t.symbol);let r=this.safeInteger(e,"ordered_at"),a=this.safeFloat(e,"price"),o=this.safeFloat(e,"start_amount"),n=this.safeFloat(e,"executed_amount"),d=this.safeFloat(e,"remaining_amount"),c=n*this.safeFloat(e,"average_price"),h=this.safeString(e,"status");h="FULLY_FILLED"===h?"closed":"CANCELED_UNFILLED"===h||"CANCELED_PARTIALLY_FILLED"===h?"canceled":"open";let l=this.safeString(e,"type");void 0!==l&&(l=l.toLowerCase());let u=this.safeString(e,"side");return void 0!==u&&(u=u.toLowerCase()),{id:this.safeString(e,"order_id"),datetime:this.iso8601(r),timestamp:r,lastTradeTimestamp:void 0,status:h,symbol:s,type:l,side:u,price:a,cost:c,amount:o,filled:n,remaining:d,trades:void 0,fee:void 0,info:e}}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e);if(void 0===r)throw new d(this.id+" createOrder requires a price argument for both market and limit orders");let n={pair:o.id,amount:this.amountToString(e,s),price:this.priceToPrecision(e,r),side:i,type:t},c=await this.privatePostUserSpotOrder(this.extend(n,a)),h=c.data.order_id,l=this.parseOrder(c.data,o);return this.orders[h]=l,l}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t);return(await this.privatePostUserSpotCancelOrder(this.extend({order_id:e,pair:s.id},i))).data}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t),r=await this.privateGetUserSpotOrder(this.extend({order_id:e,pair:s.id},i));return this.parseOrder(r.data)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pair:r.id};void 0!==i&&(a.count=i),void 0!==t&&(a.since=parseInt(t/1e3));let o=await this.privateGetUserSpotActiveOrders(this.extend(a,s));return this.parseOrders(o.data.orders,r,t,i)}async fetchMyTrades(e,t,i,s={}){let r=void 0;void 0!==e&&(await this.loadMarkets(),r=this.market(e));let a={};void 0!==r&&(a.pair=r.id),void 0!==i&&(a.count=i),void 0!==t&&(a.since=parseInt(t/1e3));let o=await this.privateGetUserSpotTradeHistory(this.extend(a,s));return this.parseTrades(o.data.trades,r,t,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privateGetUserWithdrawalAccount(this.extend({asset:i.id},t)),r=s.data.accounts;return{currency:i,address:this.safeString(r[0],"address"),tag:void 0,info:s}}async withdraw(e,t,i,s,a={}){if(!("uuid"in a))throw new r(this.id+" uuid is required for withdrawal");await this.loadMarkets();let o=this.currency(e),n=await this.privatePostUserRequestWithdrawal(this.extend({asset:o.id,amount:t},a));return{info:n,id:n.data.txid}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o=this.omit(s,this.extractParams(e)),n=this.urls.api[t]+"/";if("public"===t)n+=this.implodeParams(e,s),Object.keys(o).length&&(n+="?"+this.urlencode(o));else{this.checkRequiredCredentials();let t=this.nonce().toString(),d=t;n+=this.version+"/"+this.implodeParams(e,s),"POST"===i?d+=a=this.json(o):(d+="/"+this.version+"/"+e,Object.keys(o).length&&(n+="?"+(o=this.urlencode(o)),d+="?"+o)),r={"Content-Type":"application/json","ACCESS-KEY":this.apiKey,"ACCESS-NONCE":t,"ACCESS-SIGNATURE":this.hmac(this.encode(d),this.encode(this.secret))}}return{url:n,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o),d=this.safeInteger(n,"success"),c=this.safeValue(n,"data");if(!d||!c){let e={10000:"URL does not exist",10001:"A system error occurred. Please contact support",10002:"Invalid JSON format. Please check the contents of transmission",10003:"A system error occurred. Please contact support",10005:"A timeout error occurred. Please wait for a while and try again",20001:"API authentication failed",20002:"Illegal API key",20003:"API key does not exist",20004:"API Nonce does not exist",20005:"API signature does not exist",20011:"Two-step verification failed",20014:"SMS authentication failed",30001:"Please specify the order quantity",30006:"Please specify the order ID",30007:"Please specify the order ID array",30009:"Please specify the stock",30012:"Please specify the order price",30013:"Trade Please specify either",30015:"Please specify the order type",30016:"Please specify asset name",30019:"Please specify uuid",30039:"Please specify the amount to be withdrawn",40001:"The order quantity is invalid",40006:"Count value is invalid",40007:"End time is invalid",40008:"end_id Value is invalid",40009:"The from_id value is invalid",40013:"The order ID is invalid",40014:"The order ID array is invalid",40015:"Too many specified orders",40017:"Incorrect issue name",40020:"The order price is invalid",40021:"The trading classification is invalid",40022:"Start date is invalid",40024:"The order type is invalid",40025:"Incorrect asset name",40028:"uuid is invalid",40048:"The amount of withdrawal is illegal",50003:"Currently, this account is in a state where you can not perform the operation you specified. Please contact support",50004:"Currently, this account is temporarily registered. Please try again after registering your account",50005:"Currently, this account is locked. Please contact support",50006:"Currently, this account is locked. Please contact support",50008:"User identification has not been completed",50009:"Your order does not exist",50010:"Can not cancel specified order",50011:"API not found",60001:"The number of possessions is insufficient",60002:"It exceeds the quantity upper limit of the tender buying order",60003:"The specified quantity exceeds the limit",60004:"The specified quantity is below the threshold",60005:"The specified price is above the limit",60006:"The specified price is below the lower limit",70001:"A system error occurred. Please contact support",70002:"A system error occurred. Please contact support",70003:"A system error occurred. Please contact support",70004:"We are unable to accept orders as the transaction is currently suspended",70005:"Order can not be accepted because purchase order is currently suspended",70006:"We can not accept orders because we are currently unsubscribed "},t=this.exceptions,i=this.safeString(c,"code"),s=this.safeString(e,i,"Error"),a=this.safeValue(t,i);throw void 0!==a?new a(s):new r(this.id+" "+this.json(n))}return n}}},859:function(e,t,i){"use strict";const s=i(788),{InvalidNonce:r,InsufficientFunds:a,AuthenticationError:o,InvalidOrder:n,ExchangeError:d}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bitbay",name:"BitBay",countries:["MT","EU"],rateLimit:1e3,has:{CORS:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766132-978a7bd8-5ece-11e7-9540-bc96d1e9bbb8.jpg",www:"https://bitbay.net",api:{public:"https://bitbay.net/API/Public",private:"https://bitbay.net/API/Trading/tradingApi.php"},doc:["https://bitbay.net/public-api","https://bitbay.net/account/tab-api","https://github.com/BitBayNet/API"],fees:"https://bitbay.net/en/fees"},api:{public:{get:["{id}/all","{id}/market","{id}/orderbook","{id}/ticker","{id}/trades"]},private:{post:["info","trade","cancel","orderbook","orders","transfer","withdraw","history","transactions"]}},markets:{"BTC/USD":{id:"BTCUSD",symbol:"BTC/USD",base:"BTC",quote:"USD",baseId:"BTC",quoteId:"USD"},"BTC/EUR":{id:"BTCEUR",symbol:"BTC/EUR",base:"BTC",quote:"EUR",baseId:"BTC",quoteId:"EUR"},"BTC/PLN":{id:"BTCPLN",symbol:"BTC/PLN",base:"BTC",quote:"PLN",baseId:"BTC",quoteId:"PLN"},"LTC/USD":{id:"LTCUSD",symbol:"LTC/USD",base:"LTC",quote:"USD",baseId:"LTC",quoteId:"USD"},"LTC/EUR":{id:"LTCEUR",symbol:"LTC/EUR",base:"LTC",quote:"EUR",baseId:"LTC",quoteId:"EUR"},"LTC/PLN":{id:"LTCPLN",symbol:"LTC/PLN",base:"LTC",quote:"PLN",baseId:"LTC",quoteId:"PLN"},"LTC/BTC":{id:"LTCBTC",symbol:"LTC/BTC",base:"LTC",quote:"BTC",baseId:"LTC",quoteId:"BTC"},"ETH/USD":{id:"ETHUSD",symbol:"ETH/USD",base:"ETH",quote:"USD",baseId:"ETH",quoteId:"USD"},"ETH/EUR":{id:"ETHEUR",symbol:"ETH/EUR",base:"ETH",quote:"EUR",baseId:"ETH",quoteId:"EUR"},"ETH/PLN":{id:"ETHPLN",symbol:"ETH/PLN",base:"ETH",quote:"PLN",baseId:"ETH",quoteId:"PLN"},"ETH/BTC":{id:"ETHBTC",symbol:"ETH/BTC",base:"ETH",quote:"BTC",baseId:"ETH",quoteId:"BTC"},"LSK/USD":{id:"LSKUSD",symbol:"LSK/USD",base:"LSK",quote:"USD",baseId:"LSK",quoteId:"USD"},"LSK/EUR":{id:"LSKEUR",symbol:"LSK/EUR",base:"LSK",quote:"EUR",baseId:"LSK",quoteId:"EUR"},"LSK/PLN":{id:"LSKPLN",symbol:"LSK/PLN",base:"LSK",quote:"PLN",baseId:"LSK",quoteId:"PLN"},"LSK/BTC":{id:"LSKBTC",symbol:"LSK/BTC",base:"LSK",quote:"BTC",baseId:"LSK",quoteId:"BTC"},"BCH/USD":{id:"BCCUSD",symbol:"BCH/USD",base:"BCH",quote:"USD",baseId:"BCC",quoteId:"USD"},"BCH/EUR":{id:"BCCEUR",symbol:"BCH/EUR",base:"BCH",quote:"EUR",baseId:"BCC",quoteId:"EUR"},"BCH/PLN":{id:"BCCPLN",symbol:"BCH/PLN",base:"BCH",quote:"PLN",baseId:"BCC",quoteId:"PLN"},"BCH/BTC":{id:"BCCBTC",symbol:"BCH/BTC",base:"BCH",quote:"BTC",baseId:"BCC",quoteId:"BTC"},"BTG/USD":{id:"BTGUSD",symbol:"BTG/USD",base:"BTG",quote:"USD",baseId:"BTG",quoteId:"USD"},"BTG/EUR":{id:"BTGEUR",symbol:"BTG/EUR",base:"BTG",quote:"EUR",baseId:"BTG",quoteId:"EUR"},"BTG/PLN":{id:"BTGPLN",symbol:"BTG/PLN",base:"BTG",quote:"PLN",baseId:"BTG",quoteId:"PLN"},"BTG/BTC":{id:"BTGBTC",symbol:"BTG/BTC",base:"BTG",quote:"BTC",baseId:"BTG",quoteId:"BTC"},"DASH/USD":{id:"DASHUSD",symbol:"DASH/USD",base:"DASH",quote:"USD",baseId:"DASH",quoteId:"USD"},"DASH/EUR":{id:"DASHEUR",symbol:"DASH/EUR",base:"DASH",quote:"EUR",baseId:"DASH",quoteId:"EUR"},"DASH/PLN":{id:"DASHPLN",symbol:"DASH/PLN",base:"DASH",quote:"PLN",baseId:"DASH",quoteId:"PLN"},"DASH/BTC":{id:"DASHBTC",symbol:"DASH/BTC",base:"DASH",quote:"BTC",baseId:"DASH",quoteId:"BTC"},"GAME/USD":{id:"GAMEUSD",symbol:"GAME/USD",base:"GAME",quote:"USD",baseId:"GAME",quoteId:"USD"},"GAME/EUR":{id:"GAMEEUR",symbol:"GAME/EUR",base:"GAME",quote:"EUR",baseId:"GAME",quoteId:"EUR"},"GAME/PLN":{id:"GAMEPLN",symbol:"GAME/PLN",base:"GAME",quote:"PLN",baseId:"GAME",quoteId:"PLN"},"GAME/BTC":{id:"GAMEBTC",symbol:"GAME/BTC",base:"GAME",quote:"BTC",baseId:"GAME",quoteId:"BTC"},"XRP/USD":{id:"XRPUSD",symbol:"XRP/USD",base:"XRP",quote:"USD",baseId:"XRP",quoteId:"USD"},"XRP/EUR":{id:"XRPEUR",symbol:"XRP/EUR",base:"XRP",quote:"EUR",baseId:"XRP",quoteId:"EUR"},"XRP/PLN":{id:"XRPPLN",symbol:"XRP/PLN",base:"XRP",quote:"PLN",baseId:"XRP",quoteId:"PLN"},"XRP/BTC":{id:"XRPBTC",symbol:"XRP/BTC",base:"XRP",quote:"BTC",baseId:"XRP",quoteId:"BTC"},"XIN/BTC":{id:"XINBTC",symbol:"XIN/BTC",base:"XIN",quote:"BTC",baseId:"XIN",quoteId:"BTC"}},fees:{trading:{maker:.003,taker:.0043},funding:{withdraw:{BTC:9e-4,LTC:.005,ETH:.00126,LSK:.2,BCH:6e-4,GAME:.005,DASH:.001,BTG:8e-4,PLN:4,EUR:1.5}}},exceptions:{400:d,401:n,402:n,403:n,404:n,405:n,406:a,408:n,501:o,502:o,503:r,504:d,505:o,506:o,509:d,510:d}})}async fetchBalance(e={}){let t=await this.privatePostInfo();if("balances"in t){let e=t.balances,i={info:e},s=Object.keys(this.currencies);for(let t=0;t<s.length;t++){let r=s[t],a=this.currencies[r].id,o=this.account();a in e&&(o.free=parseFloat(e[a].available),o.used=parseFloat(e[a].locked),o.total=this.sum(o.free,o.used)),i[r]=o}return this.parseBalance(i)}throw new d(this.id+" empty balance response "+this.json(t))}async fetchOrderBook(e,t,i={}){let s=await this.publicGetIdOrderbook(this.extend({id:this.marketId(e)},i));return this.parseOrderBook(s)}async fetchTicker(e,t={}){let i=await this.publicGetIdTicker(this.extend({id:this.marketId(e)},t)),s=this.milliseconds(),r=this.safeFloat(i,"volume"),a=this.safeFloat(i,"vwap"),o=r*a,n=this.safeFloat(i,"last");return{symbol:e,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(i,"max"),low:this.safeFloat(i,"min"),bid:this.safeFloat(i,"bid"),bidVolume:void 0,ask:this.safeFloat(i,"ask"),askVolume:void 0,vwap:a,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeFloat(i,"average"),baseVolume:r,quoteVolume:o,info:i}}parseTrade(e,t){let i=1e3*e.date;return{id:e.tid,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:e.type,price:e.price,amount:e.amount}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetIdTrades(this.extend({id:r.id},s));return this.parseTrades(a,r,t,i)}async createOrder(e,t,i,s,r,a={}){if("limit"!==t)throw new d(this.id+" allows limit orders only");let o=this.market(e);return this.privatePostTrade(this.extend({type:i,currency:o.baseId,amount:s,payment_currency:o.quoteId,rate:r},a))}async cancelOrder(e,t,i={}){return await this.privatePostCancel({id:e})}isFiat(e){return e in{USD:!0,EUR:!0,PLN:!0}}async withdraw(e,t,i,s,r={}){this.checkAddress(i),await this.loadMarkets();let a=void 0,o={currency:this.currency(e).id,quantity:t};return this.isFiat(e)?a="privatePostWithdraw":(a="privatePostTransfer",void 0!==s&&(i+="?dt="+s.toString()),o.address=i),{info:await this[a](this.extend(o,r)),id:void 0}}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t];if("public"===t){let t=this.omit(s,this.extractParams(e));o+="/"+this.implodeParams(e,s)+".json",o+="?"+this.urlencode(t)}else this.checkRequiredCredentials(),a=this.urlencode(this.extend({method:e,moment:this.nonce()},s)),r={"Content-Type":"application/x-www-form-urlencoded","API-Key":this.apiKey,"API-Hash":this.hmac(this.encode(a),this.encode(this.secret),"sha512")};return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a){if("string"==typeof a&&!(a.length<2||"{"!==a[0]&&"["!==a[0])){let e=JSON.parse(a);if("code"in e){let t=e.code;const i=this.id+" "+this.json(e),s=this.exceptions;throw t in this.exceptions?new s[t](i):new d(i)}}}}},860:function(e,t,i){"use strict";const s=i(798),{ExchangeError:r,NotSupported:a,InsufficientFunds:o}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bitfinex2",name:"Bitfinex v2",countries:["VG"],version:"v2",has:{CORS:!0,createLimitOrder:!1,createMarketOrder:!1,createOrder:!1,deposit:!1,editOrder:!1,fetchDepositAddress:!1,fetchClosedOrders:!1,fetchFundingFees:!1,fetchMyTrades:!1,fetchOHLCV:!0,fetchOpenOrders:!1,fetchOrder:!0,fetchTickers:!0,fetchTradingFees:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","3h":"3h","6h":"6h","12h":"12h","1d":"1D","1w":"7D","2w":"14D","1M":"1M"},rateLimit:1500,urls:{logo:"https://user-images.githubusercontent.com/1294454/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg",api:"https://api.bitfinex.com",www:"https://www.bitfinex.com",doc:["https://bitfinex.readme.io/v2/docs","https://github.com/bitfinexcom/bitfinex-api-node"],fees:"https://www.bitfinex.com/fees"},api:{v1:{get:["symbols","symbols_details"]},public:{get:["platform/status","tickers","ticker/{symbol}","trades/{symbol}/hist","book/{symbol}/{precision}","book/{symbol}/P0","book/{symbol}/P1","book/{symbol}/P2","book/{symbol}/P3","book/{symbol}/R0","stats1/{key}:{size}:{symbol}/{side}/{section}","stats1/{key}:{size}:{symbol}/long/last","stats1/{key}:{size}:{symbol}/long/hist","stats1/{key}:{size}:{symbol}/short/last","stats1/{key}:{size}:{symbol}/short/hist","candles/trade:{timeframe}:{symbol}/{section}","candles/trade:{timeframe}:{symbol}/last","candles/trade:{timeframe}:{symbol}/hist"],post:["calc/trade/avg"]},private:{post:["auth/r/wallets","auth/r/orders/{symbol}","auth/r/orders/{symbol}/new","auth/r/orders/{symbol}/hist","auth/r/order/{symbol}:{id}/trades","auth/r/trades/{symbol}/hist","auth/r/positions","auth/r/funding/offers/{symbol}","auth/r/funding/offers/{symbol}/hist","auth/r/funding/loans/{symbol}","auth/r/funding/loans/{symbol}/hist","auth/r/funding/credits/{symbol}","auth/r/funding/credits/{symbol}/hist","auth/r/funding/trades/{symbol}/hist","auth/r/info/margin/{key}","auth/r/info/funding/{key}","auth/r/movements/{currency}/hist","auth/r/stats/perf:{timeframe}/hist","auth/r/alerts","auth/w/alert/set","auth/w/alert/{type}:{symbol}:{price}/del","auth/calc/order/avail","auth/r/ledgers/{symbol}/hist"]}},fees:{trading:{maker:.001,taker:.002},funding:{withdraw:{BTC:5e-4,BCH:5e-4,ETH:.01,EOS:.1,LTC:.001,OMG:.1,IOT:0,NEO:0,ETC:.01,XRP:.02,ETP:.01,ZEC:.001,BTG:0,DASH:.01,XMR:.04,QTM:.01,EDO:.5,DAT:1,AVT:.5,SAN:.1,USDT:5,SPK:9.2784,BAT:9.0883,GNT:8.2881,SNT:14.303,QASH:3.2428,YYW:18.055}}}})}isFiat(e){return e in{USD:"USD",EUR:"EUR"}}getCurrencyId(e){return"f"+e}async fetchMarkets(){let e=await this.v1GetSymbolsDetails(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.pair.toUpperCase(),a=r.slice(0,3),o=r.slice(3,6),n=this.commonCurrencyCode(a),d=this.commonCurrencyCode(o),c=n+"/"+d;r="t"+r,a=this.getCurrencyId(a),o=this.getCurrencyId(o);let h={price:s.price_precision,amount:s.price_precision},l={amount:{min:this.safeFloat(s,"minimum_order_size"),max:this.safeFloat(s,"maximum_order_size")},price:{min:Math.pow(10,-h.price),max:Math.pow(10,h.price)}};l.cost={min:l.amount.min*l.price.min,max:void 0},t.push({id:r,symbol:c,base:n,quote:d,baseId:a,quoteId:o,active:!0,precision:h,limits:l,lot:Math.pow(10,-h.amount),info:s})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostAuthRWallets(),i=this.safeString(e,"type","exchange"),s={info:t};for(let r=0;r<t.length;r++){let e=t[r],a=e[0],o=e[1],n=e[2],d=e[4];if(a===i){let e=o;o in this.currencies_by_id?e=this.currencies_by_id[o].code:"t"===o[0]?(e=(o=o.slice(1)).toUpperCase(),e=this.commonCurrencyCode(e)):e=this.commonCurrencyCode(e);let t=this.account();t.total=n,d?(t.free=d,t.used=t.total-t.free):0===d?(t.free=0,t.used=n):t.free=n,s[e]=t}}return this.parseBalance(s)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetBookSymbolPrecision(this.extend({symbol:this.marketId(e),precision:"R0"},i)),r=this.milliseconds(),a={bids:[],asks:[],timestamp:r,datetime:this.iso8601(r),nonce:void 0};for(let o=0;o<s.length;o++){let e=s[o],t=e[1],i=e[2],r=i>0?"bids":"asks";i=Math.abs(i),a[r].push([t,i])}return a.bids=this.sortBy(a.bids,0,!0),a.asks=this.sortBy(a.asks,0),a}parseTicker(e,t){let i=this.milliseconds(),s=void 0;t&&(s=t.symbol);let r=e.length,a=e[r-4];return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:e[r-2],low:e[r-1],bid:e[r-10],bidVolume:void 0,ask:e[r-8],askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:e[r-6],percentage:e[r-5],average:void 0,baseVolume:e[r-3],quoteVolume:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers(this.extend({symbols:this.ids.join(",")},t)),s={};for(let r=0;r<i.length;r++){let e=i[r],t=e[0],a=this.markets_by_id[t];s[a.symbol]=this.parseTicker(e,a)}return s}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.markets[e],s=await this.publicGetTickerSymbol(this.extend({symbol:i.id},t));return this.parseTicker(s,i)}parseTrade(e,t){let[i,s,r,a]=e,o=r<0?"sell":"buy";return r<0&&(r=-r),{id:i.toString(),info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:void 0,side:o,price:a,amount:r}}async fetchTrades(e,t,i=120,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id,sort:"-1",limit:i};void 0!==t&&(a.start=t);let o=await this.publicGetTradesSymbolHist(this.extend(a,s)),n=this.sortBy(o,1);return this.parseTrades(n,r,void 0,i)}async fetchOHLCV(e,t="1m",i,s=100,r={}){await this.loadMarkets();let a=this.market(e);void 0===i&&(i=this.milliseconds()-this.parseTimeframe(t)*s*1e3);let o={symbol:a.id,timeframe:this.timeframes[t],sort:1,limit:s,start:i},n=await this.publicGetCandlesTradeTimeframeSymbolHist(this.extend(o,r));return this.parseOHLCVs(n,a,t,i,s)}async createOrder(e,t,i,s,r,o={}){throw new a(this.id+" createOrder not implemented yet")}cancelOrder(e,t,i={}){throw new a(this.id+" cancelOrder not implemented yet")}async fetchOrder(e,t,i={}){throw new a(this.id+" fetchOrder not implemented yet")}async fetchDepositAddress(e,t={}){throw new a(this.id+" fetchDepositAddress() not implemented yet.")}async withdraw(e,t,i,s,r={}){throw new a(this.id+" withdraw not implemented yet")}async fetchMyTrades(e,t,i=25,s={}){await this.loadMarkets();let r={symbol:this.market(e).id,limit:i,end:this.seconds()};return void 0!==t&&(r.start=parseInt(t/1e3)),await this.privatePostAuthRTradesSymbolHist(this.extend(r,s))}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o="/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));o="v1"===t?t+o:this.version+o;let d=this.urls.api+"/"+o;if("public"===t&&Object.keys(n).length&&(d+="?"+this.urlencode(n)),"private"===t){this.checkRequiredCredentials();let e=this.nonce().toString(),t="/api/"+o+e+(a=this.json(n)),i=this.hmac(this.encode(t),this.encode(this.secret),"sha384");r={"bfx-nonce":e,"bfx-apikey":this.apiKey,"bfx-signature":i,"Content-Type":"application/json"}}return{url:d,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,n){let d=await this.fetch2(e,t,i,s,a,n);if(d){if("message"in d){if(d.message.indexOf("not enough exchange balance")>=0)throw new o(this.id+" "+this.json(d));throw new r(this.id+" "+this.json(d))}return d}if(""===d)throw new r(this.id+" returned empty response");return d}}},861:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,OrderNotFound:a}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bitflyer",name:"bitFlyer",countries:["JP"],version:"v1",rateLimit:1e3,has:{CORS:!1,withdraw:!0,fetchMyTrades:!0,fetchOrders:!0,fetchOrder:!0,fetchOpenOrders:"emulated",fetchClosedOrders:"emulated"},urls:{logo:"https://user-images.githubusercontent.com/1294454/28051642-56154182-660e-11e7-9b0d-6042d1e6edd8.jpg",api:"https://api.bitflyer.jp",www:"https://bitflyer.jp",doc:"https://bitflyer.jp/API"},api:{public:{get:["getmarkets/usa","getmarkets/eu","getmarkets","getboard","getticker","getexecutions","gethealth","getboardstate","getchats"]},private:{get:["getpermissions","getbalance","getcollateral","getcollateralaccounts","getaddresses","getcoinins","getcoinouts","getbankaccounts","getdeposits","getwithdrawals","getchildorders","getparentorders","getparentorder","getexecutions","getpositions","gettradingcommission"],post:["sendcoin","withdraw","sendchildorder","cancelchildorder","sendparentorder","cancelparentorder","cancelallchildorders"]}},fees:{trading:{maker:.0025,taker:.0025}}})}async fetchMarkets(){let e=await this.publicGetGetmarkets(),t=await this.publicGetGetmarketsUsa(),i=await this.publicGetGetmarketsEu(),s=this.arrayConcat(e,t);s=this.arrayConcat(s,i);let r=[];for(let a=0;a<s.length;a++){let e=s[a],t=e.product_code,i=!0,o=!1,n="spot";"alias"in e&&(n="future",o=!0,i=!1);let d=t.split("_"),c=void 0,h=void 0,l=t,u=d.length;1===u?(c=l.slice(0,3),h=l.slice(3,6)):2===u?l=(c=d[0])+"/"+(h=d[1]):(c=d[1],h=d[2]),r.push({id:t,symbol:l,base:c,quote:h,type:n,spot:i,future:o,info:e})}return r}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetGetbalance(),i={};for(let a=0;a<t.length;a++){let e=t[a];i[e.currency_code]=e}let s={info:t},r=Object.keys(this.currencies);for(let a=0;a<r.length;a++){let e=r[a],t=this.account();e in i&&(t.total=i[e].amount,t.free=i[e].available,t.used=t.total-t.free),s[e]=t}return this.parseBalance(s)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetGetboard(this.extend({product_code:this.marketId(e)},i));return this.parseOrderBook(s,void 0,"bids","asks","price","size")}async fetchTicker(e,t={}){await this.loadMarkets();let i=await this.publicGetGetticker(this.extend({product_code:this.marketId(e)},t)),s=this.parse8601(i.timestamp),r=this.safeFloat(i,"ltp");return{symbol:e,timestamp:s,datetime:this.iso8601(s),high:void 0,low:void 0,bid:this.safeFloat(i,"best_bid"),bidVolume:void 0,ask:this.safeFloat(i,"best_ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(i,"volume_by_product"),quoteVolume:void 0,info:i}}parseTrade(e,t){let i=void 0,s=void 0;if("side"in e&&e.side){let t=(i=e.side.toLowerCase())+"_child_order_acceptance_id";t in e&&(s=e[t])}void 0===s&&(s=this.safeString(e,"child_order_acceptance_id"));let r=this.parse8601(e.exec_date);return{id:e.id.toString(),info:e,timestamp:r,datetime:this.iso8601(r),symbol:t.symbol,order:s,type:void 0,side:i,price:e.price,amount:e.size}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetGetexecutions(this.extend({product_code:r.id},s));return this.parseTrades(a,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o={product_code:this.marketId(e),child_order_type:t.toUpperCase(),side:i.toUpperCase(),price:r,size:s},n=await this.privatePostSendchildorder(this.extend(o,a));return{info:n,id:n.child_order_acceptance_id}}async cancelOrder(e,t,i={}){if(void 0===t)throw new r(this.id+" cancelOrder() requires a symbol argument");return await this.loadMarkets(),await this.privatePostCancelchildorder(this.extend({product_code:this.marketId(t),child_order_acceptance_id:e},i))}parseOrderStatus(e){let t={ACTIVE:"open",COMPLETED:"closed",CANCELED:"canceled",EXPIRED:"canceled",REJECTED:"canceled"};return e in t?t[e]:e.toLowerCase()}parseOrder(e,t){let i=this.parse8601(e.child_order_date),s=this.safeFloat(e,"size"),r=this.safeFloat(e,"outstanding_size"),a=this.safeFloat(e,"executed_size"),o=this.safeFloat(e,"price"),n=o*a,d=this.parseOrderStatus(e.child_order_state),c=e.child_order_type.toLowerCase(),h=e.side.toLowerCase(),l=void 0;if(void 0===t){let i=this.safeString(e,"product_code");void 0!==i&&i in this.markets_by_id&&(t=this.markets_by_id[i])}void 0!==t&&(l=t.symbol);let u=void 0,p=this.safeFloat(e,"total_commission");return void 0!==p&&(u={cost:p,currency:void 0,rate:void 0}),{id:e.child_order_acceptance_id,info:e,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,status:d,symbol:l,type:c,side:h,price:o,cost:n,amount:s,filled:a,remaining:r,fee:u}}async fetchOrders(e,t,i=100,s={}){if(void 0===e)throw new r(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();let a=this.market(e),o={product_code:a.id,count:i},n=await this.privateGetGetchildorders(this.extend(o,s)),d=this.parseOrders(n,a,t,i);return void 0!==e&&(d=this.filterBy(d,"symbol",e)),d}async fetchOpenOrders(e,t,i=100,s={}){return await this.fetchOrders(e,t,i,this.extend({child_order_state:"ACTIVE"},s))}async fetchClosedOrders(e,t,i=100,s={}){return await this.fetchOrders(e,t,i,this.extend({child_order_state:"COMPLETED"},s))}async fetchOrder(e,t,i={}){if(void 0===t)throw new r(this.id+" fetchOrder() requires a symbol argument");let s=await this.fetchOrders(t),o=this.indexBy(s,"id");if(e in o)return o[e];throw new a(this.id+" No order found with id "+e)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new r(this.id+" fetchMyTrades requires a symbol argument");await this.loadMarkets();let a=this.market(e),o={product_code:a.id};void 0!==i&&(o.count=i);let n=await this.privateGetGetexecutions(this.extend(o,s));return this.parseTrades(n,a,t,i)}async withdraw(e,t,i,s,a={}){if(this.checkAddress(i),await this.loadMarkets(),"JPY"!==e&&"USD"!==e&&"EUR"!==e)throw new r(this.id+" allows withdrawing JPY, USD, EUR only, "+e+" is not supported");let o=this.currency(e),n=await this.privatePostWithdraw(this.extend({currency_code:o.id,amount:t},a));return{info:n,id:n.message_id}}sign(e,t="public",i="GET",s={},r,a){let o="/"+this.version+"/";"private"===t&&(o+="me/"),o+=e,"GET"===i&&Object.keys(s).length&&(o+="?"+this.urlencode(s));let n=this.urls.api+o;if("private"===t){this.checkRequiredCredentials();let e=this.nonce().toString(),t=[e,i,o].join("");Object.keys(s).length&&"GET"!==i&&(t+=a=this.json(s)),r={"ACCESS-KEY":this.apiKey,"ACCESS-TIMESTAMP":e,"ACCESS-SIGN":this.hmac(this.encode(t),this.encode(this.secret)),"Content-Type":"application/json"}}return{url:n,method:i,body:a,headers:r}}}},862:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bithumb",name:"Bithumb",countries:["KR"],rateLimit:500,has:{CORS:!0,fetchTickers:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/30597177-ea800172-9d5e-11e7-804c-b9d4fa9b56b0.jpg",api:{public:"https://api.bithumb.com/public",private:"https://api.bithumb.com"},www:"https://www.bithumb.com",doc:"https://www.bithumb.com/u1/US127"},api:{public:{get:["ticker/{currency}","ticker/all","orderbook/{currency}","orderbook/all","transaction_history/{currency}","transaction_history/all"]},private:{post:["info/account","info/balance","info/wallet_address","info/ticker","info/orders","info/user_transactions","trade/place","info/order_detail","trade/cancel","trade/btc_withdrawal","trade/krw_deposit","trade/krw_withdrawal","trade/market_buy","trade/market_sell"]}},fees:{trading:{maker:.0015,taker:.0015}},exceptions:{5100:r}})}async fetchMarkets(){let e=await this.publicGetTickerAll(),t=Object.keys(e.data),i=[];for(let s=0;s<t.length;s++){let r=t[s];if("date"!==r){let t=e.data[r],s=r,a="KRW",o=r+"/"+a;i.push({id:r,symbol:o,base:s,quote:a,info:t,lot:void 0,active:!0,precision:{amount:void 0,price:void 0},limits:{amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}}})}}return i}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostInfoBalance(this.extend({currency:"ALL"},e)),i={info:t},s=t.data,r=Object.keys(this.currencies);for(let a=0;a<r.length;a++){let e=r[a],t=this.account(),o=e.toLowerCase();t.total=this.safeFloat(s,"total_"+o),t.used=this.safeFloat(s,"in_use_"+o),t.free=this.safeFloat(s,"available_"+o),i[e]=t}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={currency:this.market(e).base};void 0!==t&&(s.count=t);let r=(await this.publicGetOrderbookCurrency(this.extend(s,i))).data,a=parseInt(r.timestamp);return this.parseOrderBook(r,a,"bids","asks","price","quantity")}parseTicker(e,t){let i=parseInt(e.date),s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"opening_price"),a=this.safeFloat(e,"closing_price"),o=a-r,n=this.safeFloat(e,"average_price"),d=this.safeFloat(e,"volume_1day");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"max_price"),low:this.safeFloat(e,"min_price"),bid:this.safeFloat(e,"buy_price"),bidVolume:void 0,ask:this.safeFloat(e,"sell_price"),askVolume:void 0,vwap:n,open:r,close:a,last:a,previousClose:void 0,change:o,percentage:o/r*100,average:this.sum(r,a)/2,baseVolume:d,quoteVolume:d*n,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickerAll(t),s={},r=i.data.date,a=this.omit(i.data,"date"),o=Object.keys(a);for(let n=0;n<o.length;n++){let e=o[n],t=e,i=void 0;e in this.markets_by_id&&(t=(i=this.markets_by_id[e]).symbol);let d=a[e];d.date=r,s[t]=this.parseTicker(d,i)}return s}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTickerCurrency(this.extend({currency:i.base},t));return this.parseTicker(s.data,i)}parseTrade(e,t){let[i,s]=e.transaction_date.split(" ");s.length<8&&(s="0"+s);let r=this.parse8601(i+" "+s);r-=324e5;let a="ask"===e.type?"sell":"buy";return{id:void 0,info:e,timestamp:r,datetime:this.iso8601(r),symbol:t.symbol,order:void 0,type:void 0,side:a,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"units_traded")}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTransactionHistoryCurrency(this.extend({currency:r.base,count:100},s));return this.parseTrades(a.data,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n=void 0,d="privatePostTrade";"limit"===t?(n={order_currency:o.id,Payment_currency:o.quote,units:s,price:r,type:"buy"===i?"bid":"ask"},d+="Place"):"market"===t&&(n={currency:o.id,units:s},d+="Market"+this.capitalize(i));let c=await this[d](this.extend(n,a)),h=void 0;return"order_id"in c&&c.order_id&&(h=c.order_id.toString()),{info:c,id:h}}async cancelOrder(e,t,i={}){if(!("side"in i))throw new r(this.id+" cancelOrder requires a side parameter (sell or buy) and a currency parameter");if(!("currency"in i))throw new r(this.id+" cancelOrder requires a currency parameter");let s="buy"===i.side?"bid":"ask";return await this.privatePostTradeCancel({order_id:e,type:s,currency:i.currency})}async withdraw(e,t,i,s,a={}){this.checkAddress(i);let o={units:t,address:i,currency:e};if("XRP"===e||"XMR"===e){if(!("destination"in a))throw new r(this.id+" "+e+" withdraw requires an extra destination param")}return{info:await this.privatePostTradeBtcWithdrawal(this.extend(o,a)),id:void 0}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o="/"+this.implodeParams(e,s),n=this.urls.api[t]+o,d=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(d).length&&(n+="?"+this.urlencode(d));else{this.checkRequiredCredentials(),a=this.urlencode(this.extend({endpoint:o},d));let e=this.nonce().toString(),t=o+"\0"+a+"\0"+e,i=this.hmac(this.encode(t),this.encode(this.secret),"sha512"),s=this.decode(this.stringToBase64(this.encode(i)));r={Accept:"application/json","Content-Type":"application/x-www-form-urlencoded","Api-Key":this.apiKey,"Api-Sign":s.toString(),"Api-Nonce":e}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if("string"==typeof o&&!(o.length<2||"{"!==o[0]&&"["!==o[0])){let e=JSON.parse(o);if("status"in e){let t=this.safeString(e,"status");if(void 0!==t){if("0000"===t)return;const i=this.id+" "+this.json(e),s=this.exceptions;throw t in s?new s[t](i):new r(i)}}}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("status"in n){if("0000"===n.status)return n;throw new r(this.id+" "+this.json(n))}return n}}},863:function(e,t,i){"use strict";const s=i(799);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bitkk",name:"bitkk",comment:"a Chinese ZB clone",urls:{api:{public:"http://api.bitkk.com/data",private:"https://trade.bitkk.com/api"},www:"https://www.bitkk.com",doc:"https://www.bitkk.com/i/developer",fees:"https://www.bitkk.com/i/rate"}})}}},864:function(e,t,i){"use strict";const s=i(788),{NotSupported:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bitlish",name:"Bitlish",countries:["GB","EU","RU"],rateLimit:1500,version:"v1",has:{CORS:!1,fetchTickers:!0,fetchOHLCV:!0,withdraw:!0},timeframes:{"1h":3600},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766275-dcfc6c30-5ed3-11e7-839d-00a846385d0b.jpg",api:"https://bitlish.com/api",www:"https://bitlish.com",doc:"https://bitlish.com/api"},requiredCredentials:{apiKey:!0,secret:!1},fees:{trading:{tierBased:!1,percentage:!0,taker:.003,maker:0},funding:{tierBased:!1,percentage:!1,withdraw:{BTC:.001,LTC:.001,DOGE:.001,ETH:.001,XMR:0,ZEC:.001,DASH:1e-4,EUR:50},deposit:{BTC:0,LTC:0,DOGE:0,ETH:0,XMR:0,ZEC:0,DASH:0,EUR:0}}},api:{public:{get:["instruments","ohlcv","pairs","tickers","trades_depth","trades_history"],post:["instruments","ohlcv","pairs","tickers","trades_depth","trades_history"]},private:{post:["accounts_operations","balance","cancel_trade","cancel_trades_by_ids","cancel_all_trades","create_bcode","create_template_wallet","create_trade","deposit","list_accounts_operations_from_ts","list_active_trades","list_bcodes","list_my_matches_from_ts","list_my_trades","list_my_trads_from_ts","list_payment_methods","list_payments","redeem_code","resign","signin","signout","trade_details","trade_options","withdraw","withdraw_by_id"]}},commonCurrencies:{DSH:"DASH",XDG:"DOGE"}})}async fetchMarkets(){let e=await this.publicGetPairs(),t=[],i=Object.keys(e);for(let s=0;s<i.length;s++){let r=e[i[s]],a=r.id,o=r.name,[n,d]=o.split("/");o=(n=this.commonCurrencyCode(n))+"/"+(d=this.commonCurrencyCode(d)),t.push({id:a,symbol:o,base:n,quote:d,info:r})}return t}parseTicker(e,t){let i=this.milliseconds(),s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"last");return{timestamp:i,datetime:this.iso8601(i),symbol:s,high:this.safeFloat(e,"max"),low:this.safeFloat(e,"min"),bid:this.safeFloat(e,"bid"),bidVolume:void 0,ask:this.safeFloat(e,"ask"),askVolume:void 0,vwap:void 0,open:this.safeFloat(e,"first"),close:r,last:r,previousClose:void 0,change:void 0,percentage:100*this.safeFloat(e,"prc"),average:void 0,baseVolume:this.safeFloat(e,"sum"),quoteVolume:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers(t),s=Object.keys(i),r={};for(let a=0;a<s.length;a++){let e=s[a],t=this.markets_by_id[e],o=t.symbol,n=i[e];r[o]=this.parseTicker(n,t)}return r}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=(await this.publicGetTickers(t))[i.id];return this.parseTicker(s,i)}async fetchOHLCV(e,t="1h",i,s,r={}){await this.loadMarkets();let a=this.seconds()-2592e3;void 0!==i&&(a=parseInt(i/1e3));let o=[a.toString(),void 0];return await this.publicPostOhlcv(this.extend({time_range:o},r))}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetTradesDepth(this.extend({pair_id:this.marketId(e)},i)),r=void 0,a=this.safeInteger(s,"last");return a&&(r=parseInt(a/1e3)),this.parseOrderBook(s,r,"bid","ask","price","volume")}parseTrade(e,t){let i="bid"===e.dir?"buy":"sell",s=void 0;t&&(s=t.symbol);let r=parseInt(e.created/1e3);return{id:void 0,info:e,timestamp:r,datetime:this.iso8601(r),symbol:s,order:void 0,type:void 0,side:i,price:e.price,amount:e.amount}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTradesHistory(this.extend({pair_id:r.id},s));return this.parseTrades(a.list,r,t,i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostBalance(),i={info:t},s=Object.keys(t),r={};for(let a=0;a<s.length;a++){let e=s[a],i=t[e];"DSH"===(e=e.toUpperCase())&&(e="DASH"),"XDG"===e&&(e="DOGE"),r[e]=i}s=Object.keys(this.currencies);for(let a=0;a<s.length;a++){let e=s[a],t=this.account();e in r&&(t.free=parseFloat(r[e].funds),t.used=parseFloat(r[e].holded),t.total=this.sum(t.free,t.used)),i[e]=t}return this.parseBalance(i)}signIn(){return this.privatePostSignin({login:this.login,passwd:this.password})}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o={pair_id:this.marketId(e),dir:"buy"===i?"bid":"ask",amount:s};"limit"===t&&(o.price=r);let n=await this.privatePostCreateTrade(this.extend(o,a));return{info:n,id:n.id}}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privatePostCancelTrade({id:e})}async withdraw(e,t,i,s,a={}){if(this.checkAddress(i),await this.loadMarkets(),"BTC"!==e)throw new r(this.id+" currently supports BTC withdrawals only, until they document other currencies...");let o=await this.privatePostWithdraw(this.extend({currency:e.toLowerCase(),amount:parseFloat(t),account:i,payment_method:"bitcoin"},a));return{info:o,id:o.message_id}}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.version+"/"+e;return"public"===t?"GET"===i?Object.keys(s).length&&(o+="?"+this.urlencode(s)):(a=this.json(s),r={"Content-Type":"application/json"}):(this.checkRequiredCredentials(),a=this.json(this.extend({token:this.apiKey},s)),r={"Content-Type":"application/json"}),{url:o,method:i,body:a,headers:r}}}},865:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bitmarket",name:"BitMarket",countries:["PL","EU"],rateLimit:1500,has:{CORS:!1,fetchOHLCV:!0,withdraw:!0},timeframes:{"90m":"90m","6h":"6h","1d":"1d","1w":"7d","1M":"1m","3M":"3m","6M":"6m","1y":"1y"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27767256-a8555200-5ef9-11e7-96fd-469a65e2b0bd.jpg",api:{public:"https://www.bitmarket.net",private:"https://www.bitmarket.pl/api2/"},www:["https://www.bitmarket.pl","https://www.bitmarket.net"],doc:["https://www.bitmarket.net/docs.php?file=api_public.html","https://www.bitmarket.net/docs.php?file=api_private.html","https://github.com/bitmarket-net/api"]},api:{public:{get:["json/{market}/ticker","json/{market}/orderbook","json/{market}/trades","json/ctransfer","graphs/{market}/90m","graphs/{market}/6h","graphs/{market}/1d","graphs/{market}/7d","graphs/{market}/1m","graphs/{market}/3m","graphs/{market}/6m","graphs/{market}/1y"]},private:{post:["info","trade","cancel","orders","trades","history","withdrawals","tradingdesk","tradingdeskStatus","tradingdeskConfirm","cryptotradingdesk","cryptotradingdeskStatus","cryptotradingdeskConfirm","withdraw","withdrawFiat","withdrawPLNPP","withdrawFiatFast","deposit","transfer","transfers","marginList","marginOpen","marginClose","marginCancel","marginModify","marginBalanceAdd","marginBalanceRemove","swapList","swapOpen","swapClose"]}},markets:{"BCH/PLN":{id:"BCCPLN",symbol:"BCH/PLN",base:"BCH",quote:"PLN"},"BTG/PLN":{id:"BTGPLN",symbol:"BTG/PLN",base:"BTG",quote:"PLN"},"BTC/PLN":{id:"BTCPLN",symbol:"BTC/PLN",base:"BTC",quote:"PLN"},"BTC/EUR":{id:"BTCEUR",symbol:"BTC/EUR",base:"BTC",quote:"EUR"},"LTC/PLN":{id:"LTCPLN",symbol:"LTC/PLN",base:"LTC",quote:"PLN"},"LTC/BTC":{id:"LTCBTC",symbol:"LTC/BTC",base:"LTC",quote:"BTC"},"LiteMineX/BTC":{id:"LiteMineXBTC",symbol:"LiteMineX/BTC",base:"LiteMineX",quote:"BTC"}},fees:{trading:{tierBased:!0,percentage:!0,taker:.45/100,maker:.0015,tiers:{taker:[[0,.45/100],[99.99,.0044],[299.99,.0043],[499.99,.0042],[999.99,.41/100],[1999.99,.004],[2999.99,.39/100],[4999.99,.0038],[9999.99,.0037],[19999.99,.0036],[29999.99,.35/100],[49999.99,.34/100],[99999.99,.0033],[199999.99,.0032],[299999.99,.0031],[499999.99,0]],maker:[[0,.0015],[99.99,.14/100],[299.99,.0013],[499.99,.0012],[999.99,.0011],[1999.99,.001],[2999.99,.9/100],[4999.99,.008],[9999.99,.7/100],[19999.99,.006],[29999.99,.005],[49999.99,.004],[99999.99,.003],[199999.99,.002],[299999.99,.001],[499999.99,0]]}},funding:{tierBased:!1,percentage:!1,withdraw:{BTC:8e-4,LTC:.005,BCH:8e-4,BTG:8e-4,DOGE:1,EUR:2,PLN:2},deposit:{BTC:0,LTC:0,BCH:0,BTG:0,DOGE:25,EUR:2,PLN:0}}}})}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privatePostInfo()).data,i=t.balances,s={info:t},r=Object.keys(this.currencies);for(let a=0;a<r.length;a++){let e=r[a],t=this.account();e in i.available&&(t.free=i.available[e]),e in i.blocked&&(t.used=i.blocked[e]),t.total=this.sum(t.free,t.used),s[e]=t}return this.parseBalance(s)}async fetchOrderBook(e,t,i={}){let s=await this.publicGetJsonMarketOrderbook(this.extend({market:this.marketId(e)},i));return this.parseOrderBook(s)}async fetchTicker(e,t={}){let i=await this.publicGetJsonMarketTicker(this.extend({market:this.marketId(e)},t)),s=this.milliseconds(),r=this.safeFloat(i,"vwap"),a=this.safeFloat(i,"volume"),o=a*r,n=this.safeFloat(i,"last");return{symbol:e,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(i,"high"),low:this.safeFloat(i,"low"),bid:this.safeFloat(i,"bid"),bidVolume:void 0,ask:this.safeFloat(i,"ask"),askVolume:void 0,vwap:r,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:o,info:i}}parseTrade(e,t){let i="bid"===e.type?"buy":"sell",s=1e3*e.date;return{id:e.tid.toString(),info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,order:void 0,type:void 0,side:i,price:e.price,amount:e.amount}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetJsonMarketTrades(this.extend({market:r.id},s));return this.parseTrades(a,r,t,i)}parseOHLCV(e,t,i="90m",s,r){return[1e3*e.time,parseFloat(e.open),parseFloat(e.high),parseFloat(e.low),parseFloat(e.close),parseFloat(e.vol)]}async fetchOHLCV(e,t="90m",i,s,r={}){await this.loadMarkets();let a="publicGetGraphsMarket"+this.timeframes[t],o=this.market(e),n=await this[a](this.extend({market:o.id},r));return this.parseOHLCVs(n,o,t,i,s)}async createOrder(e,t,i,s,r,a={}){let o=await this.privatePostTrade(this.extend({market:this.marketId(e),type:i,amount:s,rate:r},a)),n={info:o};return"id"in o.order&&(n.id=o.id),n}async cancelOrder(e,t,i={}){return await this.privatePostCancel({id:e})}isFiat(e){return"EUR"===e||"PLN"===e}async withdraw(e,t,i,s,a={}){this.checkAddress(i),await this.loadMarkets();let o=void 0,n={currency:e,quantity:t};if(this.isFiat(e)){if(o="privatePostWithdrawFiat",!("account"in a))throw new r(this.id+" requires account parameter to withdraw fiat currency");if(n.account=a.account,"account2"in a)n.account2=a.account2;else if("EUR"===e)throw new r(this.id+" requires account2 parameter to withdraw EUR");if("withdrawal_note"in a)n.withdrawal_note=a.withdrawal_note;else if("PLN"===e)throw new r(this.id+" requires withdrawal_note parameter to withdraw PLN")}else o="privatePostWithdraw",n.address=i;let d=await this[o](this.extend(n,a));return{info:d,id:d}}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t];if("public"===t)o+="/"+this.implodeParams(e+".json",s);else{this.checkRequiredCredentials();let t=this.nonce(),i=this.extend({tonce:t,method:e},s);a=this.urlencode(i),r={"API-Key":this.apiKey,"API-Hash":this.hmac(this.encode(a),this.encode(this.secret),"sha512")}}return{url:o,method:i,body:a,headers:r}}}},866:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,DDoSProtection:a,OrderNotFound:o,AuthenticationError:n,PermissionDenied:d}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bitmex",name:"BitMEX",countries:["SC"],version:"v1",userAgent:void 0,rateLimit:2e3,has:{CORS:!1,fetchOHLCV:!0,withdraw:!0,editOrder:!0,fetchOrder:!0,fetchOrders:!0,fetchOpenOrders:!0,fetchClosedOrders:!0},timeframes:{"1m":"1m","5m":"5m","1h":"1h","1d":"1d"},urls:{test:"https://testnet.bitmex.com",logo:"https://user-images.githubusercontent.com/1294454/27766319-f653c6e6-5ed4-11e7-933d-f0bc3699ae8f.jpg",api:"https://www.bitmex.com",www:"https://www.bitmex.com",doc:["https://www.bitmex.com/app/apiOverview","https://github.com/BitMEX/api-connectors/tree/master/official-http"],fees:"https://www.bitmex.com/app/fees",referral:"https://www.bitmex.com/register/rm3C16"},api:{public:{get:["announcement","announcement/urgent","funding","instrument","instrument/active","instrument/activeAndIndices","instrument/activeIntervals","instrument/compositeIndex","instrument/indices","insurance","leaderboard","liquidation","orderBook","orderBook/L2","quote","quote/bucketed","schema","schema/websocketHelp","settlement","stats","stats/history","trade","trade/bucketed"]},private:{get:["apiKey","chat","chat/channels","chat/connected","execution","execution/tradeHistory","notification","order","position","user","user/affiliateStatus","user/checkReferralCode","user/commission","user/depositAddress","user/margin","user/minWithdrawalFee","user/wallet","user/walletHistory","user/walletSummary"],post:["apiKey","apiKey/disable","apiKey/enable","chat","order","order/bulk","order/cancelAllAfter","order/closePosition","position/isolate","position/leverage","position/riskLimit","position/transferMargin","user/cancelWithdrawal","user/confirmEmail","user/confirmEnableTFA","user/confirmWithdrawal","user/disableTFA","user/logout","user/logoutAll","user/preferences","user/requestEnableTFA","user/requestWithdrawal"],put:["order","order/bulk","user"],delete:["apiKey","order","order/all"]}},exceptions:{"Invalid API Key.":n,"Access Denied":d},options:{fetchTickerQuotes:!1}})}async fetchMarkets(){let e=await this.publicGetInstrumentActiveAndIndices(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r="Unlisted"!==s.state,a=s.symbol,o=s.underlying,n=s.quoteCurrency,d=void 0,c=!1,h=!1,l=o+n;o=this.commonCurrencyCode(o),n=this.commonCurrencyCode(n);let u=a===l,p=a;u?(d="swap",p=o+"/"+n):a.indexOf("B_")>=0?(h=!0,d="prediction"):(c=!0,d="future");let m={amount:void 0,price:void 0};s.lotSize&&(m.amount=this.precisionFromString(this.truncate_to_string(s.lotSize,16))),s.tickSize&&(m.price=this.precisionFromString(this.truncate_to_string(s.tickSize,16))),t.push({id:a,symbol:p,base:o,quote:n,active:r,precision:m,limits:{amount:{min:s.lotSize,max:s.maxOrderQty},price:{min:s.tickSize,max:s.maxPrice}},taker:s.takerFee,maker:s.makerFee,type:d,spot:!1,swap:u,future:c,prediction:h,info:s})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetUserMargin({currency:"all"}),i={info:t};for(let s=0;s<t.length;s++){let e=t[s],r=e.currency.toUpperCase();r=this.commonCurrencyCode(r);let a={free:e.availableMargin,used:0,total:e.marginBalance};"BTC"===r&&(a.free=1e-8*a.free,a.total=1e-8*a.total),a.used=a.total-a.free,i[r]=a}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={symbol:this.market(e).id};void 0!==t&&(s.depth=t);let r=await this.publicGetOrderBookL2(this.extend(s,i)),a={bids:[],asks:[],timestamp:void 0,datetime:void 0,nonce:void 0};for(let o=0;o<r.length;o++){let e=r[o],t="Sell"===e.side?"asks":"bids",i=e.size,s=e.price;a[t].push([s,i])}return a.bids=this.sortBy(a.bids,0,!0),a.asks=this.sortBy(a.asks,0),a}async fetchOrder(e,t,i={}){let s={filter:{orderID:e}},r=await this.fetchOrders(t,void 0,void 0,this.deepExtend(s,i));if(1===r.length)return r[0];throw new o(this.id+": The order "+e+" not found.")}async fetchOrders(e,t,i,s={}){await this.loadMarkets();let r=void 0,a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==t&&(a.startTime=this.iso8601(t)),void 0!==i&&(a.count=i),"filter"in(a=this.deepExtend(a,s))&&(a.filter=this.json(a.filter));let o=await this.privateGetOrder(a);return this.parseOrders(o,r,t,i)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.deepExtend({filter:{open:!0}},s))}async fetchClosedOrders(e,t,i,s={}){let r=await this.fetchOrders(e,t,i,s);return this.filterBy(r,"status","closed")}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e);if(!i.active)throw new r(this.id+": symbol "+e+" is delisted");let s=this.extend({symbol:i.id,binSize:"1d",partial:!0,count:1,reverse:!0},t),a=void 0,o=void 0;if(this.options.fetchTickerQuotes){let e=await this.publicGetQuoteBucketed(s),t=e[e.length-1];a=this.safeFloat(t,"bidPrice"),o=this.safeFloat(t,"askPrice")}let n=(await this.publicGetTradeBucketed(s))[0],d=this.milliseconds(),c=this.safeFloat(n,"open"),h=this.safeFloat(n,"close"),l=h-c;return{symbol:e,timestamp:d,datetime:this.iso8601(d),high:this.safeFloat(n,"high"),low:this.safeFloat(n,"low"),bid:a,bidVolume:void 0,ask:o,askVolume:void 0,vwap:this.safeFloat(n,"vwap"),open:c,close:h,last:h,previousClose:void 0,change:l,percentage:l/c*100,average:this.sum(c,h)/2,baseVolume:this.safeFloat(n,"homeNotional"),quoteVolume:this.safeFloat(n,"foreignNotional"),info:n}}parseOHLCV(e,t,i="1m",s,r){return[this.parse8601(e.timestamp)-1e3*this.parseTimeframe(i),e.open,e.high,e.low,e.close,e.volume]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),o={symbol:a.id,binSize:this.timeframes[t],partial:!0};if(void 0!==s&&(o.count=s),void 0!==i){let e=this.ymdhms(i).slice(0,16);o.startTime=e}let n=await this.publicGetTradeBucketed(this.extend(o,r));return this.parseOHLCVs(n,a,t,i,s)}parseTrade(e,t){let i=this.parse8601(e.timestamp),s=void 0;return void 0===t&&"symbol"in e&&(t=this.markets_by_id[e.symbol]),t&&(s=t.symbol),{id:e.trdMatchID,info:e,timestamp:i,datetime:this.iso8601(i),symbol:s,order:void 0,type:void 0,side:e.side.toLowerCase(),price:e.price,amount:e.size}}parseOrderStatus(e){return this.safeString({new:"open",partiallyfilled:"open",filled:"closed",canceled:"canceled",rejected:"rejected",expired:"expired"},e.toLowerCase())}parseOrder(e,t){let i=this.safeValue(e,"ordStatus");void 0!==i&&(i=this.parseOrderStatus(i));let s=void 0;if(void 0!==t)s=t.symbol;else{let i=e.symbol;i in this.markets_by_id&&(s=(t=this.markets_by_id[i]).symbol)}let r=void 0,a=void 0,o=void 0;"timestamp"in e?r=e.timestamp:"transactTime"in e&&(r=e.transactTime),void 0!==r&&(a=this.parse8601(r),o=this.iso8601(a));let n=this.safeFloat(e,"price"),d=this.safeFloat(e,"orderQty"),c=this.safeFloat(e,"cumQty",0),h=void 0;void 0!==d&&void 0!==c&&(h=Math.max(d-c,0));let l=void 0;return void 0!==n&&void 0!==c&&(l=n*c),{info:e,id:e.orderID.toString(),timestamp:a,datetime:o,lastTradeTimestamp:void 0,symbol:s,type:e.ordType.toLowerCase(),side:e.side.toLowerCase(),price:n,amount:d,cost:l,filled:c,remaining:h,status:i,fee:void 0}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==t&&(a.startTime=this.iso8601(t)),void 0!==i&&(a.count=i);let o=await this.publicGetTrade(this.extend(a,s));return this.parseTrades(o,r)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o={symbol:this.marketId(e),side:this.capitalize(i),orderQty:s,ordType:this.capitalize(t)};void 0!==r&&(o.price=r);let n=await this.privatePostOrder(this.extend(o,a)),d=this.parseOrder(n),c=d.id;return this.orders[c]=d,this.extend({info:n},d)}async editOrder(e,t,i,s,r,a,o={}){await this.loadMarkets();let n={orderID:e};void 0!==r&&(n.orderQty=r),void 0!==a&&(n.price=a);let d=await this.privatePutOrder(this.extend(n,o)),c=this.parseOrder(d);return this.orders[c.id]=c,this.extend({info:d},c)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateDeleteOrder(this.extend({orderID:e},i)),r=s[0],a=this.safeString(r,"error");if(void 0!==a&&a.indexOf("Unable to cancel order due to existing state")>=0)throw new o(this.id+" cancelOrder() failed: "+a);return r=this.parseOrder(r),this.orders[r.id]=r,this.extend({info:s},r)}isFiat(e){return"EUR"===e||"PLN"===e}async withdraw(e,t,i,s,a={}){if(this.checkAddress(i),await this.loadMarkets(),"BTC"!==e)throw new r(this.id+" supoprts BTC withdrawals only, other currencies coming soon...");let o={currency:"XBt",amount:t,address:i},n=await this.privatePostUserRequestWithdrawal(this.extend(o,a));return{info:n,id:n.transactID}}handleErrors(e,t,i,s,o,n){if(429===e)throw new a(this.id+" "+n);if(e>=400&&n&&"{"===n[0]){let e=JSON.parse(n);if("error"in e&&"message"in e.error){let t=this.id+" "+this.json(e),i=this.safeValue(e.error,"message"),s=this.exceptions;if(void 0!==i&&i in s)throw new s[i](t);throw new r(t)}}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o="/api/"+this.version+"/"+e;"PUT"!==i&&Object.keys(s).length&&(o+="?"+this.urlencode(s));let n=this.urls.api+o;if("private"===t){this.checkRequiredCredentials();let e=this.nonce().toString(),t=i+o+e;"POST"!==i&&"PUT"!==i||Object.keys(s).length&&(t+=a=this.json(s)),r={"Content-Type":"application/json","api-nonce":e,"api-key":this.apiKey,"api-signature":this.hmac(this.encode(t),this.encode(this.secret))}}return{url:n,method:i,body:a,headers:r}}}},867:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,InvalidNonce:a,AuthenticationError:o,OrderNotFound:n}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bitso",name:"Bitso",countries:["MX"],rateLimit:2e3,version:"v3",has:{CORS:!0,fetchMyTrades:!0,fetchOpenOrders:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766335-715ce7aa-5ed5-11e7-88a8-173a27bb30fe.jpg",api:"https://api.bitso.com",www:"https://bitso.com",doc:"https://bitso.com/api_info",fees:"https://bitso.com/fees?l=es"},api:{public:{get:["available_books","ticker","order_book","trades"]},private:{get:["account_status","balance","fees","fundings","fundings/{fid}","funding_destination","kyc_documents","ledger","ledger/trades","ledger/fees","ledger/fundings","ledger/withdrawals","mx_bank_codes","open_orders","order_trades/{oid}","orders/{oid}","user_trades","user_trades/{tid}","withdrawals/","withdrawals/{wid}"],post:["bitcoin_withdrawal","debit_card_withdrawal","ether_withdrawal","ripple_withdrawal","bcash_withdrawal","litecoin_withdrawal","orders","phone_number","phone_verification","phone_withdrawal","spei_withdrawal","ripple_withdrawal","bcash_withdrawal","litecoin_withdrawal"],delete:["orders/{oid}","orders/all"]}},exceptions:{"0201":o,104:a}})}async fetchMarkets(){let e=await this.publicGetAvailableBooks(),t=[];for(let i=0;i<e.payload.length;i++){let s=e.payload[i],r=s.book,a=r.toUpperCase().replace("_","/"),[o,n]=a.split("/"),d={amount:{min:this.safeFloat(s,"minimum_amount"),max:this.safeFloat(s,"maximum_amount")},price:{min:this.safeFloat(s,"minimum_price"),max:this.safeFloat(s,"maximum_price")},cost:{min:this.safeFloat(s,"minimum_value"),max:this.safeFloat(s,"maximum_value")}},c={amount:this.precisionFromString(s.minimum_amount),price:this.precisionFromString(s.minimum_price)},h=d.amount.min;t.push({id:r,symbol:a,base:o,quote:n,info:s,lot:h,limits:d,precision:c})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetBalance(),i=t.payload.balances,s={info:t};for(let r=0;r<i.length;r++){let e=i[r],t=e.currency.toUpperCase(),a={free:parseFloat(e.available),used:parseFloat(e.locked),total:parseFloat(e.total)};s[t]=a}return this.parseBalance(s)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=(await this.publicGetOrderBook(this.extend({book:this.marketId(e)},i))).payload,r=this.parse8601(s.updated_at);return this.parseOrderBook(s,r,"bids","asks","price","amount")}async fetchTicker(e,t={}){await this.loadMarkets();let i=(await this.publicGetTicker(this.extend({book:this.marketId(e)},t))).payload,s=this.parse8601(i.created_at),r=this.safeFloat(i,"vwap"),a=this.safeFloat(i,"volume"),o=a*r,n=this.safeFloat(i,"last");return{symbol:e,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(i,"high"),low:this.safeFloat(i,"low"),bid:this.safeFloat(i,"bid"),bidVolume:void 0,ask:this.safeFloat(i,"ask"),askVolume:void 0,vwap:r,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:o,info:i}}parseTrade(e,t){let i=this.parse8601(e.created_at),s=void 0;if(void 0===t){let i=this.safeString(e,"book");i in this.markets_by_id&&(t=this.markets_by_id[i])}void 0!==t&&(s=t.symbol);let r=this.safeString(e,"side");void 0===r&&(r=this.safeString(e,"maker_side"));let a=this.safeFloat(e,"amount");void 0===a&&(a=this.safeFloat(e,"major")),void 0!==a&&(a=Math.abs(a));let o=void 0,n=this.safeFloat(e,"fees_amount");if(void 0!==n){let t=this.safeString(e,"fees_currency");void 0!==t&&t in this.currencies_by_id&&(t=this.currencies_by_id[t].code),o={cost:n,currency:t}}let d=this.safeFloat(e,"minor");void 0!==d&&(d=Math.abs(d));let c=this.safeFloat(e,"price"),h=this.safeString(e,"oid");return{id:e.tid.toString(),info:e,timestamp:i,datetime:this.iso8601(i),symbol:s,order:h,type:void 0,side:r,price:c,amount:a,cost:d,fee:o}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTrades(this.extend({book:r.id},s));return this.parseTrades(a.payload,r,t,i)}async fetchMyTrades(e,t,i=25,s={}){await this.loadMarkets();let a=this.market(e),o="marker"in s;if(void 0!==t&&!o)throw r(this.id+" fetchMyTrades does not support fetching trades starting from a timestamp with the `since` argument, use the `marker` extra param to filter starting from an integer trade id");o&&(s=this.extend(s,{marker:parseInt(s.marker)}));let n={book:a.id,limit:i},d=await this.privateGetUserTrades(this.extend(n,s));return this.parseTrades(d.payload,a,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o={book:this.marketId(e),side:i,type:t,major:this.amountToPrecision(e,s)};"limit"===t&&(o.price=this.priceToPrecision(e,r));let n=await this.privatePostOrders(this.extend(o,a));return{info:n,id:n.payload.oid}}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privateDeleteOrdersOid({oid:e})}parseOrderStatus(e){let t={"partial-fill":"open",completed:"closed"};return e in t?t[e]:e}parseOrder(e,t){let i=e.side,s=this.parseOrderStatus(e.status),r=void 0;if(void 0===t){let i=e.book;i in this.markets_by_id&&(t=this.markets_by_id[i])}t&&(r=t.symbol);let a=e.type,o=this.parse8601(e.created_at),n=this.safeFloat(e,"original_amount"),d=this.safeFloat(e,"unfilled_amount"),c=n-d;return{info:e,id:e.oid,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:void 0,symbol:r,type:a,side:i,price:this.safeFloat(e,"price"),amount:n,cost:void 0,remaining:d,filled:c,status:s,fee:void 0}}async fetchOpenOrders(e,t,i=25,s={}){await this.loadMarkets();let a=this.market(e),o="marker"in s;if(void 0!==t&&!o)throw r(this.id+" fetchOpenOrders does not support fetching orders starting from a timestamp with the `since` argument, use the `marker` extra param to filter starting from an integer trade id");o&&(s=this.extend(s,{marker:parseInt(s.marker)}));let n={book:a.id,limit:i},d=await this.privateGetOpenOrders(this.extend(n,s));return this.parseOrders(d.payload,a,t,i)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t),r=await this.privateGetOrdersOid({oid:e}),a=r.payload.length;if(!Array.isArray(r.payload)||1!==a)throw new n(this.id+": The order "+e+" not found.");return this.parseOrder(r.payload[0],s)}async fetchOrderTrades(e,t,i={}){await this.loadMarkets();let s=this.market(t),r=await this.privateGetOrderTradesOid({oid:e});return this.parseTrades(r.payload,s)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i={fund_currency:this.currency(e).id},s=await this.privateGetFundingDestination(this.extend(i,t)),r=this.safeString(s.payload,"account_identifier"),a=void 0;if("XRP"===e){let e=r.split("?dt=");r=e[0],a=e[1]}return this.checkAddress(r),{currency:e,address:r,tag:a,info:s}}async withdraw(e,t,i,s,a={}){this.checkAddress(i),await this.loadMarkets();let o={BTC:"Bitcoin",ETH:"Ether",XRP:"Ripple",BCH:"Bcash",LTC:"Litecoin"},n=e in o?o[e]:void 0;if(void 0===n)throw new r(this.id+" not valid withdraw coin: "+e);let d={amount:t,address:i,destination_tag:s},c="privatePost"+n+"Withdrawal",h=await this[c](this.extend(d,a));return{info:h,id:this.safeString(h.payload,"wid")}}sign(e,t="public",i="GET",s={},r,a){let o="/"+this.version+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));"GET"===i&&Object.keys(n).length&&(o+="?"+this.urlencode(n));let d=this.urls.api+o;if("private"===t){this.checkRequiredCredentials();let e=this.nonce().toString(),t=[e,i,o].join("");"GET"!==i&&Object.keys(n).length&&(t+=a=this.json(n));let s=this.hmac(this.encode(t),this.encode(this.secret));r={Authorization:"Bitso "+(this.apiKey+":"+e+":"+s),"Content-Type":"application/json"}}return{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if("string"==typeof o&&!(o.length<2||"{"!==o[0]&&"["!==o[0])){let e=JSON.parse(o);if("success"in e){let t=this.safeValue(e,"success",!1);if("string"==typeof t&&(t="true"===t||"1"===t),!t){const t=this.id+" "+this.json(e),i=this.safeValue(e,"error");if(void 0===i)throw new r(t);const s=this.safeString(i,"code"),a=this.exceptions;throw s in a?new a[s](t):new r(t)}}}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("success"in n&&n.success)return n;throw new r(this.id+" "+this.json(n))}}},868:function(e,t,i){"use strict";const s=i(788),{AuthenticationError:r,ExchangeError:a,NotSupported:o,PermissionDenied:n}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bitstamp",name:"Bitstamp",countries:["GB"],rateLimit:1e3,version:"v2",has:{CORS:!0,fetchDepositAddress:!0,fetchOrder:!0,fetchOpenOrders:!0,fetchMyTrades:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27786377-8c8ab57e-5fe9-11e7-8ea4-2b05b6bcceec.jpg",api:"https://www.bitstamp.net/api",www:"https://www.bitstamp.net",doc:"https://www.bitstamp.net/api"},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},api:{public:{get:["order_book/{pair}/","ticker_hour/{pair}/","ticker/{pair}/","transactions/{pair}/","trading-pairs-info/"]},private:{post:["balance/","balance/{pair}/","bch_withdrawal/","bch_address/","user_transactions/","user_transactions/{pair}/","open_orders/all/","open_orders/{pair}/","order_status/","cancel_order/","buy/{pair}/","buy/market/{pair}/","sell/{pair}/","sell/market/{pair}/","ltc_withdrawal/","ltc_address/","eth_withdrawal/","eth_address/","xrp_withdrawal/","xrp_address/","transfer-to-main/","transfer-from-main/","withdrawal-requests/","withdrawal/open/","withdrawal/status/","withdrawal/cancel/","liquidation_address/new/","liquidation_address/info/"]},v1:{post:["bitcoin_deposit_address/","unconfirmed_btc/","bitcoin_withdrawal/","ripple_withdrawal/","ripple_address/"]}},fees:{trading:{tierBased:!0,percentage:!0,taker:.0025,maker:.0025,tiers:{taker:[[0,.0025],[2e4,.0024],[1e5,.0022],[4e5,.002],[6e5,.0015],[1e6,.14/100],[2e6,.0013],[4e6,.0012],[2e7,.0011],[20000001,.001]],maker:[[0,.0025],[2e4,.0024],[1e5,.0022],[4e5,.002],[6e5,.0015],[1e6,.14/100],[2e6,.0013],[4e6,.0012],[2e7,.0011],[20000001,.001]]}},funding:{tierBased:!1,percentage:!1,withdraw:{BTC:0,BCH:0,LTC:0,ETH:0,XRP:0,USD:25,EUR:.9},deposit:{BTC:0,BCH:0,LTC:0,ETH:0,XRP:0,USD:25,EUR:0}}},exceptions:{"No permission found":n}})}async fetchMarkets(){let e=await this.publicGetTradingPairsInfo(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.name,[a,o]=r.split("/"),n=a.toLowerCase(),d=o.toLowerCase(),c=n+"_"+d,h=s.url_symbol,l={amount:s.base_decimals,price:s.counter_decimals},u=s.minimum_order.split(" ")[0],p="Enabled"===s.trading,m=Math.pow(10,-l.amount);t.push({id:h,symbol:r,base:a,quote:o,baseId:n,quoteId:d,symbolId:c,info:s,lot:m,active:p,precision:l,limits:{amount:{min:m,max:void 0},price:{min:Math.pow(10,-l.price),max:void 0},cost:{min:parseFloat(u),max:void 0}}})}return t}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetOrderBookPair(this.extend({pair:this.marketId(e)},i)),r=1e3*parseInt(s.timestamp);return this.parseOrderBook(s,r)}async fetchTicker(e,t={}){await this.loadMarkets();let i=await this.publicGetTickerPair(this.extend({pair:this.marketId(e)},t)),s=1e3*parseInt(i.timestamp),r=this.safeFloat(i,"vwap"),a=this.safeFloat(i,"volume"),o=a*r,n=this.safeFloat(i,"last");return{symbol:e,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(i,"high"),low:this.safeFloat(i,"low"),bid:this.safeFloat(i,"bid"),bidVolume:void 0,ask:this.safeFloat(i,"ask"),askVolume:void 0,vwap:r,open:this.safeFloat(i,"open"),close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:o,info:i}}getMarketFromTrade(e){e=this.omit(e,["fee","price","datetime","tid","type","order_id","side"]);let t=Object.keys(e),i=t.length;if(i>2)throw new a(this.id+" getMarketFromTrade too many keys: "+this.json(t)+" in the trade: "+this.json(e));if(2===i){let e=t[0]+t[1];if(e in this.markets_by_id)return this.markets_by_id[e];if((e=t[1]+t[0])in this.markets_by_id)return this.markets_by_id[e]}}getMarketFromTrades(e){let t=this.indexBy(e,"symbol"),i=Object.keys(t);if(1===i.length)return this.markets[i[0]]}parseTrade(e,t){let i=void 0,s=void 0;"date"in e?i=1e3*parseInt(e.date):"datetime"in e&&(i=this.parse8601(e.datetime));let r=this.safeString(e,"side"),a=this.safeString(e,"order_id");void 0===a&&void 0===r&&(r=0===(r=this.safeInteger(e,"type"))?"buy":"sell");let o=this.safeFloat(e,"price"),n=this.safeFloat(e,"amount"),d=this.safeString(e,"tid");if(d=this.safeString(e,"id",d),void 0===t){let i=Object.keys(e);for(let e=0;e<i.length;e++)if(i[e].indexOf("_")>=0){let s=i[e].replace("_","");s in this.markets_by_id&&(t=this.markets_by_id[s])}void 0===t&&(t=this.getMarketFromTrade(e))}let c=this.safeFloat(e,"fee"),h=void 0;void 0!==t&&(o=this.safeFloat(e,t.symbolId,o),n=this.safeFloat(e,t.baseId,n),h=t.quote,s=t.symbol);let l=void 0;return void 0!==o&&void 0!==n&&(l=o*n),{id:d,info:e,timestamp:i,datetime:this.iso8601(i),symbol:s,order:a,type:void 0,side:r,price:o,amount:n,cost:l,fee:{cost:c,currency:h}}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTransactionsPair(this.extend({pair:r.id,time:"hour"},s));return this.parseTrades(a,r,t,i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostBalance(),i={info:t},s=Object.keys(this.currencies);for(let r=0;r<s.length;r++){let e=s[r],a=e.toLowerCase(),o=a+"_balance",n=a+"_available",d=a+"_reserved",c=this.account();n in t&&(c.free=parseFloat(t[n])),d in t&&(c.used=parseFloat(t[d])),o in t&&(c.total=parseFloat(t[o])),i[e]=c}return this.parseBalance(i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o="privatePost"+this.capitalize(i),n={pair:this.marketId(e),amount:this.amountToPrecision(e,s)};"market"===t?o+="Market":n.price=this.priceToPrecision(e,r),o+="Pair";let d=await this[o](this.extend(n,a));return{info:d,id:d.id}}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privatePostCancelOrder({id:e})}parseOrderStatus(e){return"Queue"===e.status||"Open"===e.status?"open":"Finished"===e.status?"closed":e.status}async fetchOrderStatus(e,t,i={}){await this.loadMarkets();let s=await this.privatePostOrderStatus(this.extend({id:e},i));return this.parseOrderStatus(s)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=void 0;void 0!==t&&(s=this.market(t));let r=await this.privatePostOrderStatus(this.extend({id:e},i));return this.parseOrder(r,s)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r={},a="privatePostUserTransactions",o=void 0;void 0!==e&&(o=this.market(e),r.pair=o.id,a+="Pair"),void 0!==i&&(r.limit=i);let n=await this[a](this.extend(r,s));return this.parseTrades(n,o,t,i)}parseOrder(e,t){let i=this.safeString(e,"id"),s=void 0,r=void 0,a=this.safeString(e,"type");void 0!==a&&(a="1"===a?"sell":"buy");let o=this.safeString(e,"datetime");void 0!==o&&(s=this.parse8601(o),r=this.iso8601(s));let n=void 0;if(void 0===t&&"currency_pair"in e){let i=e.currency_pair;i in this.markets_by_id&&(t=this.markets_by_id[i])}let d=this.safeFloat(e,"amount"),c=0,h=[],l=this.safeValue(e,"transactions"),u=void 0,p=void 0;if(void 0!==l&&Array.isArray(l))for(let w=0;w<l.length;w++){let e=this.parseTrade(this.extend({order_id:i,side:a},l[w]),t);c+=e.amount,void 0===u&&(u=0),u+=e.fee.cost,void 0===p&&(p=0),p+=e.cost,h.push(e)}let m=this.safeString(e,"status");"In Queue"===m||"Open"===m?m="open":"Finished"===m&&(m="closed",void 0===d&&(d=c));let f=void 0;void 0!==d&&(f=d-c);let y=this.safeFloat(e,"price");void 0===t&&(t=this.getMarketFromTrades(h));let b=void 0;return void 0!==t&&(n=t.symbol,b=t.quote),void 0===p?void 0!==y&&(p=y*c):void 0===y&&c>0&&(y=p/c),{id:i,datetime:r,timestamp:s,lastTradeTimestamp:void 0,status:m,symbol:n,type:void 0,side:a,price:y,cost:p,amount:d,filled:c,remaining:f,trades:h,fee:{cost:u,currency:b},info:e}}async fetchOpenOrders(e,t,i,s={}){let r=void 0;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a=await this.privatePostOpenOrdersAll();return this.parseOrders(a,r,t,i)}getCurrencyName(e){return"BTC"===e?"bitcoin":e.toLowerCase()}isFiat(e){return"USD"===e||"EUR"===e}async fetchDepositAddress(e,t={}){if(this.isFiat(e))throw new o(this.id+" fiat fetchDepositAddress() for "+e+" is not implemented yet");let i=this.getCurrencyName(e),s="BTC"===e,r=s?"v1":"private";r+="Post"+this.capitalize(i),r+=s?"Deposit":"",r+="Address";let a=await this[r](t),n=s?a:this.safeString(a,"address"),d=s?void 0:this.safeString(a,"destination_tag");return this.checkAddress(n),{currency:e,address:n,tag:d,info:a}}async withdraw(e,t,i,s,r={}){if(this.checkAddress(i),this.isFiat(e))throw new o(this.id+" fiat withdraw() for "+e+" is not implemented yet");let n=this.getCurrencyName(e),d={amount:t,address:i},c="BTC"===e?"v1":"private";c+="Post"+this.capitalize(n)+"Withdrawal";let h=r;if("XRP"===e){if(void 0===s)throw new a(this.id+" withdraw() requires a destination_tag param for "+e);d.destination_tag=s,h=this.omit(r,"destination_tag")}let l=await this[c](this.extend(d,h));return{info:l,id:l.id}}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/";"v1"!==t&&(o+=this.version+"/"),o+=this.implodeParams(e,s);let n=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials();let e=this.nonce().toString(),t=e+this.uid+this.apiKey,i=this.encode(this.hmac(this.encode(t),this.encode(this.secret)));n=this.extend({key:this.apiKey,signature:i.toUpperCase(),nonce:e},n),a=this.urlencode(n),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,o,n){if("string"==typeof n&&!(n.length<2||"{"!==n[0]&&"["!==n[0])){let e=JSON.parse(n),t=this.safeString(e,"error"),i=this.exceptions;if(t in i)throw new i[t](this.id+" "+n);if("error"===this.safeString(e,"status")){let t=this.safeString(e,"code");if(void 0!==t&&"API0005"===t)throw new r(this.id+" invalid signature, use the uid for the main account if you have subaccounts");throw new a(this.id+" "+n)}}}}},869:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,NotSupported:a}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bitstamp1",name:"Bitstamp v1",countries:["GB"],rateLimit:1e3,version:"v1",has:{CORS:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27786377-8c8ab57e-5fe9-11e7-8ea4-2b05b6bcceec.jpg",api:"https://www.bitstamp.net/api",www:"https://www.bitstamp.net",doc:"https://www.bitstamp.net/api"},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},api:{public:{get:["ticker","ticker_hour","order_book","transactions","eur_usd"]},private:{post:["balance","user_transactions","open_orders","order_status","cancel_order","cancel_all_orders","buy","sell","bitcoin_deposit_address","unconfirmed_btc","ripple_withdrawal","ripple_address","withdrawal_requests","bitcoin_withdrawal"]}},markets:{"BTC/USD":{id:"btcusd",symbol:"BTC/USD",base:"BTC",quote:"USD",maker:.0025,taker:.0025},"BTC/EUR":{id:"btceur",symbol:"BTC/EUR",base:"BTC",quote:"EUR",maker:.0025,taker:.0025},"EUR/USD":{id:"eurusd",symbol:"EUR/USD",base:"EUR",quote:"USD",maker:.0025,taker:.0025},"XRP/USD":{id:"xrpusd",symbol:"XRP/USD",base:"XRP",quote:"USD",maker:.0025,taker:.0025},"XRP/EUR":{id:"xrpeur",symbol:"XRP/EUR",base:"XRP",quote:"EUR",maker:.0025,taker:.0025},"XRP/BTC":{id:"xrpbtc",symbol:"XRP/BTC",base:"XRP",quote:"BTC",maker:.0025,taker:.0025},"LTC/USD":{id:"ltcusd",symbol:"LTC/USD",base:"LTC",quote:"USD",maker:.0025,taker:.0025},"LTC/EUR":{id:"ltceur",symbol:"LTC/EUR",base:"LTC",quote:"EUR",maker:.0025,taker:.0025},"LTC/BTC":{id:"ltcbtc",symbol:"LTC/BTC",base:"LTC",quote:"BTC",maker:.0025,taker:.0025},"ETH/USD":{id:"ethusd",symbol:"ETH/USD",base:"ETH",quote:"USD",maker:.0025,taker:.0025},"ETH/EUR":{id:"etheur",symbol:"ETH/EUR",base:"ETH",quote:"EUR",maker:.0025,taker:.0025},"ETH/BTC":{id:"ethbtc",symbol:"ETH/BTC",base:"ETH",quote:"BTC",maker:.0025,taker:.0025}}})}async fetchOrderBook(e,t,i={}){if("BTC/USD"!==e)throw new r(this.id+" "+this.version+" fetchOrderBook doesn't support "+e+", use it for BTC/USD only");let s=await this.publicGetOrderBook(i),a=1e3*parseInt(s.timestamp);return this.parseOrderBook(s,a)}async fetchTicker(e,t={}){if("BTC/USD"!==e)throw new r(this.id+" "+this.version+" fetchTicker doesn't support "+e+", use it for BTC/USD only");let i=await this.publicGetTicker(t),s=1e3*parseInt(i.timestamp),a=this.safeFloat(i,"vwap"),o=this.safeFloat(i,"volume"),n=o*a,d=this.safeFloat(i,"last");return{symbol:e,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(i,"high"),low:this.safeFloat(i,"low"),bid:this.safeFloat(i,"bid"),bidVolume:void 0,ask:this.safeFloat(i,"ask"),askVolume:void 0,vwap:a,open:this.safeFloat(i,"open"),close:d,last:d,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:o,quoteVolume:n,info:i}}parseTrade(e,t){let i=void 0;"date"in e?i=1e3*parseInt(e.date):"datetime"in e&&(i=1e3*parseInt(e.datetime));let s=0===e.type?"buy":"sell",r=void 0;return"order_id"in e&&(r=e.order_id.toString()),"currency_pair"in e&&e.currency_pair in this.markets_by_id&&(t=this.markets_by_id[e.currency_pair]),{id:e.tid.toString(),info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:r,type:void 0,side:s,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"amount")}}async fetchTrades(e,t,i,s={}){if("BTC/USD"!==e)throw new r(this.id+" "+this.version+" fetchTrades doesn't support "+e+", use it for BTC/USD only");let a=this.market(e),o=await this.publicGetTransactions(this.extend({time:"minute"},s));return this.parseTrades(o,a,t,i)}async fetchBalance(e={}){let t=await this.privatePostBalance(),i={info:t},s=Object.keys(this.currencies);for(let r=0;r<s.length;r++){let e=s[r],a=e.toLowerCase(),o=a+"_balance",n=a+"_available",d=a+"_reserved",c=this.account();c.free=this.safeFloat(t,n,0),c.used=this.safeFloat(t,d,0),c.total=this.safeFloat(t,o,0),i[e]=c}return this.parseBalance(i)}async createOrder(e,t,i,s,a,o={}){if("limit"!==t)throw new r(this.id+" "+this.version+" accepts limit orders only");if("BTC/USD"!==e)throw new r(this.id+" v1 supports BTC/USD orders only");let n="privatePost"+this.capitalize(i),d={amount:s,price:a},c=await this[n](this.extend(d,o));return{info:c,id:c.id}}async cancelOrder(e,t,i={}){return await this.privatePostCancelOrder({id:e})}parseOrderStatus(e){return"Queue"===e.status||"Open"===e.status?"open":"Finished"===e.status?"closed":e.status}async fetchOrderStatus(e,t){await this.loadMarkets();let i=await this.privatePostOrderStatus({id:e});return this.parseOrderStatus(i)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r=void 0;void 0!==e&&(r=this.market(e));let a=r?r.id:"all",o=this.extend({id:a},s),n=await this.privatePostOpenOrdersId(o);return this.parseTrades(n,r,t,i)}async fetchOrder(e,t,i={}){throw new a(this.id+" fetchOrder is not implemented yet")}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials();let e=this.nonce().toString(),t=e+this.uid+this.apiKey,i=this.encode(this.hmac(this.encode(t),this.encode(this.secret)));n=this.extend({key:this.apiKey,signature:i.toUpperCase(),nonce:e},n),a=this.urlencode(n),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("status"in n&&"error"===n.status)throw new r(this.id+" "+this.json(n));return n}}},870:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,AuthenticationError:a,InvalidNonce:o,InsufficientFunds:n,OrderNotFound:d,DDoSProtection:c}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bitz",name:"Bit-Z",countries:["HK"],rateLimit:2e3,version:"v1",userAgent:this.userAgents.chrome,has:{fetchTickers:!0,fetchOHLCV:!0,fetchOpenOrders:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","1d":"1d"},urls:{logo:"https://user-images.githubusercontent.com/1294454/35862606-4f554f14-0b5d-11e8-957d-35058c504b6f.jpg",api:"https://api.bit-z.com/api_v1",www:"https://www.bit-z.com",doc:"https://www.bit-z.com/api.html",fees:"https://www.bit-z.com/about/fee"},api:{public:{get:["ticker","tickerall","depth","orders","kline"]},private:{post:["balances","tradeAdd","tradeCancel","openOrders"]}},fees:{trading:{maker:.001,taker:.001},funding:{withdraw:{BTC:"0.5%",DKKT:"0.5%",ETH:.01,USDT:"0.5%",LTC:"0.5%",FCT:"0.5%",LSK:"0.5%",HXI:"0.8%",ZEC:"0.5%",DOGE:"0.5%",MZC:"0.5%",ETC:"0.5%",GXS:"0.5%",XPM:"0.5%",PPC:"0.5%",BLK:"0.5%",XAS:"0.5%",HSR:"0.5%",NULS:5,VOISE:350,PAY:1.5,EOS:.6,YBCT:35,OMG:.3,OTN:.4,BTX:"0.5%",QTUM:"0.5%",DASH:"0.5%",GAME:"0.5%",BCH:"0.5%",GNT:9,SSS:1500,ARK:"0.5%",PART:"0.5%",LEO:"0.5%",DGB:"0.5%",ZSC:130,VIU:350,BTG:"0.5%",ARN:10,VTC:"0.5%",BCD:"0.5%",TRX:200,HWC:"0.5%",UNIT:"0.5%",OXY:"0.5%",MCO:.35,SBTC:"0.5%",BCX:"0.5%",ETF:"0.5%",PYLNT:.4,XRB:"0.5%",ETP:"0.5%"}}},precision:{amount:8,price:8},options:{fetchOHLCVVolume:!0,fetchOHLCVWarning:!0,lastNonceTimestamp:0},commonCurrencies:{XRB:"NANO",PXC:"Pixiecoin"}})}async fetchMarkets(){let e=(await this.publicGetTickerall()).data,t=Object.keys(e),i=[];for(let s=0;s<t.length;s++){let r=t[s],a=e[r],[o,n]=r.split("_"),d=o.toUpperCase(),c=n.toUpperCase(),h=(d=this.commonCurrencyCode(d))+"/"+(c=this.commonCurrencyCode(c));i.push({id:r,symbol:h,base:d,quote:c,baseId:o,quoteId:n,active:!0,info:a})}return i}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostBalances(e),i=t.data,s=this.omit(i,"uid"),r={info:t},a=Object.keys(s);for(let o=0;o<a.length;o++){let e=a[o];if(!(e.indexOf("_")>=0)){let t=e.toUpperCase();e in this.currencies_by_id&&(t=this.currencies_by_id[e].code);let i=this.account(),a=e+"_lock";i.used=this.safeFloat(s,a),i.total=this.safeFloat(s,e),i.free=i.total-i.used,r[t]=i}}return this.parseBalance(r)}parseTicker(e,t){let i=1e3*e.date,s=t.symbol,r=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"vol"),quoteVolume:void 0,info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTicker(this.extend({coin:i.id},t));return this.parseTicker(s.data,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=(await this.publicGetTickerall(t)).data,s={},r=Object.keys(i);for(let a=0;a<r.length;a++){let e=r[a],t=this.markets_by_id[e],o=t.symbol;i[e]&&(s[o]=this.parseTicker(i[e],t))}return s}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=(await this.publicGetDepth(this.extend({coin:this.marketId(e)},i))).data,r=1e3*s.date;return this.parseOrderBook(s,r)}parseTrade(e,t){let i=this.sum(this.milliseconds(),288e5),s=this.iso8601(i);s=(s=s.split("T"))[0]+" "+e.t+"+08";let r=this.parse8601(s),a=this.safeFloat(e,"p"),o=this.safeFloat(e,"n"),n=t.symbol,d=this.priceToPrecision(n,o*a);return{timestamp:r,datetime:this.iso8601(r),symbol:n,id:void 0,order:void 0,type:"limit",side:e.s,price:a,amount:o,cost:d,fee:void 0,info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=(await this.publicGetOrders(this.extend({coin:r.id},s))).data.d;return this.parseTrades(a,r,t,i)}parseOHLCV(e,t,i="1m",s,r){let a=this.options.fetchOHLCVVolume?e[5]:void 0;return[e[0],e[1],e[2],e[3],e[4],a]}async fetchOHLCV(e,t="1m",i,s,a={}){if(this.options.fetchOHLCVWarning)throw new r(this.id+" will return 24h volumes instead of volumes for "+t+" from their API. Set .options['fetchOHLCVWarning'] = false to suppress this warning message. You can set .options['fetchOHLCVVolume'] = false to fetch candles with volume set to undefined.");await this.loadMarkets();let o=this.market(e),n=await this.publicGetKline(this.extend({coin:o.id,type:this.timeframes[t]},a)),d=JSON.parse(n.data.datas.data);return this.parseOHLCVs(d,o,t,i,s)}parseOrder(e,t){let i=void 0;void 0!==t&&(i=t.symbol);let s=this.safeString(e,"side");void 0===s&&(void 0!==(s=this.safeString(e,"type"))&&(s="in"===s?"buy":"sell"),void 0===s&&(s=this.safeString(e,"flag")));let r=this.safeFloat(e,"number"),a=this.safeFloat(e,"numberover"),o=void 0;void 0!==r&&void 0!==a&&(o=r-a);let n=void 0,d=void 0;return"datetime"in e&&(n=this.parse8601(e.datetime),d=this.iso8601(n)),{id:e.id,datetime:d,timestamp:n,lastTradeTimestamp:void 0,status:"open",symbol:i,type:"limit",side:s,price:e.price,cost:void 0,amount:e.number,filled:o,remaining:a,trades:void 0,fee:void 0,info:e}}async createOrder(e,t,i,s,a,o={}){await this.loadMarkets();let n=this.market(e),d="buy"===i?"in":"out";if(!this.password)throw new r(this.id+' createOrder() requires you to set exchange.password = "YOUR_TRADING_PASSWORD" (a trade password is NOT THE SAME as your login password)');let c={coin:n.id,type:d,price:this.priceToPrecision(e,a),number:this.amountToString(e,s),tradepwd:this.password},h=(await this.privatePostTradeAdd(this.extend(c,o))).data.id,l=this.parseOrder({id:h,price:a,number:s,side:i},n);return this.orders[h]=l,l}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privatePostTradeCancel(this.extend({id:e},i))}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.privatePostOpenOrders(this.extend({coin:r.id},s));return this.parseOrders(a.data,r,t,i)}nonce(){let e=this.seconds();return e>this.options.lastNonceTimestamp&&(this.options.lastNonceTimestamp=e,this.options.lastNonce=1e5),this.options.lastNonce=this.sum(this.options.lastNonce,1),this.options.lastNonce}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+e,n=void 0;return"public"===t?(n=this.urlencode(s)).length&&(o+="?"+n):(this.checkRequiredCredentials(),a=this.urlencode(this.keysort(this.extend({api_key:this.apiKey,timestamp:this.seconds(),nonce:this.nonce()},s))),a+="&sign="+this.hash(this.encode(a+this.secret)),r={"Content-type":"application/x-www-form-urlencoded"}),{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},h,l){let u=await this.fetch2(e,t,i,s,h,l),p=this.safeString(u,"code");if("0"!==p){throw new(this.safeValue({103:a,104:a,200:a,202:a,401:a,406:a,203:o,201:d,408:n,106:c},p,r))(this.safeString(u,"msg","Error"))}return u}}},871:function(e,t,i){"use strict";const s=i(788);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bl3p",name:"BL3P",countries:["NL","EU"],rateLimit:1e3,version:"1",comment:"An exchange market by BitonicNL",has:{CORS:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/28501752-60c21b82-6feb-11e7-818b-055ee6d0e754.jpg",api:"https://api.bl3p.eu",www:["https://bl3p.eu","https://bitonic.nl"],doc:["https://github.com/BitonicNL/bl3p-api/tree/master/docs","https://bl3p.eu/api","https://bitonic.nl/en/api"]},api:{public:{get:["{market}/ticker","{market}/orderbook","{market}/trades"]},private:{post:["{market}/money/depth/full","{market}/money/order/add","{market}/money/order/cancel","{market}/money/order/result","{market}/money/orders","{market}/money/orders/history","{market}/money/trades/fetch","GENMKT/money/info","GENMKT/money/deposit_address","GENMKT/money/new_deposit_address","GENMKT/money/wallet/history","GENMKT/money/withdraw"]}},markets:{"BTC/EUR":{id:"BTCEUR",symbol:"BTC/EUR",base:"BTC",quote:"EUR",maker:.0025,taker:.0025},"LTC/EUR":{id:"LTCEUR",symbol:"LTC/EUR",base:"LTC",quote:"EUR",maker:.0025,taker:.0025}}})}async fetchBalance(e={}){let t=(await this.privatePostGENMKTMoneyInfo()).data,i=t.wallets,s={info:t},r=Object.keys(this.currencies);for(let a=0;a<r.length;a++){let e=r[a],t=this.account();e in i&&"available"in i[e]&&(t.free=parseFloat(i[e].available.value)),e in i&&"balance"in i[e]&&(t.total=parseFloat(i[e].balance.value)),t.total&&t.free&&(t.used=t.total-t.free),s[e]=t}return this.parseBalance(s)}parseBidAsk(e,t=0,i=0){return[e[t]/1e5,e[i]/1e8]}async fetchOrderBook(e,t,i={}){let s=this.market(e),r=(await this.publicGetMarketOrderbook(this.extend({market:s.id},i))).data;return this.parseOrderBook(r,void 0,"bids","asks","price_int","amount_int")}async fetchTicker(e,t={}){let i=await this.publicGetMarketTicker(this.extend({market:this.marketId(e)},t)),s=1e3*i.timestamp,r=this.safeFloat(i,"last");return{symbol:e,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(i,"high"),low:this.safeFloat(i,"low"),bid:this.safeFloat(i,"bid"),bidVolume:void 0,ask:this.safeFloat(i,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:parseFloat(i.volume["24h"]),quoteVolume:void 0,info:i}}parseTrade(e,t){return{id:e.trade_id.toString(),timestamp:e.date,datetime:this.iso8601(e.date),symbol:t.symbol,type:void 0,side:void 0,price:e.price_int/1e5,amount:e.amount_int/1e8,info:e}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetMarketTrades(this.extend({market:r.id},s));return this.parseTrades(a.data.trades,r,t,i)}async createOrder(e,t,i,s,r,a={}){let o=this.market(e),n={market:o.id,amount_int:parseInt(1e8*s),fee_currency:o.quote,type:"buy"===i?"bid":"ask"};"limit"===t&&(n.price_int=parseInt(1e5*r));let d=await this.privatePostMarketMoneyOrderAdd(this.extend(n,a));return{info:d,id:d.data.order_id.toString()}}async cancelOrder(e,t,i={}){return await this.privatePostMarketMoneyOrderCancel({order_id:e})}sign(e,t="public",i="GET",s={},r,a){let o=this.implodeParams(e,s),n=this.urls.api+"/"+this.version+"/"+o,d=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(d).length&&(n+="?"+this.urlencode(d));else{this.checkRequiredCredentials();let e=this.nonce();a=this.urlencode(this.extend({nonce:e},d));let t=this.base64ToBinary(this.secret),i=o+"\0"+a,s=this.hmac(this.encode(i),t,"sha512","base64");r={"Content-Type":"application/x-www-form-urlencoded","Rest-Key":this.apiKey,"Rest-Sign":this.decode(s)}}return{url:n,method:i,body:a,headers:r}}}},872:function(e,t,i){"use strict";const s=i(811),{ExchangeError:r,AuthenticationError:a,InvalidOrder:o,InsufficientFunds:n}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bleutrade",name:"Bleutrade",countries:["BR"],rateLimit:1e3,version:"v2",has:{CORS:!0,fetchTickers:!0,fetchOrders:!0,fetchClosedOrders:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/30303000-b602dbe6-976d-11e7-956d-36c5049c01e7.jpg",api:{public:"https://bleutrade.com/api",account:"https://bleutrade.com/api",market:"https://bleutrade.com/api"},www:"https://bleutrade.com",doc:"https://bleutrade.com/help/API",fees:"https://bleutrade.com/help/fees_and_deadlines"},fees:{funding:{withdraw:{ADC:.1,BTA:.1,BITB:.1,BTC:.001,BCC:.001,BTCD:.001,BTG:.001,BLK:.1,CDN:.1,CLAM:.01,DASH:.001,DCR:.05,DGC:.1,DP:.1,DPC:.1,DOGE:10,EFL:.1,ETH:.01,EXP:.1,FJC:.1,BSTY:.001,GB:.1,NLG:.1,HTML:1,LTC:.001,MONA:.01,MOON:1,NMC:.015,NEOS:.1,NVC:.05,OK:.1,PPC:.1,POT:.1,XPM:.001,QTUM:.1,RDD:.1,SLR:.1,START:.1,SLG:.1,TROLL:.1,UNO:.01,VRC:.1,VTC:.1,XVP:.1,WDC:.001,ZET:.1}}},commonCurrencies:{EPC:"Epacoin"},exceptions:{"Insufficient funds!":n,"Invalid Order ID":o,"Invalid apikey or apisecret":a},options:{parseOrderStatus:!0}})}async fetchMarkets(){let e=await this.publicGetMarkets(),t=[];for(let i=0;i<e.result.length;i++){let s=e.result[i],r=s.MarketName,a=s.MarketCurrency,o=s.BaseCurrency,n=this.commonCurrencyCode(a),d=this.commonCurrencyCode(o),c=n+"/"+d,h={amount:8,price:8},l=this.safeString(s,"IsActive");"true"===l?l=!0:"false"===l&&(l=!1),t.push({id:r,symbol:c,base:n,quote:d,baseId:a,quoteId:o,active:l,info:s,lot:Math.pow(10,-h.amount),precision:h,limits:{amount:{min:s.MinTradeSize,max:void 0},price:{min:void 0,max:void 0},cost:{min:0,max:void 0}}})}return t}parseOrderStatus(e){let t={OK:"closed",OPEN:"open",CANCELED:"canceled"};return e in t?t[e]:e}async fetchOrders(e,t,i,s={}){await this.loadMarkets();let r=void 0;void 0!==e?(await this.loadMarkets(),r=this.market(e)):r=void 0;let a=await this.accountGetOrders(this.extend({market:"ALL",orderstatus:"ALL"},s));return this.parseOrders(a.result,r,t,i)}async fetchClosedOrders(e,t,i,s={}){let r=await this.fetchOrders(e,t,i,s);return this.filterBy(r,"status","closed")}getOrderIdField(){return"orderid"}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={market:this.marketId(e),type:"ALL"};void 0!==t&&(s.depth=t);let a=await this.publicGetOrderbook(this.extend(s,i)),o=this.safeValue(a,"result");if(!o)throw new r(this.id+" publicGetOrderbook() returneded no result "+this.json(a));return this.parseOrderBook(o,void 0,"buy","sell","Rate","Quantity")}}},873:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,InvalidOrder:a,AuthenticationError:o}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"braziliex",name:"Braziliex",countries:["BR"],rateLimit:1e3,has:{fetchCurrencies:!0,fetchTickers:!0,fetchOpenOrders:!0,fetchMyTrades:!0,fetchDepositAddress:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/34703593-c4498674-f504-11e7-8d14-ff8e44fb78c1.jpg",api:"https://braziliex.com/api/v1",www:"https://braziliex.com/",doc:"https://braziliex.com/exchange/api.php",fees:"https://braziliex.com/exchange/fees.php"},api:{public:{get:["currencies","ticker","ticker/{market}","orderbook/{market}","tradehistory/{market}"]},private:{post:["balance","complete_balance","open_orders","trade_history","deposit_address","sell","buy","cancel_order"]}},commonCurrencies:{EPC:"Epacoin"},fees:{trading:{maker:.005,taker:.005}},precision:{amount:8,price:8}})}async fetchCurrencies(e={}){let t=await this.publicGetCurrencies(e),i=Object.keys(t),s={};for(let r=0;r<i.length;r++){let e=i[r],a=t[e],o=this.safeInteger(a,"decimal"),n=e.toUpperCase(),d=this.commonCurrencyCode(n),c=1===this.safeInteger(a,"active");0!==this.safeInteger(a,"under_maintenance")&&(c=!1);let h=1===this.safeInteger(a,"is_withdrawal_active"),l=1===this.safeInteger(a,"is_deposit_active");h&&l||(c=!1),s[d]={id:e,code:d,name:a.name,active:c,precision:o,funding:{withdraw:{active:h,fee:a.txWithdrawalFee},deposit:{active:l,fee:a.txDepositFee}},limits:{amount:{min:a.minAmountTrade,max:Math.pow(10,o)},price:{min:Math.pow(10,-o),max:Math.pow(10,o)},cost:{min:void 0,max:void 0},withdraw:{min:a.MinWithdrawal,max:Math.pow(10,o)},deposit:{min:a.minDeposit,max:void 0}},info:a}}return s}async fetchMarkets(){let e=await this.publicGetTicker(),t=Object.keys(e),i=[];for(let s=0;s<t.length;s++){let r=t[s],a=e[r],[o,n]=r.split("_"),d=o.toUpperCase(),c=n.toUpperCase(),h=(d=this.commonCurrencyCode(d))+"/"+(c=this.commonCurrencyCode(c)),l=1===this.safeInteger(a,"active"),u={amount:8,price:8},p=Math.pow(10,-u.amount);i.push({id:r,symbol:h.toUpperCase(),base:d,quote:c,baseId:o,quoteId:n,active:l,lot:p,precision:u,limits:{amount:{min:p,max:Math.pow(10,u.amount)},price:{min:Math.pow(10,-u.price),max:Math.pow(10,u.price)},cost:{min:void 0,max:void 0}},info:a})}return i}parseTicker(e,t){let i=t.symbol,s=e.date;e=e.ticker;let r=this.safeFloat(e,"last");return{symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(e,"highestBid24"),low:this.safeFloat(e,"lowestAsk24"),bid:this.safeFloat(e,"highestBid"),bidVolume:void 0,ask:this.safeFloat(e,"lowestAsk"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:this.safeFloat(e,"percentChange"),percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"baseVolume24"),quoteVolume:this.safeFloat(e,"quoteVolume24"),info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTickerMarket(this.extend({market:i.id},t));return s={date:this.milliseconds(),ticker:s},this.parseTicker(s,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTicker(t),s={},r=this.milliseconds(),a=Object.keys(i);for(let o=0;o<a.length;o++){let e=a[o],t=this.markets_by_id[e],n=t.symbol,d={date:r,ticker:i[e]};s[n]=this.parseTicker(d,t)}return s}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetOrderbookMarket(this.extend({market:this.marketId(e)},i));return this.parseOrderBook(s,void 0,"bids","asks","price","amount")}parseTrade(e,t){let i=void 0;i="date_exec"in e?this.parse8601(e.date_exec):this.parse8601(e.date);let s=this.safeFloat(e,"price"),r=this.safeFloat(e,"amount"),a=t.symbol,o=this.safeFloat(e,"total"),n=this.safeString(e,"order_number");return{timestamp:i,datetime:this.iso8601(i),symbol:a,id:this.safeString(e,"_id"),order:n,type:"limit",side:e.type,price:s,amount:r,cost:o,fee:void 0,info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTradehistoryMarket(this.extend({market:r.id},s));return this.parseTrades(a,r,t,i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostCompleteBalance(e),i={info:t},s=Object.keys(t);for(let r=0;r<s.length;r++){let e=s[r],a=t[e],o=this.commonCurrencyCode(e),n={free:parseFloat(a.available),used:0,total:parseFloat(a.total)};n.used=n.total-n.free,i[o]=n}return this.parseBalance(i)}parseOrder(e,t){let i=void 0;if(void 0===t){let i=this.safeString(e,"market");i&&i in this.markets_by_id&&(t=this.markets_by_id[i])}t&&(i=t.symbol);let s=this.safeValue(e,"timestamp");s||(s=this.parse8601(e.date));let r=this.safeFloat(e,"price"),a=this.safeFloat(e,"total",0),o=this.safeFloat(e,"amount"),n=o*this.safeFloat(e,"progress"),d=this.amountToPrecision(i,o-n),c=e;return"info"in c&&(c=e.info),{id:e.order_number,datetime:this.iso8601(s),timestamp:s,lastTradeTimestamp:void 0,status:"open",symbol:i,type:"limit",side:e.type,price:r,cost:a,amount:o,filled:n,remaining:d,trades:void 0,fee:this.safeValue(e,"fee"),info:c}}async createOrder(e,t,i,s,r,o={}){await this.loadMarkets();let n=this.market(e),d="privatePost"+this.capitalize(i),c=await this[d](this.extend({market:n.id,price:r,amount:s},o));if(1!==this.safeInteger(c,"success"))throw new a(this.id+" "+this.json(c));let h=c.message.split(" / "),l=(h=h.slice(1))[5].split(" "),u=this.parseOrder({timestamp:this.milliseconds(),order_number:c.order_number,type:h[0].toLowerCase(),market:h[0].toLowerCase(),amount:h[2].split(" ")[1],price:h[3].split(" ")[1],total:h[4].split(" ")[1],fee:{cost:parseFloat(l[1]),currency:l[2]},progress:"0.0",info:c},n),p=u.id;return this.orders[p]=u,u}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t);return await this.privatePostCancelOrder(this.extend({order_number:e,market:s.id},i))}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.privatePostOpenOrders(this.extend({market:r.id},s));return this.parseOrders(a.order_open,r,t,i)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.privatePostTradeHistory(this.extend({market:r.id},s));return this.parseTrades(a.trade_history,r,t,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privatePostDepositAddress(this.extend({currency:i.id},t)),r=this.safeString(s,"deposit_address");return this.checkAddress(r),{currency:e,address:r,tag:this.safeString(s,"payment_id"),info:s}}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+t,n=this.omit(s,this.extractParams(e));if("public"===t)o+="/"+this.implodeParams(e,s),Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials(),n=this.extend({command:e,nonce:this.nonce()},n),a=this.urlencode(n);let t=this.hmac(this.encode(a),this.encode(this.secret),"sha512");r={"Content-type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.decode(t)}}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,n){let d=await this.fetch2(e,t,i,s,a,n);if("success"in d){if(0===this.safeInteger(d,"success")){let e=this.safeString(d,"message");if("Invalid APIKey"===e)throw new o(e);throw new r(e)}}return d}}},874:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,AuthenticationError:a,DDoSProtection:o,InvalidOrder:n}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"btcalpha",name:"BTC-Alpha",countries:"US",version:"v1",has:{fetchTicker:!1,fetchOHLCV:!0,fetchOrders:!0,fetchOpenOrders:!0,fetchClosedOrders:!0,fetchMyTrades:!0},timeframes:{"1m":"1","5m":"5","15m":"15","30m":"30","1h":"60","4h":"240","1d":"D"},urls:{logo:"https://user-images.githubusercontent.com/1294454/42625213-dabaa5da-85cf-11e8-8f99-aa8f8f7699f0.jpg",api:"https://btc-alpha.com/api",www:"https://btc-alpha.com",doc:"https://btc-alpha.github.io/api-docs",fees:"https://btc-alpha.com/fees/",referral:"https://btc-alpha.com/?r=123788"},api:{public:{get:["currencies/","pairs/","orderbook/{pair_name}/","exchanges/","charts/{pair}/{type}/chart/"]},private:{get:["wallets/","orders/own/","order/{id}/","exchanges/own/","deposits/","withdraws/"],post:["order/","order-cancel/"]}},fees:{trading:{maker:.002,taker:.002},funding:{withdraw:{BTC:.00135,LTC:.0035,XMR:.018,ZEC:.002,ETH:.01,ETC:.01,SIB:1.5,CCRB:4,PZM:.05,ITI:.05,DCY:5,R:5,ATB:.05,BRIA:.05,KZC:.05,HWC:1,SPA:1,SMS:.001,REC:.01,SUP:1,BQ:100,GDS:.1,EVN:300,TRKC:.01,UNI:1,STN:1,BCH:void 0,QBIC:.5}}}})}async fetchMarkets(){let e=await this.publicGetPairs(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.name,a=this.commonCurrencyCode(s.currency1),o=this.commonCurrencyCode(s.currency2),n=a+"/"+o,d={amount:8,price:parseInt(s.price_precision)},c=Math.pow(10,-d.amount);t.push({id:r,symbol:n,base:a,quote:o,active:!0,lot:c,precision:d,limits:{amount:{min:parseFloat(s.minimum_order_size),max:parseFloat(s.maximum_order_size)},price:{min:Math.pow(10,-d.price),max:Math.pow(10,d.price)},cost:{min:void 0,max:void 0}},info:s})}return t}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={pair_name:this.marketId(e)};t&&(s.limit_sell=t,s.limit_buy=t);let r=await this.publicGetOrderbookPairName(this.extend(s,i));return this.parseOrderBook(r,void 0,"buy","sell","price","amount")}parseTrade(e,t){let i=void 0;t||(t=this.safeValue(this.marketsById,e.pair)),t&&(i=t.symbol);let s=parseInt(1e3*e.timestamp),r=parseFloat(e.price),a=parseFloat(e.amount),o=this.costToPrecision(i,r*a),n=this.safeString(e,"id");return n||(n=this.safeString(e,"tid")),{timestamp:s,datetime:this.iso8601(s),symbol:i,id:n,order:this.safeString(e,"o_id"),type:"limit",side:e.type,price:r,amount:a,cost:parseFloat(o),fee:void 0,info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=void 0,a={};void 0!==e&&(r=this.market(e),a.pair=r.id),i&&(a.limit=i);let o=await this.publicGetExchanges(this.extend(a,s));return this.parseTrades(o,r,t,i)}parseOHLCV(e,t,i="5m",s,r){return[1e3*e.time,e.open,e.high,e.low,e.close,e.volume]}async fetchOHLCV(e,t="5m",i,s,r={}){await this.loadMarkets();let a=this.market(e),o={pair:a.id,type:this.timeframes[t]};s&&(o.limit=s),i&&(o.since=parseInt(i/1e3));let n=await this.publicGetChartsPairTypeChart(this.extend(o,r));return this.parseOHLCVs(n,a,t,i,s)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetWallets(e),i={info:t};for(let s=0;s<t.length;s++){let e=t[s],r=this.commonCurrencyCode(e.currency),a={free:parseFloat(e.balance),used:parseFloat(e.reserve),total:0};a.total=this.sum(a.free,a.used),i[r]=a}return this.parseBalance(i)}parseOrder(e,t){let i=void 0;t||(t=this.safeValue(this.marketsById,e.pair)),t&&(i=t.symbol);let s=parseInt(1e3*e.date),r=parseFloat(e.price),a=this.safeFloat(e,"amount"),o=this.safeString(e,"status"),n=this.safeString(e,"oid");n||(n=this.safeString(e,"id"));let d=this.safeValue(e,"trades");return d&&(d=this.parseTrades(d,t)),{id:n,datetime:this.iso8601(s),timestamp:s,status:this.safeString({1:"open",2:"canceled",3:"closed"},o),symbol:i,type:"limit",side:e.type,price:r,cost:void 0,amount:a,filled:void 0,remaining:void 0,trades:d,fee:void 0,info:e}}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),d=await this.privatePostOrder(this.extend({pair:o.id,type:i,amount:s,price:this.priceToPrecision(e,r)},a));if(!d.success)throw new n(this.id+" "+this.json(d));return this.parseOrder(d,o)}async cancelOrder(e,t,i={}){return await this.privatePostOrderCancel(this.extend({order:e},i))}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrderId(this.extend({id:e},i));return this.parseOrder(s)}async fetchOrders(e,t,i,s={}){await this.loadMarkets();let r={},a=void 0;e&&(a=this.market(e),r.pair=a.id),i&&(r.limit=i);let o=await this.privateGetOrdersOwn(this.extend(r,s));return this.parseOrders(o,a,t,i)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"1"},s))}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"3"},s))}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r={};if(e){let t=this.market(e);r.pair=t.id}i&&(r.limit=i);let a=await this.privateGetExchangesOwn(this.extend(r,s));return this.parseTrades(a,void 0,t,i)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o=this.urlencode(this.keysort(this.omit(s,this.extractParams(e)))),n=this.urls.api+"/";if("charts/{pair}/{type}/chart/"!==e&&(n+="v1/"),n+=this.implodeParams(e,s),r={Accept:"application/json"},"public"===t)o.length&&(n+="?"+o);else{this.checkRequiredCredentials();let e=this.apiKey;"POST"===i?(r["Content-Type"]="application/x-www-form-urlencoded",e+=a=o):o.length&&(n+="?"+o),r["X-KEY"]=this.apiKey,r["X-SIGN"]=this.hmac(this.encode(e),this.encode(this.secret)),r["X-NONCE"]=this.nonce().toString()}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,n,d){if(!(e<400||"string"!=typeof d||d.length<2||"{"!==d[0]&&"["!==d[0])){let t=JSON.parse(d),i=this.id+" "+this.safeValue(t,"detail",d);if(401===e||403===e)throw new a(i);if(429===e)throw new o(i);throw new r(i)}}}},875:function(e,t,i){"use strict";const s=i(788);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"btcchina",name:"BTCChina",countries:["CN"],rateLimit:1500,version:"v1",has:{CORS:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766368-465b3286-5ed6-11e7-9a11-0f6467e1d82b.jpg",api:{plus:"https://plus-api.btcchina.com/market",public:"https://data.btcchina.com/data",private:"https://api.btcchina.com/api_trade_v1.php"},www:"https://www.btcchina.com",doc:"https://www.btcchina.com/apidocs"},api:{plus:{get:["orderbook","ticker","trade"]},public:{get:["historydata","orderbook","ticker","trades"]},private:{post:["BuyIcebergOrder","BuyOrder","BuyOrder2","BuyStopOrder","CancelIcebergOrder","CancelOrder","CancelStopOrder","GetAccountInfo","getArchivedOrder","getArchivedOrders","GetDeposits","GetIcebergOrder","GetIcebergOrders","GetMarketDepth","GetMarketDepth2","GetOrder","GetOrders","GetStopOrder","GetStopOrders","GetTransactions","GetWithdrawal","GetWithdrawals","RequestWithdrawal","SellIcebergOrder","SellOrder","SellOrder2","SellStopOrder"]}},markets:{"BTC/CNY":{id:"btccny",symbol:"BTC/CNY",base:"BTC",quote:"CNY",api:"public",plus:!1},"LTC/CNY":{id:"ltccny",symbol:"LTC/CNY",base:"LTC",quote:"CNY",api:"public",plus:!1},"LTC/BTC":{id:"ltcbtc",symbol:"LTC/BTC",base:"LTC",quote:"BTC",api:"public",plus:!1},"BCH/CNY":{id:"bcccny",symbol:"BCH/CNY",base:"BCH",quote:"CNY",api:"plus",plus:!0},"ETH/CNY":{id:"ethcny",symbol:"ETH/CNY",base:"ETH",quote:"CNY",api:"plus",plus:!0}}})}async fetchMarkets(){let e=await this.publicGetTicker({market:"all"}),t=[],i=Object.keys(e);for(let s=0;s<i.length;s++){let r=i[s],a=e[r],o=r.split("_")[1],n=o.slice(0,3),d=o.slice(3,6),c=(n=n.toUpperCase())+"/"+(d=d.toUpperCase());t.push({id:o,symbol:c,base:n,quote:d,info:a})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privatePostGetAccountInfo()).result,i={info:t},s=Object.keys(this.currencies);for(let r=0;r<s.length;r++){let e=s[r],a=e.toLowerCase(),o=this.account();a in t.balance&&(o.total=parseFloat(t.balance[a].amount)),a in t.frozen&&(o.used=parseFloat(t.frozen[a].amount)),o.free=o.total-o.used,i[e]=o}return this.parseBalance(i)}createMarketRequest(e){let t={};return t[e.plus?"symbol":"market"]=e.id,t}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=s.api+"GetOrderbook",a=this.createMarketRequest(s),o=await this[r](this.extend(a,i)),n=1e3*o.date;return this.parseOrderBook(o,n)}parseTicker(e,t){let i=1e3*e.date,s=this.safeFloat(e,"last");return{timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),ask:this.safeFloat(e,"sell"),vwap:this.safeFloat(e,"vwap"),open:this.safeFloat(e,"open"),close:s,last:s,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"vol"),quoteVolume:void 0,info:e}}parseTickerPlus(e,t){let i=e.Timestamp,s=void 0;return t&&(s=t.symbol),{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"High"),low:this.safeFloat(e,"Low"),bid:this.safeFloat(e,"BidPrice"),ask:this.safeFloat(e,"AskPrice"),vwap:void 0,open:this.safeFloat(e,"Open"),last:this.safeFloat(e,"Last"),change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"Volume24H"),quoteVolume:void 0,info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=i.api+"GetTicker",r=this.createMarketRequest(i),a=(await this[s](this.extend(r,t))).ticker;return i.plus?this.parseTickerPlus(a,i):this.parseTicker(a,i)}parseTrade(e,t){let i=1e3*parseInt(e.date);return{id:e.tid,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:void 0,price:e.price,amount:e.amount}}parseTradePlus(e,t){let i=this.parse8601(e.timestamp);return{id:void 0,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:e.side.toLowerCase(),price:e.price,amount:e.size}}parseTradesPlus(e,t){let i=[];for(let s=0;s<e.length;s++)i.push(this.parseTradePlus(e[s],t));return i}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=r.api+"GetTrade",o=this.createMarketRequest(r);if(r.plus){let e=this.milliseconds();o.start_time=e-864e5,o.end_time=e}else a+="s";let n=await this[a](this.extend(o,s));return r.plus?this.parseTradesPlus(n.trades,r):this.parseTrades(n,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n="privatePost"+this.capitalize(i)+"Order2",d={},c=o.id.toUpperCase();d.params="market"===t?[void 0,s,c]:[r,s,c];let h=await this[n](this.extend(d,a));return{info:h,id:h.id}}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=i.market;return await this.privatePostCancelOrder(this.extend({params:[e,s]},i))}nonce(){return this.microseconds()}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t]+"/"+e;if("private"===t){this.checkRequiredCredentials();let t=[];"params"in s&&(t=s.params);let o=this.nonce(),n={method:e,id:o,params:t};t=t.join(","),a=this.json(n);let d="tonce="+o+"&accesskey="+this.apiKey+"&requestmethod="+i.toLowerCase()+"&id="+o+"&method="+e+"&params="+t,c=this.hmac(this.encode(d),this.encode(this.secret),"sha1"),h=this.encode(this.apiKey+":"+c);r={Authorization:"Basic "+this.stringToBase64(h),"Json-Rpc-Tonce":o}}else Object.keys(s).length&&(o+="?"+this.urlencode(s));return{url:o,method:i,body:a,headers:r}}}},876:function(e,t,i){"use strict";const s=i(813);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"btcexchange",name:"BTCExchange",countries:["PH"],rateLimit:1500,has:{CORS:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/27993052-4c92911a-64aa-11e7-96d8-ec6ac3435757.jpg",api:"https://www.btcexchange.ph/api",www:"https://www.btcexchange.ph",doc:"https://github.com/BTCTrader/broker-api-docs"},markets:{"BTC/PHP":{id:"BTC/PHP",symbol:"BTC/PHP",base:"BTC",quote:"PHP"}}})}}},877:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,OrderNotFound:a,NotSupported:o,InvalidOrder:n,DDoSProtection:d}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"btcmarkets",name:"BTC Markets",countries:["AU"],rateLimit:1e3,has:{CORS:!1,fetchOHLCV:!0,fetchOrder:!0,fetchOrders:!0,fetchClosedOrders:"emulated",fetchOpenOrders:!0,fetchMyTrades:!0,cancelOrders:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/29142911-0e1acfc2-7d5c-11e7-98c4-07d9532b29d7.jpg",api:{public:"https://api.btcmarkets.net",private:"https://api.btcmarkets.net",web:"https://btcmarkets.net/data"},www:"https://btcmarkets.net/",doc:"https://github.com/BTCMarkets/API"},api:{public:{get:["market/{id}/tick","market/{id}/orderbook","market/{id}/trades"]},private:{get:["account/balance","account/{id}/tradingfee"],post:["fundtransfer/withdrawCrypto","fundtransfer/withdrawEFT","order/create","order/cancel","order/history","order/open","order/trade/history","order/createBatch","order/detail"]},web:{get:["market/BTCMarkets/{id}/tickByTime"]}},markets:{"BTC/AUD":{id:"BTC/AUD",symbol:"BTC/AUD",base:"BTC",quote:"AUD",maker:.0085,taker:.0085,limits:{amount:{min:.001,max:void 0}},precision:{price:2}},"LTC/AUD":{id:"LTC/AUD",symbol:"LTC/AUD",base:"LTC",quote:"AUD",maker:.0085,taker:.0085,limits:{amount:{min:.001,max:void 0}},precision:{price:2}},"ETH/AUD":{id:"ETH/AUD",symbol:"ETH/AUD",base:"ETH",quote:"AUD",maker:.0085,taker:.0085,limits:{amount:{min:.001,max:void 0}},precision:{price:2}},"ETC/AUD":{id:"ETC/AUD",symbol:"ETC/AUD",base:"ETC",quote:"AUD",maker:.0085,taker:.0085,limits:{amount:{min:.001,max:void 0}},precision:{price:2}},"XRP/AUD":{id:"XRP/AUD",symbol:"XRP/AUD",base:"XRP",quote:"AUD",maker:.0085,taker:.0085,limits:{amount:{min:.001,max:void 0}},precision:{price:2}},"BCH/AUD":{id:"BCH/AUD",symbol:"BCH/AUD",base:"BCH",quote:"AUD",maker:.0085,taker:.0085,limits:{amount:{min:.001,max:void 0}},precision:{price:2}},"LTC/BTC":{id:"LTC/BTC",symbol:"LTC/BTC",base:"LTC",quote:"BTC",maker:.0022,taker:.0022,limits:{amount:{min:.001,max:void 0}}},"ETH/BTC":{id:"ETH/BTC",symbol:"ETH/BTC",base:"ETH",quote:"BTC",maker:.0022,taker:.0022,limits:{amount:{min:.001,max:void 0}}},"ETC/BTC":{id:"ETC/BTC",symbol:"ETC/BTC",base:"ETC",quote:"BTC",maker:.0022,taker:.0022,limits:{amount:{min:.001,max:void 0}}},"XRP/BTC":{id:"XRP/BTC",symbol:"XRP/BTC",base:"XRP",quote:"BTC",maker:.0022,taker:.0022,limits:{amount:{min:.001,max:void 0}}},"BCH/BTC":{id:"BCH/BTC",symbol:"BCH/BTC",base:"BCH",quote:"BTC",maker:.0022,taker:.0022,limits:{amount:{min:.001,max:void 0}}}},timeframes:{"1m":"minute","1h":"hour","1d":"day"},exceptions:{3:n,6:d}})}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetAccountBalance(),i={info:t};for(let s=0;s<t.length;s++){let e=t[s],r=e.currency,a=1e8,o=parseFloat(e.balance/a),n=parseFloat(e.pendingFunds/a),d={free:o-n,used:n,total:o};i[r]=d}return this.parseBalance(i)}parseOHLCV(e,t,i="1m",s,r){return[e[0],parseFloat(e[1])/1e8,parseFloat(e[2])/1e8,parseFloat(e[3])/1e8,parseFloat(e[4])/1e8,parseFloat(e[5])/1e8]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.load_markets();let a=this.market(e),o={id:a.id,timeWindow:this.timeframes[t]};void 0!==i&&(o.since=i);let n=await this.webGetMarketBTCMarketsIdTickByTime(this.extend(o,r));return this.parseOHLCVs(n.ticks,a,t,i,s)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=await this.publicGetMarketIdOrderbook(this.extend({id:s.id},i)),a=1e3*r.timestamp;return this.parseOrderBook(r,a)}parseTicker(e,t){let i=1e3*e.timestamp,s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"lastPrice");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:void 0,low:void 0,bid:this.safeFloat(e,"bestBid"),bidVolume:void 0,ask:this.safeFloat(e,"bestAsk"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"volume24h"),quoteVolume:void 0,info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetMarketIdTick(this.extend({id:i.id},t));return this.parseTicker(s,i)}parseTrade(e,t){let i=1e3*e.date;return{info:e,id:e.tid.toString(),order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:void 0,price:e.price,amount:e.amount}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetMarketIdTrades(this.extend({id:r.id},s));return this.parseTrades(a,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n="buy"===i?"Bid":"Ask",d=this.ordered({currency:o.quote});d.currency=o.quote,d.instrument=o.base,d.price=parseInt(1e8*r),d.volume=parseInt(1e8*s),d.orderSide=n,d.ordertype=this.capitalize(t),d.clientRequestId=this.nonce().toString();let c=await this.privatePostOrderCreate(d);return{info:c,id:c.id.toString()}}async cancelOrders(e){await this.loadMarkets();for(let t=0;t<e.length;t++)e[t]=parseInt(e[t]);return await this.privatePostOrderCancel({orderIds:e})}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.cancelOrders([e])}parseMyTrade(e,t){let i=e.creationTime,s="Bid"===e.side?"buy":"sell",r="AUD"===t.quote?t.quote:t.base;return{info:e,id:e.id.toString(),timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:s,price:e.price/1e8,fee:{currency:r,cost:e.fee/1e8},amount:e.volume/1e8,order:this.safeString(e,"orderId")}}parseMyTrades(e,t,i,s){let r=[];for(let a=0;a<e.length;a++){let i=this.parseMyTrade(e[a],t);r.push(i)}return r}parseOrder(e,t){let i="Bid"===e.orderSide?"buy":"sell",s="Limit"===e.ordertype?"limit":"market",r=e.creationTime;void 0===t&&(t=this.market(e.instrument+"/"+e.currency));let a="open";"Failed"===e.status||"Cancelled"===e.status||"Partially Cancelled"===e.status||"Error"===e.status?a="canceled":"Fully Matched"!==e.status&&"Partially Matched"!==e.status||(a="closed");let o=this.safeFloat(e,"price")/1e8,n=this.safeFloat(e,"volume")/1e8,d=this.safeFloat(e,"openVolume",0)/1e8,c=n-d,h=o*n,l=this.parseMyTrades(e.trades,t);return{info:e,id:e.id.toString(),timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,symbol:t.symbol,type:s,side:i,price:o,cost:h,amount:n,filled:c,remaining:d,status:a,trades:l,fee:void 0}}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=[parseInt(e)],r=await this.privatePostOrderDetail(this.extend({orderIds:s},i));if(r.orders.length<1)throw new a(this.id+" No matching order found: "+e);let o=r.orders[0];return this.parseOrder(o)}prepareHistoryRequest(e,t,i){let s=this.ordered({currency:e.quote,instrument:e.base});return s.limit=void 0!==i?i:100,s.since=void 0!==t?t:0,s}async fetchOrders(e,t,i,s={}){if(void 0===e)throw new o(this.id+": fetchOrders requires a `symbol` parameter.");await this.loadMarkets();let r=this.market(e),a=this.prepareHistoryRequest(r,t,i),n=await this.privatePostOrderHistory(this.extend(a,s));return this.parseOrders(n.orders,r)}async fetchOpenOrders(e,t,i,s={}){if(void 0===e)throw new o(this.id+": fetchOpenOrders requires a `symbol` parameter.");await this.loadMarkets();let r=this.market(e),a=this.prepareHistoryRequest(r,t,i),n=await this.privatePostOrderOpen(this.extend(a,s));return this.parseOrders(n.orders,r)}async fetchClosedOrders(e,t,i,s={}){let r=await this.fetchOrders(e,t,i,s);return this.filterBy(r,"status","closed")}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new o(this.id+": fetchMyTrades requires a `symbol` parameter.");await this.loadMarkets();let r=this.market(e),a=this.prepareHistoryRequest(r,t,i),n=await this.privatePostOrderTradeHistory(this.extend(a,s));return this.parseMyTrades(n.trades,r)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o="/"+this.implodeParams(e,s),n=this.urls.api[t]+o;if("private"===t){this.checkRequiredCredentials();let e=this.nonce().toString(),t=o+"\n"+e+"\n";r={"Content-Type":"application/json",apikey:this.apiKey,timestamp:e},"POST"===i&&(t+=a=this.json(s));let n=this.base64ToBinary(this.secret),d=this.hmac(this.encode(t),n,"sha512","base64");r.signature=this.decode(d)}else Object.keys(s).length&&(n+="?"+this.urlencode(s));return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if(!(o.length<2)&&"{"===o[0]){let e=JSON.parse(o);if("success"in e&&!e.success){let t=this.safeString(e,"errorCode"),i=this.id+" "+this.json(e);if(t in this.exceptions){throw new(0,this.exceptions[t])(i)}throw new r(i)}}}async request(e,t="public",i="GET",s={},r,a){return await this.fetch2(e,t,i,s,r,a)}}},878:function(e,t,i){"use strict";const s=i(800),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){let e=this.deepExtend(super.describe(),{id:"btctradeim",name:"BtcTrade.im",countries:["HK"],urls:{logo:"https://user-images.githubusercontent.com/1294454/36770531-c2142444-1c5b-11e8-91e2-a4d90dc85fe8.jpg",api:{web:"https://api.btctrade.im/coin",rest:"https://api.btctrade.im/api/v1"},www:"https://www.btctrade.im",doc:"https://www.btctrade.im/help.api.html",fees:"https://www.btctrade.im/spend.price.html"},fees:{trading:{maker:.002,taker:.002},funding:{withdraw:{BTC:.001}}}});return e.options.quoteIds=["btc","eth","usc"],e}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("web"===t)return n;let d=this.safeValue(n,"data");if(d){if("0"!==this.safeString(n,"code")){let e=this.safeString(n,"msg","Error");throw new r(e)}return d}return n}}},879:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"btctradeua",name:"BTC Trade UA",countries:["UA"],rateLimit:3e3,has:{CORS:!0,createMarketOrder:!1,fetchOpenOrders:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27941483-79fc7350-62d9-11e7-9f61-ac47f28fcd96.jpg",api:"https://btc-trade.com.ua/api",www:"https://btc-trade.com.ua",doc:"https://docs.google.com/document/d/1ocYA0yMy_RXd561sfG3qEPZ80kyll36HUxvCRe5GbhE/edit"},api:{public:{get:["deals/{symbol}","trades/sell/{symbol}","trades/buy/{symbol}","japan_stat/high/{symbol}"]},private:{post:["auth","ask/{symbol}","balance","bid/{symbol}","buy/{symbol}","my_orders/{symbol}","order/status/{id}","remove/order/{id}","sell/{symbol}"]}},markets:{"BCH/UAH":{id:"bch_uah",symbol:"BCH/UAH",base:"BCH",quote:"UAH"},"BTC/UAH":{id:"btc_uah",symbol:"BTC/UAH",base:"BTC",quote:"UAH",precision:{price:1},limits:{amount:{min:1e-10}}},"DASH/BTC":{id:"dash_btc",symbol:"DASH/BTC",base:"DASH",quote:"BTC"},"DASH/UAH":{id:"dash_uah",symbol:"DASH/UAH",base:"DASH",quote:"UAH"},"DOGE/BTC":{id:"doge_btc",symbol:"DOGE/BTC",base:"DOGE",quote:"BTC"},"DOGE/UAH":{id:"doge_uah",symbol:"DOGE/UAH",base:"DOGE",quote:"UAH"},"ETH/UAH":{id:"eth_uah",symbol:"ETH/UAH",base:"ETH",quote:"UAH"},"ITI/UAH":{id:"iti_uah",symbol:"ITI/UAH",base:"ITI",quote:"UAH"},"KRB/UAH":{id:"krb_uah",symbol:"KRB/UAH",base:"KRB",quote:"UAH"},"LTC/BTC":{id:"ltc_btc",symbol:"LTC/BTC",base:"LTC",quote:"BTC"},"LTC/UAH":{id:"ltc_uah",symbol:"LTC/UAH",base:"LTC",quote:"UAH"},"NVC/BTC":{id:"nvc_btc",symbol:"NVC/BTC",base:"NVC",quote:"BTC"},"NVC/UAH":{id:"nvc_uah",symbol:"NVC/UAH",base:"NVC",quote:"UAH"},"PPC/BTC":{id:"ppc_btc",symbol:"PPC/BTC",base:"PPC",quote:"BTC"},"SIB/UAH":{id:"sib_uah",symbol:"SIB/UAH",base:"SIB",quote:"UAH"},"XMR/UAH":{id:"xmr_uah",symbol:"XMR/UAH",base:"XMR",quote:"UAH"},"ZEC/UAH":{id:"zec_uah",symbol:"ZEC/UAH",base:"ZEC",quote:"UAH"}},fees:{trading:{maker:.001,taker:.001},funding:{withdraw:{BTC:6e-4,LTC:.01,NVC:.01,DOGE:10}}}})}signIn(){return this.privatePostAuth()}async fetchBalance(e={}){let t=await this.privatePostBalance(),i={info:t};if("accounts"in t){let e=t.accounts;for(let t=0;t<e.length;t++){let s=e[t],r=s.currency,a=parseFloat(s.balance);i[r]={free:a,used:0,total:a}}}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){let s=this.market(e),r=await this.publicGetTradesBuySymbol(this.extend({symbol:s.id},i)),a=await this.publicGetTradesSellSymbol(this.extend({symbol:s.id},i)),o={bids:[],asks:[]};return r&&"list"in r&&(o.bids=r.list),a&&"list"in a&&(o.asks=a.list),this.parseOrderBook(o,void 0,"bids","asks","price","currency_trade")}async fetchTicker(e,t={}){let i=(await this.publicGetJapanStatHighSymbol(this.extend({symbol:this.marketId(e)},t))).trades,s=this.milliseconds(),r={symbol:e,timestamp:s,datetime:this.iso8601(s),high:void 0,low:void 0,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:void 0,last:void 0,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:void 0,info:i},a=i.length;if(a>0){for(let t=Math.max(a-48,0);t<i.length;t++){let e=i[t];void 0===r.open&&(r.open=e[1]),(void 0===r.high||r.high<e[2])&&(r.high=e[2]),(void 0===r.low||r.low>e[3])&&(r.low=e[3]),void 0===r.baseVolume?r.baseVolume=-e[5]:r.baseVolume-=e[5]}let e=a-1;r.last=i[e][4],r.close=r.last,r.baseVolume=-1*r.baseVolume}return r}convertCyrillicMonthNameToString(e){let t={"января":"01","февраля":"02","марта":"03","апреля":"04","мая":"05","июня":"06","июля":"07","августа":"08","сентября":"09","октября":"10","ноября":"11","декабря":"12"},i=void 0;return e in t&&(i=t[e]),i}parseCyrillicDatetime(e){let t=e.split(" "),i=t[0],s=this.convertCyrillicMonthNameToString(t[1]);if(!s)throw new r(this.id+" parseTrade() undefined month name: "+e);let a=t[2],o=t[4];7===o.length&&(o="0"+o),1===i.length&&(i="0"+i);let n=[a,s,i].join("-")+"T"+o,d=this.parse8601(n),c=[s,i].join("");return(c=parseInt(c))<325||c>1028?d-72e5:d-108e5}parseTrade(e,t){let i=this.parseCyrillicDatetime(e.pub_date);return{id:e.id.toString(),info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:"limit",side:e.type,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"amnt_trade")}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetDealsSymbol(this.extend({symbol:r.id},s)),o=[];for(let n=0;n<a.length;n++)a[n].id%2&&o.push(a[n]);return this.parseTrades(o,r,t,i)}async createOrder(e,t,i,s,a,o={}){if("market"===t)throw new r(this.id+" allows limit orders only");let n=this.market(e),d="privatePost"+this.capitalize(i)+"Id",c={count:s,currency1:n.quote,currency:n.base,price:a};return this[d](this.extend(c,o))}async cancelOrder(e,t,i={}){return await this.privatePostRemoveOrderId({id:e})}parseOrder(e,t){let i=this.milliseconds;return{id:e.id,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,status:"open",symbol:t.symbol,type:void 0,side:e.type,price:e.price,amount:e.amnt_trade,filled:0,remaining:e.amnt_trade,trades:void 0,info:e}}async fetchOpenOrders(e,t,i,s={}){if(void 0===e)throw new r(this.id+" fetchOpenOrders requires a symbol argument");let a=this.market(e),o=(await this.privatePostMyOrdersSymbol(this.extend({symbol:a.id},s))).your_open_orders;return this.parseOrders(o,a,t,i)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(n).length&&(o+=this.implodeParams(e,n));else{this.checkRequiredCredentials();let e=this.nonce(),t=(a=this.urlencode(this.extend({out_order_id:e,nonce:e},n)))+this.secret;r={"public-key":this.apiKey,"api-sign":this.hash(this.encode(t),"sha256"),"Content-Type":"application/x-www-form-urlencoded"}}return{url:o,method:i,body:a,headers:r}}}},880:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"btcx",name:"BTCX",countries:["IS","US","EU"],rateLimit:1500,version:"v1",has:{CORS:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766385-9fdcc98c-5ed6-11e7-8f14-66d5e5cd47e6.jpg",api:"https://btc-x.is/api",www:"https://btc-x.is",doc:"https://btc-x.is/custom/api-document.html"},api:{public:{get:["depth/{id}/{limit}","ticker/{id}","trade/{id}/{limit}"]},private:{post:["balance","cancel","history","order","redeem","trade","withdraw"]}},markets:{"BTC/USD":{id:"btc/usd",symbol:"BTC/USD",base:"BTC",quote:"USD"},"BTC/EUR":{id:"btc/eur",symbol:"BTC/EUR",base:"BTC",quote:"EUR"}}})}async fetchBalance(e={}){let t=await this.privatePostBalance(),i={info:t},s=Object.keys(t);for(let r=0;r<s.length;r++){let e=s[r],a=e.toUpperCase(),o={free:t[e],used:0,total:t[e]};i[a]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){let s={id:this.marketId(e)};void 0!==t&&(s.limit=t);let r=await this.publicGetDepthIdLimit(this.extend(s,i));return this.parseOrderBook(r,void 0,"bids","asks","price","amount")}async fetchTicker(e,t={}){let i=await this.publicGetTickerId(this.extend({id:this.marketId(e)},t)),s=1e3*i.time;return{symbol:e,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(i,"high"),low:this.safeFloat(i,"low"),bid:this.safeFloat(i,"sell"),ask:this.safeFloat(i,"buy"),vwap:void 0,open:void 0,close:void 0,first:void 0,last:this.safeFloat(i,"last"),change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:this.safeFloat(i,"volume"),info:i}}parseTrade(e,t){let i=1e3*parseInt(e.date),s="ask"===e.type?"sell":"buy";return{id:e.id,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:s,price:e.price,amount:e.amount}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetTradeIdLimit(this.extend({id:r.id,limit:1e3},s));return this.parseTrades(a,r,t,i)}async createOrder(e,t,i,s,r,a={}){let o=await this.privatePostTrade(this.extend({type:i.toUpperCase(),market:this.marketId(e),amount:s,price:r},a));return{info:o,id:o.order.id}}async cancelOrder(e,t,i={}){return await this.privatePostCancel({order:e})}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.version+"/";if("public"===t)o+=this.implodeParams(e,s);else{this.checkRequiredCredentials();let i=this.nonce();o+=t,a=this.urlencode(this.extend({Method:e.toUpperCase(),Nonce:i},s)),r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Signature:this.hmac(this.encode(a),this.encode(this.secret),"sha512")}}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("error"in n)throw new r(this.id+" "+this.json(n));return n}}},881:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"bxinth",name:"BX.in.th",countries:["TH"],rateLimit:1500,has:{CORS:!1,fetchTickers:!0,fetchOpenOrders:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766412-567b1eb4-5ed7-11e7-94a8-ff6a3884f6c5.jpg",api:"https://bx.in.th/api",www:"https://bx.in.th",doc:"https://bx.in.th/info/api"},api:{public:{get:["","options","optionbook","orderbook","pairing","trade","tradehistory"]},private:{post:["balance","biller","billgroup","billpay","cancel","deposit","getorders","history","option-issue","option-bid","option-sell","option-myissue","option-mybid","option-myoptions","option-exercise","option-cancel","option-history","order","withdrawal","withdrawal-history"]}},fees:{trading:{taker:.0025,maker:.0025}},commonCurrencies:{DAS:"DASH",DOG:"DOGE"}})}async fetchMarkets(){let e=await this.publicGetPairing(),t=Object.keys(e),i=[];for(let s=0;s<t.length;s++){let r=e[t[s]],a=r.pairing_id.toString(),o=r.secondary_currency,n=r.primary_currency,d=(o=this.commonCurrencyCode(o))+"/"+(n=this.commonCurrencyCode(n));i.push({id:a,symbol:d,base:o,quote:n,info:r})}return i}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privatePostBalance()).balance,i={info:t},s=Object.keys(t);for(let r=0;r<s.length;r++){let e=s[r],a=this.commonCurrencyCode(e),o={free:parseFloat(t[e].available),used:0,total:parseFloat(t[e].total)};o.used=o.total-o.free,i[a]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetOrderbook(this.extend({pairing:this.marketId(e)},i));return this.parseOrderBook(s)}parseTicker(e,t){let i=this.milliseconds(),s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"last_price");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:void 0,low:void 0,bid:parseFloat(e.orderbook.bids.highbid),bidVolume:void 0,ask:parseFloat(e.orderbook.asks.highbid),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:this.safeFloat(e,"change"),percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"volume_24hours"),quoteVolume:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGet(t),s={},r=Object.keys(i);for(let a=0;a<r.length;a++){let e=r[a],t=i[e],o=this.markets_by_id[e];s[o.symbol]=this.parseTicker(t,o)}return s}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=(await this.publicGet(this.extend({pairing:i.id},t)))[i.id.toString()];return this.parseTicker(s,i)}parseTrade(e,t){let i=this.parse8601(e.trade_date);return{id:e.trade_id,info:e,order:e.order_id,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:e.trade_type,price:this.safeFloat(e,"rate"),amount:this.safeFloat(e,"amount")}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTrade(this.extend({pairing:r.id},s));return this.parseTrades(a.trades,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=await this.privatePostOrder(this.extend({pairing:this.marketId(e),type:i,amount:s,rate:r},a));return{info:o,id:o.order_id.toString()}}async cancelOrder(e,t,i={}){await this.loadMarkets();return await this.privatePostCancel({order_id:e,pairing:void 0})}async parseOrder(e,t){let i=this.safeString(e,"order_type"),s=void 0;if(void 0===t){let i=this.safeString(e,"pairing_id");void 0!==i&&i in this.markets_by_id&&(t=this.markets_by_id[i])}void 0!==t&&(s=t.symbol);let r=this.parse8601(e.date),a=this.safeFloat(e,"rate"),o=this.safeFloat(e,"amount");return{info:e,id:e.order_id,timestamp:r,datetime:this.iso8601(r),symbol:s,type:"limit",side:i,price:a,amount:o}}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r={},a=void 0;void 0!==e&&(a=this.market(e),r.pairing=a.id);let o=this.privatePostGetorders(this.extend(r,s)),n=this.parseOrders(o.orders,a,t,i);return this.filterBySymbol(n,e)}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/";if(e&&(o+=e+"/"),Object.keys(s).length&&(o+="?"+this.urlencode(s)),"private"===t){this.checkRequiredCredentials();let e=this.nonce(),t=this.apiKey+e.toString()+this.secret,i=this.hash(this.encode(t),"sha256");a=this.urlencode(this.extend({key:this.apiKey,nonce:e,signature:i},s)),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("public"===t)return n;if("success"in n&&n.success)return n;throw new r(this.id+" "+this.json(n))}}},882:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"ccex",name:"C-CEX",countries:["DE","EU"],rateLimit:1500,has:{CORS:!1,fetchTickers:!0,fetchOrderBooks:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766433-16881f90-5ed8-11e7-92f8-3d92cc747a6c.jpg",api:{web:"https://c-cex.com/t",public:"https://c-cex.com/t/api_pub.html",private:"https://c-cex.com/t/api.html"},www:"https://c-cex.com",doc:"https://c-cex.com/?id=api"},api:{web:{get:["coinnames","{market}","pairs","prices","volume_{coin}"]},public:{get:["balancedistribution","markethistory","markets","marketsummaries","orderbook","fullorderbook"]},private:{get:["buylimit","cancel","getbalance","getbalances","getopenorders","getorder","getorderhistory","mytrades","selllimit"]}},fees:{trading:{taker:.002,maker:.002}},commonCurrencies:{BLC:"Cryptobullcoin",CRC:"CoreCoin",IOT:"IoTcoin",LUX:"Luxmi",VIT:"VitalCoin",XID:"InternationalDiamond"}})}async fetchMarkets(){let e={},t=(await this.webGetPairs()).pairs;for(let i=0;i<t.length;i++){let s=t[i],[r,a]=s.split("-"),o=r.toUpperCase(),n=a.toUpperCase(),d=(o=this.commonCurrencyCode(o))+"/"+(n=this.commonCurrencyCode(n));e[d]={id:s,symbol:d,base:o,quote:n,baseId:r,quoteId:a,info:s}}return e}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privateGetGetbalances()).result,i={info:t};for(let s=0;s<t.length;s++){let e=t[s],r=e.Currency,a=this.commonCurrencyCode(r),o={free:e.Available,used:e.Pending,total:e.Balance};i[a]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={market:this.marketId(e),type:"both"};void 0!==t&&(s.depth=t);let r=(await this.publicGetOrderbook(this.extend(s,i))).result;return this.parseOrderBook(r,void 0,"buy","sell","Rate","Quantity")}async fetchOrderBooks(e,t={}){await this.loadMarkets();let i={},s=await this.publicGetFullorderbook(),r=Object.keys(s.result);for(let n=0;n<r.length;n++){let e=r[n],t=s.result[e],a=this.groupBy(t,"Market"),o=Object.keys(a);for(let s=0;s<o.length;s++){let t=o[s],r=t.toUpperCase(),n=e;if(r in this.markets_by_id){r=this.markets_by_id[r].symbol}else{let[e,t]=r.split("-"),i=t+"-"+e;if(i in this.markets_by_id){r=this.markets_by_id[i].symbol}}r in i||(i[r]={}),i[r][n]=a[t]}}let a={},o=Object.keys(i);for(let n=0;n<o.length;n++){let e=o[n];a[e]=this.parseOrderBook(i[e],void 0,"buy","sell","Rate","Quantity")}return a}parseTicker(e,t){let i=1e3*e.updated,s=void 0;void 0!==t&&(s=t.symbol);let r=this.safeFloat(e,"lastprice");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeFloat(e,"avg"),baseVolume:void 0,quoteVolume:this.safeFloat(e,"buysupport"),info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.webGetPrices(t),s={},r=Object.keys(i);for(let a=0;a<r.length;a++){let e=r[a],t=i[e],o=void 0,n=void 0;if(e in this.markets_by_id)n=(o=this.markets_by_id[e]).symbol;else{let t=e.toUpperCase(),[i,s]=t.split("-");n=(i=this.commonCurrencyCode(i))+"/"+(s=this.commonCurrencyCode(s))}s[n]=this.parseTicker(t,o)}return s}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=(await this.webGetMarket(this.extend({market:i.id.toLowerCase()},t))).ticker;return this.parseTicker(s,i)}parseTrade(e,t){let i=this.parse8601(e.TimeStamp);return{id:e.Id.toString(),info:e,order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:e.OrderType.toLowerCase(),price:e.Price,amount:e.Quantity}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetMarkethistory(this.extend({market:r.id,type:"both",depth:100},s));return this.parseTrades(a.result,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o="privateGet"+this.capitalize(i)+t,n=await this[o](this.extend({market:this.marketId(e),quantity:s,rate:r},a));return{info:n,id:n.result.uuid}}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privateGetCancel({uuid:e})}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t];if("private"===t){this.checkRequiredCredentials();let t=this.nonce().toString(),i=this.keysort(this.extend({a:e,apikey:this.apiKey,nonce:t},s));o+="?"+this.urlencode(i),r={apisign:this.hmac(this.encode(o),this.encode(this.secret),"sha512")}}else o+="public"===t?"?"+this.urlencode(this.extend({a:"get"+e},s)):"/"+this.implodeParams(e,s)+".json";return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("web"===t)return n;if("success"in n&&n.success)return n;throw new r(this.id+" "+this.json(n))}}},883:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,NullResponse:a,InvalidOrder:o,NotSupported:n}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"cex",name:"CEX.IO",countries:["GB","EU","CY","RU"],rateLimit:1500,has:{CORS:!0,fetchTickers:!0,fetchOHLCV:!0,fetchOrder:!0,fetchOpenOrders:!0,fetchClosedOrders:!0,fetchDepositAddress:!0},timeframes:{"1m":"1m"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766442-8ddc33b0-5ed8-11e7-8b98-f786aef0f3c9.jpg",api:"https://cex.io/api",www:"https://cex.io",doc:"https://cex.io/cex-api",fees:["https://cex.io/fee-schedule","https://cex.io/limits-commissions"]},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},api:{public:{get:["currency_limits/","last_price/{pair}/","last_prices/{currencies}/","ohlcv/hd/{yyyymmdd}/{pair}","order_book/{pair}/","ticker/{pair}/","tickers/{currencies}/","trade_history/{pair}/"],post:["convert/{pair}","price_stats/{pair}"]},private:{post:["active_orders_status/","archived_orders/{pair}/","balance/","cancel_order/","cancel_orders/{pair}/","cancel_replace_order/{pair}/","close_position/{pair}/","get_address/","get_myfee/","get_order/","get_order_tx/","open_orders/{pair}/","open_orders/","open_position/{pair}/","open_positions/{pair}/","place_order/{pair}/"]}},fees:{trading:{maker:.0016,taker:.0025},funding:{withdraw:{BTC:.001,ETH:.01,BCH:.001,DASH:.01,BTG:.001,ZEC:.001,XRP:.02},deposit:{BTC:0,ETH:0,BCH:0,DASH:0,BTG:0,ZEC:0,XRP:0,XLM:0}}},options:{fetchOHLCVWarning:!0}})}async fetchMarkets(){let e=await this.publicGetCurrencyLimits(),t=[];for(let i=0;i<e.data.pairs.length;i++){let s=e.data.pairs[i],r=s.symbol1+"/"+s.symbol2,a=r,[o,n]=a.split("/");t.push({id:r,info:s,symbol:a,base:o,quote:n,lot:s.minLotSize,precision:{price:this.precisionFromString(s.minPrice),amount:-1*Math.log10(s.minLotSize)},limits:{amount:{min:s.minLotSize,max:s.maxLotSize},price:{min:this.safeFloat(s,"minPrice"),max:this.safeFloat(s,"maxPrice")},cost:{min:s.minLotSizeS2,max:void 0}}})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostBalance(),i={info:t},s=this.omit(t,["username","timestamp"]),r=Object.keys(s);for(let a=0;a<r.length;a++){let e=r[a];if(e in s){let t={free:this.safeFloat(s[e],"available",0),used:this.safeFloat(s[e],"orders",0),total:0};t.total=this.sum(t.free,t.used),i[e]=t}}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={pair:this.marketId(e)};void 0!==t&&(s.depth=t);let r=await this.publicGetOrderBookPair(this.extend(s,i)),a=1e3*r.timestamp;return this.parseOrderBook(r,a)}parseOHLCV(e,t,i="1m",s,r){return[1e3*e[0],e[1],e[2],e[3],e[4],e[5]]}async fetchOHLCV(e,t="1m",i,s,o={}){await this.loadMarkets();let n=this.market(e);if(void 0===i)i=this.milliseconds()-864e5;else if(this.options.fetchOHLCVWarning)throw new r(this.id+" fetchOHLCV warning: CEX can return historical candles for a certain date only, this might produce an empty or null reply. Set exchange.options['fetchOHLCVWarning'] = false or add ({ 'options': { 'fetchOHLCVWarning': false }}) to constructor params to suppress this warning message.");let d=this.ymd(i);d=(d=d.split("-")).join("");let c={pair:n.id,yyyymmdd:d};try{let e=await this.publicGetOhlcvHdYyyymmddPair(this.extend(c,o)),r="data"+this.timeframes[t],d=JSON.parse(e[r]);return this.parseOHLCVs(d,n,t,i,s)}catch(e){if(e instanceof a)return[]}}parseTicker(e,t){let i=void 0,s=void 0;"timestamp"in e&&(i=1e3*parseInt(e.timestamp),s=this.iso8601(i));let r=this.safeFloat(e,"volume"),a=this.safeFloat(e,"high"),o=this.safeFloat(e,"low"),n=this.safeFloat(e,"bid"),d=this.safeFloat(e,"ask"),c=this.safeFloat(e,"last"),h=void 0;return t&&(h=t.symbol),{symbol:h,timestamp:i,datetime:s,high:a,low:o,bid:n,bidVolume:void 0,ask:d,askVolume:void 0,vwap:void 0,open:void 0,close:c,last:c,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:r,quoteVolume:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=Object.keys(this.currencies),s=(await this.publicGetTickersCurrencies(this.extend({currencies:i.join("/")},t))).data,r={};for(let a=0;a<s.length;a++){let e=s[a],t=e.pair.replace(":","/"),i=this.markets[t];r[t]=this.parseTicker(e,i)}return r}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTickerPair(this.extend({pair:i.id},t));return this.parseTicker(s,i)}parseTrade(e,t){let i=1e3*parseInt(e.date);return{info:e,id:e.tid,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:e.type,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"amount")}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTradeHistoryPair(this.extend({pair:r.id},s));return this.parseTrades(a,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let n={pair:this.marketId(e),type:i,amount:s};if("limit"===t)n.price=r;else{if("buy"===i){if(!r)throw new o("For market buy orders "+this.id+" requires the amount of quote currency to spend, to calculate proper costs call createOrder (symbol, 'market', 'buy', amount, price)");n.amount=s*r}n.order_type=t}let d=await this.privatePostPlaceOrderPair(this.extend(n,a));return{info:d,id:d.id}}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privatePostCancelOrder({id:e})}parseOrder(e,t){let i=e.time;i="string"==typeof e.time&&e.time.indexOf("T")>=0?this.parse8601(i):parseInt(i);let s=void 0;if(void 0===t){let i=e.symbol1+"/"+e.symbol2;i in this.markets&&(t=this.market(i))}let r=e.status;"a"===r?r="open":"cd"===r?r="canceled":"c"===r?r="canceled":"d"===r&&(r="closed");let a=this.safeFloat(e,"price"),o=this.safeFloat(e,"amount"),n=this.safeFloat(e,"pending");n||(n=this.safeFloat(e,"remains"));let d=o-n,c=void 0,h=void 0;if(void 0!==t){s=t.symbol,void 0===(h=this.safeFloat(e,"ta:"+t.quote))&&(h=this.safeFloat(e,"tta:"+t.quote));let i="fa:"+t.base,r="tfa:"+t.base,a="fa:"+t.quote,o="tfa:"+t.quote,n=this.safeFloat(e,"tradingFeeMaker");if(n||(n=this.safeFloat(e,"tradingFeeTaker",n)),n&&(n/=100),i in e||r in e){let s=this.safeFloat(e,i);void 0===s&&(s=this.safeFloat(e,r)),c={currency:t.base,rate:n,cost:s}}else if(a in e||o in e){let i=this.safeFloat(e,a);void 0===i&&(i=this.safeFloat(e,o)),c={currency:t.quote,rate:n,cost:i}}}return h||(h=a*d),{id:e.id,datetime:this.iso8601(i),timestamp:i,lastTradeTimestamp:void 0,status:r,symbol:s,type:void 0,side:e.type,price:a,cost:h,amount:o,filled:d,remaining:n,trades:void 0,fee:c,info:e}}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r={},a="privatePostOpenOrders",o=void 0;void 0!==e&&(o=this.market(e),r.pair=o.id,a+="Pair");let n=await this[a](this.extend(r,s));for(let d=0;d<n.length;d++)n[d]=this.extend(n[d],{status:"open"});return this.parseOrders(n,o,t,i)}async fetchClosedOrders(e,t,i,s={}){await this.loadMarkets();if(void 0===e)throw new n(this.id+" fetchClosedOrders requires a symbol argument");let r=this.market(e),a={pair:r.id},o=await this.privatePostArchivedOrdersPair(this.extend(a,s));return this.parseOrders(o,r,t,i)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostGetOrder(this.extend({id:e.toString()},i));return this.parseOrder(s)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials();let e=this.nonce().toString(),t=e+this.uid+this.apiKey,i=this.hmac(this.encode(t),this.encode(this.secret));a=this.urlencode(this.extend({key:this.apiKey,signature:i.toUpperCase(),nonce:e},n)),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},o,n){let d=await this.fetch2(e,t,i,s,o,n);if(!d)throw new a(this.id+" returned "+this.json(d));if(!0===d)return d;if("e"in d){if("ok"in d&&"ok"===d.ok)return d;throw new r(this.id+" "+this.json(d))}if("error"in d&&d.error)throw new r(this.id+" "+this.json(d));return d}async fetchDepositAddress(e,t={}){if("XRP"===e||"XLM"===e)throw new n(this.id+" fetchDepositAddress does not support XRP and XLM addresses yet (awaiting docs from CEX.io)");await this.loadMarkets();let i={currency:this.currency(e).id},s=await this.privatePostGetAddress(this.extend(i,t)),r=this.safeString(s,"data");return this.checkAddress(r),{currency:e,address:r,tag:void 0,info:s}}}},884:function(e,t,i){"use strict";const s=i(799),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"chbtc",name:"CHBTC",countries:["CN"],rateLimit:1e3,version:"v1",has:{CORS:!1,fetchOrder:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/28555659-f0040dc2-7109-11e7-9d99-688a438bf9f4.jpg",api:{public:"http://api.chbtc.com/data",private:"https://trade.chbtc.com/api"},www:"https://trade.chbtc.com/api",doc:"https://www.chbtc.com/i/developer"},markets:{"BTC/CNY":{id:"btc_cny",symbol:"BTC/CNY",base:"BTC",quote:"CNY"},"LTC/CNY":{id:"ltc_cny",symbol:"LTC/CNY",base:"LTC",quote:"CNY"},"ETH/CNY":{id:"eth_cny",symbol:"ETH/CNY",base:"ETH",quote:"CNY"},"ETC/CNY":{id:"etc_cny",symbol:"ETC/CNY",base:"ETC",quote:"CNY"},"BTS/CNY":{id:"bts_cny",symbol:"BTS/CNY",base:"BTS",quote:"CNY"},"BCH/CNY":{id:"bcc_cny",symbol:"BCH/CNY",base:"BCH",quote:"CNY"},"HSR/CNY":{id:"hsr_cny",symbol:"HSR/CNY",base:"HSR",quote:"CNY"},"QTUM/CNY":{id:"qtum_cny",symbol:"QTUM/CNY",base:"QTUM",quote:"CNY"}}})}getMarketFieldName(){return"currency"}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("private"===t&&"code"in n)throw new r(this.id+" "+this.json(n));if("result"in n&&!n.result)throw new r(this.id+" "+this.json(n));return n}}},885:function(e,t,i){"use strict";const s=i(790);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"chilebit",name:"ChileBit",countries:["CL"],has:{CORS:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/27991414-1298f0d8-647f-11e7-9c40-d56409266336.jpg",api:{public:"https://api.blinktrade.com/api",private:"https://api.blinktrade.com/tapi"},www:"https://chilebit.net",doc:"https://blinktrade.com/docs"},options:{brokerId:"9"}})}}},886:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,InsufficientFunds:a,InvalidNonce:o,InvalidOrder:n,PermissionDenied:d}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"cobinhood",name:"COBINHOOD",countries:["TW"],rateLimit:100,has:{fetchCurrencies:!0,fetchTickers:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchClosedOrders:!0,fetchOrder:!0,fetchDepositAddress:!0,createDepositAddress:!0,withdraw:!0,fetchMyTrades:!0},requiredCredentials:{apiKey:!0,secret:!1},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","3h":"3h","6h":"6h","12h":"12h","1d":"1D","1w":"7D","2w":"14D","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/35755576-dee02e5c-0878-11e8-989f-1595d80ba47f.jpg",api:{web:"https://api.cobinhood.com/v1",ws:"wss://feed.cobinhood.com"},www:"https://cobinhood.com",doc:"https://cobinhood.github.io/api-public"},api:{system:{get:["info","time","messages","messages/{message_id}"]},admin:{get:["system/messages","system/messages/{message_id}"],post:["system/messages"],patch:["system/messages/{message_id}"],delete:["system/messages/{message_id}"]},public:{get:["market/tickers","market/currencies","market/trading_pairs","market/orderbooks/{trading_pair_id}","market/stats","market/tickers/{trading_pair_id}","market/trades/{trading_pair_id}","chart/candles/{trading_pair_id}"]},private:{get:["trading/orders/{order_id}","trading/orders/{order_id}/trades","trading/orders","trading/order_history","trading/trades","trading/trades/{trade_id}","wallet/balances","wallet/ledger","wallet/deposit_addresses","wallet/withdrawal_addresses","wallet/withdrawals/{withdrawal_id}","wallet/withdrawals","wallet/deposits/{deposit_id}","wallet/deposits"],post:["trading/orders","wallet/deposit_addresses","wallet/withdrawal_addresses","wallet/withdrawals"],delete:["trading/orders/{order_id}"]}},fees:{trading:{maker:0,taker:0}},precision:{amount:8,price:8},exceptions:{insufficient_balance:a,invalid_order_size:n,invalid_nonce:o,unauthorized_scope:d},commonCurrencies:{SMT:"SocialMedia.Market"}})}async fetchCurrencies(e={}){let t=(await this.publicGetMarketCurrencies(e)).result.currencies,i={};for(let s=0;s<t.length;s++){let e=t[s],r=e.currency,a=this.commonCurrencyCode(r),o=this.safeFloat(e,"min_unit");i[a]={id:r,code:a,name:e.name,active:!0,fiat:!1,precision:this.precisionFromString(e.min_unit),limits:{amount:{min:o,max:void 0},price:{min:o,max:void 0},deposit:{min:o,max:void 0},withdraw:{min:o,max:void 0}},funding:{withdraw:{fee:this.safeFloat(e,"withdrawal_fee")},deposit:{fee:this.safeFloat(e,"deposit_fee")}},info:e}}return i}async fetchMarkets(){let e=(await this.publicGetMarketTradingPairs()).result.trading_pairs,t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.id,[a,o]=r.split("-"),n=this.commonCurrencyCode(a),d=this.commonCurrencyCode(o),c=n+"/"+d,h={amount:8,price:this.precisionFromString(s.quote_increment)},l=this.safeValue(s,"is_active",!0);t.push({id:r,symbol:c,base:n,quote:d,baseId:a,quoteId:o,active:l,precision:h,limits:{amount:{min:this.safeFloat(s,"base_min_size"),max:this.safeFloat(s,"base_max_size")},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:s})}return t}parseTicker(e,t){if(void 0===t){let i=this.safeString(e,"trading_pair_id");t=this.findMarket(i)}let i=void 0;void 0!==t&&(i=t.symbol);let s=this.safeInteger(e,"timestamp"),r=this.safeFloat(e,"last_trade_price");return{symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(e,"24h_high"),low:this.safeFloat(e,"24h_low"),bid:this.safeFloat(e,"highest_bid"),bidVolume:void 0,ask:this.safeFloat(e,"lowest_ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:this.safeFloat(e,"percentChanged24hr"),percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"24h_volume"),quoteVolume:this.safeFloat(e,"quote_volume"),info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=(await this.publicGetMarketTickersTradingPairId(this.extend({trading_pair_id:i.id},t))).result.ticker;return this.parseTicker(s,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=(await this.publicGetMarketTickers(t)).result.tickers,s=[];for(let r=0;r<i.length;r++)s.push(this.parseTicker(i[r]));return this.indexBy(s,"symbol")}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={trading_pair_id:this.marketId(e)};void 0!==t&&(s.limit=t);let r=await this.publicGetMarketOrderbooksTradingPairId(this.extend(s,i));return this.parseOrderBook(r.result.orderbook,void 0,"bids","asks",0,2)}parseTrade(e,t){let i=void 0;t&&(i=t.symbol);let s=e.timestamp,r=this.safeFloat(e,"price"),a=this.safeFloat(e,"size"),o=parseFloat(this.costToPrecision(i,r*a)),n="bid"===e.maker_side?"sell":"buy";return{info:e,timestamp:s,datetime:this.iso8601(s),symbol:i,id:e.id,order:void 0,type:void 0,side:n,price:r,amount:a,cost:o,fee:void 0}}async fetchTrades(e,t,i=50,s={}){await this.loadMarkets();let r=this.market(e),a=(await this.publicGetMarketTradesTradingPairId(this.extend({trading_pair_id:r.id,limit:i},s))).result.trades;return this.parseTrades(a,r,t,i)}parseOHLCV(e,t,i="5m",s,r){return[e.timestamp,parseFloat(e.open),parseFloat(e.high),parseFloat(e.low),parseFloat(e.close),parseFloat(e.volume)]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),o=this.milliseconds(),n={trading_pair_id:a.id,timeframe:this.timeframes[t],end_time:o};void 0!==i&&(n.start_time=i);let d=(await this.publicGetChartCandlesTradingPairId(this.extend(n,r))).result.candles;return this.parseOHLCVs(d,a,t,i,s)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetWalletBalances(e),i={info:t},s=t.result.balances;for(let r=0;r<s.length;r++){let e=s[r],t=e.currency;t in this.currencies_by_id&&(t=this.currencies_by_id[t].code);let a={used:parseFloat(e.on_order),total:parseFloat(e.total)};a.free=parseFloat(a.total-a.used),i[t]=a}return this.parseBalance(i)}parseOrderStatus(e){let t={filled:"closed",rejected:"closed",partially_filled:"open",pending_cancellation:"open",pending_modification:"open",open:"open",new:"open",queued:"open",cancelled:"canceled",triggered:"triggered"};return e in t?t[e]:e}parseOrder(e,t){let i=void 0;if(void 0===t){let i=this.safeString(e,"trading_pair");i=this.safeString(e,"trading_pair_id",i),t=this.safeValue(this.markets_by_id,i)}void 0!==t&&(i=t.symbol);let s=this.safeInteger(e,"timestamp"),r=this.safeFloat(e,"eq_price"),a=this.safeFloat(e,"size"),o=this.safeFloat(e,"filled"),n=void 0,d=void 0;void 0!==a&&(void 0!==o&&(n=a-o),void 0!==o&&void 0!==r?d=r*o:void 0!==r&&(d=r*a));let c=this.parseOrderStatus(this.safeString(e,"state")),h=this.safeString(e,"side");return"bid"===h?h="buy":"ask"===h&&(h="sell"),{id:this.safeString(e,"id"),datetime:this.iso8601(s),timestamp:s,lastTradeTimestamp:void 0,status:c,symbol:i,type:this.safeString(e,"type"),side:h,price:r,cost:d,amount:a,filled:o,remaining:n,trades:void 0,fee:void 0,info:e}}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e);i="sell"===i?"ask":"bid";let n={trading_pair_id:o.id,type:t,side:i,size:this.amountToString(e,s)};"market"!==t&&(n.price=this.priceToPrecision(e,r));let d=await this.privatePostTradingOrders(this.extend(n,a)),c=this.parseOrder(d.result.order,o),h=c.id;return this.orders[h]=c,c}async cancelOrder(e,t,i={}){let s=await this.privateDeleteTradingOrdersOrderId(this.extend({order_id:e},i));return this.parseOrder(this.extend(s,{id:e}))}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetTradingOrdersOrderId(this.extend({order_id:e.toString()},i));return this.parseOrder(s.result.order)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=await this.privateGetTradingOrders(s),a=this.parseOrders(r.result.orders,void 0,t,i);return void 0!==e?this.filterBySymbol(a,e):a}async fetchOrderTrades(e,t,i={}){await this.loadMarkets();let s=await this.privateGetTradingOrdersOrderIdTrades(this.extend({order_id:e},i)),r=void 0===t?void 0:this.market(t);return this.parseTrades(s.result.trades,r)}async createDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privatePostWalletDepositAddresses({currency:i.id}),r=this.safeString(s.result.deposit_address,"address");return this.checkAddress(r),{currency:e,address:r,info:s}}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privateGetWalletDepositAddresses(this.extend({currency:i.id},t)),r=this.safeValue(s.result,"deposit_addresses",[]),a=void 0;return r.length>0&&(a=this.safeString(r[0],"address")),this.checkAddress(a),{currency:e,address:a,info:s}}async withdraw(e,t,i,s={}){await this.loadMarkets();let r=this.currency(e),a=await this.privatePostWalletWithdrawals(this.extend({currency:r.id,amount:t,address:i},s));return{id:a.result.withdrawal_id,info:a}}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={};void 0!==e&&(a.trading_pair_id=r.id);let o=await this.privateGetTradingTrades(this.extend(a,s));return this.parseTrades(o.result.trades,r,t,i)}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api.web+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));return r={},"private"===t&&(this.checkRequiredCredentials(),r.nonce=this.nonce().toString(),r.Authorization=this.apiKey),"GET"===i?(n=this.urlencode(n)).length&&(o+="?"+n):(r["Content-type"]="application/json; charset=UTF-8",a=this.json(n)),{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if(e<400||e>=600)return;if("{"!==o[0])throw new r(this.id+" "+o);let d=JSON.parse(o);const c=this.id+" "+this.json(d);let h=this.safeValue(d.error,"error_code");if(("DELETE"===s||"GET"===s)&&"parameter_error"===h&&i.indexOf("trading/orders/")>=0)throw new n(c);const l=this.exceptions;if(h in l)throw new l[h](c);throw new r(c)}nonce(){return this.milliseconds()}}},887:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,AuthenticationError:a,DDoSProtection:o}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"coinbase",name:"coinbase",countries:["US"],rateLimit:400,version:"v2",userAgent:this.userAgents.chrome,headers:{"CB-VERSION":"2018-05-30"},has:{CORS:!0,cancelOrder:!1,createDepositAddress:!1,createOrder:!1,deposit:!1,fetchBalance:!0,fetchClosedOrders:!1,fetchCurrencies:!0,fetchDepositAddress:!1,fetchMarkets:!1,fetchMyTrades:!1,fetchOHLCV:!1,fetchOpenOrders:!1,fetchOrder:!1,fetchOrderBook:!1,fetchOrders:!1,fetchTicker:!0,fetchTickers:!1,fetchBidsAsks:!1,fetchTrades:!1,withdraw:!1,fetchTransactions:!1,fetchDeposits:!1,fetchWithdrawals:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/40811661-b6eceae2-653a-11e8-829e-10bfadb078cf.jpg",api:"https://api.coinbase.com",www:"https://www.coinbase.com",doc:"https://developers.coinbase.com/api/v2",fees:"https://support.coinbase.com/customer/portal/articles/2109597-buy-sell-bank-transfer-fees",referral:"https://www.coinbase.com/join/58cbe25a355148797479dbd2"},requiredCredentials:{apiKey:!0,secret:!0},api:{public:{get:["currencies","time","exchange-rates","users/{user_id}","prices/{symbol}/buy","prices/{symbol}/sell","prices/{symbol}/spot"]},private:{get:["accounts","accounts/{account_id}","accounts/{account_id}/addresses","accounts/{account_id}/addresses/{address_id}","accounts/{account_id}/addresses/{address_id}/transactions","accounts/{account_id}/transactions","accounts/{account_id}/transactions/{transaction_id}","accounts/{account_id}/buys","accounts/{account_id}/buys/{buy_id}","accounts/{account_id}/sells","accounts/{account_id}/sells/{sell_id}","accounts/{account_id}/deposits","accounts/{account_id}/deposits/{deposit_id}","accounts/{account_id}/withdrawals","accounts/{account_id}/withdrawals/{withdrawal_id}","payment-methods","payment-methods/{payment_method_id}","user","user/auth"],post:["accounts","accounts/{account_id}/primary","accounts/{account_id}/addresses","accounts/{account_id}/transactions","accounts/{account_id}/transactions/{transaction_id}/complete","accounts/{account_id}/transactions/{transaction_id}/resend","accounts/{account_id}/buys","accounts/{account_id}/buys/{buy_id}/commit","accounts/{account_id}/sells","accounts/{account_id}/sells/{sell_id}/commit","accounts/{account_id}/deposists","accounts/{account_id}/deposists/{deposit_id}/commit","accounts/{account_id}/withdrawals","accounts/{account_id}/withdrawals/{withdrawal_id}/commit"],put:["accounts/{account_id}","user"],delete:["accounts/{id}","accounts/{account_id}/transactions/{transaction_id}"]}},exceptions:{two_factor_required:a,param_required:r,validation_error:r,invalid_request:r,personal_details_required:a,identity_verification_required:a,jumio_verification_required:a,jumio_face_match_verification_required:a,unverified_email:a,authentication_error:a,invalid_token:a,revoked_token:a,expired_token:a,invalid_scope:a,not_found:r,rate_limit_exceeded:o,internal_server_error:r},markets:{"BTC/USD":{id:"btc-usd",symbol:"BTC/USD",base:"BTC",quote:"USD"},"LTC/USD":{id:"ltc-usd",symbol:"LTC/USD",base:"LTC",quote:"USD"},"ETH/USD":{id:"eth-usd",symbol:"ETH/USD",base:"ETH",quote:"USD"},"BCH/USD":{id:"bch-usd",symbol:"BCH/USD",base:"BCH",quote:"USD"}},options:{accounts:["wallet","fiat"]}})}async fetchTime(){let e=(await this.publicGetTime()).data;return this.parse8601(e.iso)}async fetchCurrencies(e={}){let t=(await this.publicGetCurrencies(e)).data,i={};for(let s=0;s<t.length;s++){let e=t[s],r=e.id,a=e.name,o=this.commonCurrencyCode(r),n=this.safeFloat(e,"min_size");i[o]={id:r,code:o,info:e,name:a,active:!0,fee:void 0,precision:void 0,limits:{amount:{min:n,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}}}}return i}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.seconds(),s=this.market(e),r=this.extend({symbol:s.id},t),a=await this.publicGetPricesSymbolBuy(r),o=await this.publicGetPricesSymbolSell(r),n=await this.publicGetPricesSymbolSpot(r),d=this.safeFloat(a.data,"amount"),c=this.safeFloat(o.data,"amount"),h=this.safeFloat(n.data,"amount");return{symbol:e,timestamp:i,datetime:this.iso8601(i),bid:c,ask:d,last:h,high:void 0,low:void 0,bidVolume:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:void 0,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:void 0,info:{buy:a,sell:o,spot:n}}}async fetchBalance(e={}){let t=await this.privateGetAccounts(),i=t.data,s=this.safeValue(e,"type",this.options.accounts),r={info:t};for(let a=0;a<i.length;a++){let e=i[a];if(this.inArray(e.type,s)){let t=e.balance.currency,i=t;t in this.currencies_by_id&&(i=this.currencies_by_id[t].code);let s=this.safeFloat(e.balance,"amount"),a=s,o=void 0;if(i in r)r[i].free+=s,r[i].total+=s;else{let e={free:a,used:o,total:s};r[i]=e}}}return this.parseBalance(r)}sign(e,t="public",i="GET",s={},r,a){let o="/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));"GET"===i&&Object.keys(n).length&&(o+="?"+this.urlencode(n));let d=this.urls.api+"/"+this.version+o;if("private"===t){this.checkRequiredCredentials();let e=this.nonce().toString(),t="";"GET"!==i&&Object.keys(n).length&&(t=a=this.json(n));let s=e+i+"/"+this.version+o+t,d=this.hmac(this.encode(s),this.encode(this.secret));r={"CB-ACCESS-KEY":this.apiKey,"CB-ACCESS-SIGN":d,"CB-ACCESS-TIMESTAMP":e,"Content-Type":"application/json"}}return{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if("string"==typeof o&&!(o.length<2||"{"!==o[0]&&"["!==o[0])){let e=JSON.parse(o),t=this.id+" "+o,i=this.exceptions,s=this.safeString(e,"error");if(void 0!==s)throw s in i?new i[s](t):new r(t);let a=this.safeValue(e,"errors");if(void 0!==a&&Array.isArray(a)){if(a.length>0&&void 0!==(s=this.safeString(a[0],"id")))throw s in i?new i[s](t):new r(t)}if(void 0===this.safeValue(e,"data"))throw new r(this.id+" failed due to a malformed response "+this.json(e))}}}},888:function(e,t,i){"use strict";const s=i(814);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"coinbasepro",name:"Coinbase Pro",urls:{logo:"https://user-images.githubusercontent.com/1294454/41764625-63b7ffde-760a-11e8-996d-a6328fa9347a.jpg",api:"https://api.pro.coinbase.com",www:"https://pro.coinbase.com/",doc:"https://docs.gdax.com",fees:["https://www.gdax.com/fees","https://support.gdax.com/customer/en/portal/topics/939402-depositing-and-withdrawing-funds/articles"]}})}}},889:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,NotSupported:a}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"coincheck",name:"coincheck",countries:["JP","ID"],rateLimit:1500,has:{CORS:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766464-3b5c3c74-5ed9-11e7-840e-31b32968e1da.jpg",api:"https://coincheck.com/api",www:"https://coincheck.com",doc:"https://coincheck.com/documents/exchange/api"},api:{public:{get:["exchange/orders/rate","order_books","rate/{pair}","ticker","trades"]},private:{get:["accounts","accounts/balance","accounts/leverage_balance","bank_accounts","deposit_money","exchange/orders/opens","exchange/orders/transactions","exchange/orders/transactions_pagination","exchange/leverage/positions","lending/borrows/matches","send_money","withdraws"],post:["bank_accounts","deposit_money/{id}/fast","exchange/orders","exchange/transfers/to_leverage","exchange/transfers/from_leverage","lending/borrows","lending/borrows/{id}/repay","send_money","withdraws"],delete:["bank_accounts/{id}","exchange/orders/{id}","withdraws/{id}"]}},markets:{"BTC/JPY":{id:"btc_jpy",symbol:"BTC/JPY",base:"BTC",quote:"JPY"}}})}async fetchBalance(e={}){let t=await this.privateGetAccountsBalance(),i={info:t},s=Object.keys(this.currencies);for(let r=0;r<s.length;r++){let e=s[r],a=e.toLowerCase(),o=this.account();a in t&&(o.free=parseFloat(t[a]));let n=a+"_reserved";n in t&&(o.used=parseFloat(t[n])),o.total=this.sum(o.free,o.used),i[e]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){if("BTC/JPY"!==e)throw new a(this.id+" fetchOrderBook () supports BTC/JPY only");let s=await this.publicGetOrderBooks(i);return this.parseOrderBook(s)}async fetchTicker(e,t={}){if("BTC/JPY"!==e)throw new a(this.id+" fetchTicker () supports BTC/JPY only");let i=await this.publicGetTicker(t),s=1e3*i.timestamp,r=this.safeFloat(i,"last");return{symbol:e,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(i,"high"),low:this.safeFloat(i,"low"),bid:this.safeFloat(i,"bid"),bidVolume:void 0,ask:this.safeFloat(i,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(i,"volume"),quoteVolume:void 0,info:i}}parseTrade(e,t){let i=this.parse8601(e.created_at);return{id:e.id.toString(),timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:e.order_type,price:this.safeFloat(e,"rate"),amount:this.safeFloat(e,"amount"),info:e}}async fetchTrades(e,t,i,s={}){if("BTC/JPY"!==e)throw new a(this.id+" fetchTrades () supports BTC/JPY only");let o=this.market(e),n=await this.publicGetTrades(this.extend({pair:o.id},s));if("success"in n&&n.success&&void 0!==n.data)return this.parseTrades(n.data,o,t,i);throw new r(this.id+" "+this.json(n))}async createOrder(e,t,i,s,r,a={}){let o={pair:this.marketId(e)};if("market"===t){let e=t+"_"+i;o.order_type=e,o[("buy"===i?e+"_":"")+"amount"]=s}else o.order_type=i,o.rate=r,o.amount=s;let n=await this.privatePostExchangeOrders(this.extend(o,a));return{info:n,id:n.id.toString()}}async cancelOrder(e,t,i={}){return await this.privateDeleteExchangeOrdersId({id:e})}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials();let e=this.nonce().toString(),t="";"GET"===i?Object.keys(n).length&&(o+="?"+this.urlencode(this.keysort(n))):Object.keys(n).length&&(t=a=this.urlencode(this.keysort(n)));let s=e+o+t;r={"Content-Type":"application/x-www-form-urlencoded","ACCESS-KEY":this.apiKey,"ACCESS-NONCE":e,"ACCESS-SIGNATURE":this.hmac(this.encode(s),this.encode(this.secret))}}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("public"===t)return n;if("success"in n&&n.success)return n;throw new r(this.id+" "+this.json(n))}}},890:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,InsufficientFunds:a,OrderNotFound:o,InvalidOrder:n,AuthenticationError:d}=i(787),{ROUND:c,TRUNCATE:h}=i(789);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"coinex",name:"CoinEx",version:"v1",countries:["CN"],rateLimit:1e3,has:{fetchTickers:!0,fetchOHLCV:!0,fetchOrder:!0,fetchOpenOrders:!0,fetchClosedOrders:!0,fetchMyTrades:!0},timeframes:{"1m":"1min","3m":"3min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","2h":"2hour","4h":"4hour","6h":"6hour","12h":"12hour","1d":"1day","3d":"3day","1w":"1week"},urls:{logo:"https://user-images.githubusercontent.com/1294454/38046312-0b450aac-32c8-11e8-99ab-bc6b136b6cc7.jpg",api:{public:"https://api.coinex.com",private:"https://api.coinex.com",web:"https://www.coinex.com"},www:"https://www.coinex.com",doc:"https://github.com/coinexcom/coinex_exchange_api/wiki",fees:"https://www.coinex.com/fees",referral:"https://www.coinex.com/account/signup?refer_code=yw5fz"},api:{web:{get:["res/market"]},public:{get:["market/list","market/ticker","market/ticker/all","market/depth","market/deals","market/kline"]},private:{get:["balance","order","order/pending","order/finished","order/finished/{id}","order/user/deals"],post:["order/limit","order/market"],delete:["order/pending"]}},fees:{trading:{maker:0,taker:.001},funding:{withdraw:{BCH:0,BTC:.001,LTC:.001,ETH:.001,ZEC:1e-4,DASH:1e-4}}},limits:{amount:{min:.001,max:void 0}},precision:{amount:8,price:8}})}costToPrecision(e,t){return this.decimalToPrecision(t,c,this.markets[e].precision.price)}priceToPrecision(e,t){return this.decimalToPrecision(t,c,this.markets[e].precision.price)}amountToPrecision(e,t){return this.decimalToPrecision(t,h,this.markets[e].precision.amount)}feeToPrecision(e,t){return this.decimalToPrecision(t,c,this.currencies[e].precision)}async fetchMarkets(){let e=(await this.webGetResMarket()).data.market_info,t=[],i=Object.keys(e);for(let s=0;s<i.length;s++){let r=e[i[s]],a=r.market,o=r.buy_asset_type,n=r.sell_asset_type,d=this.commonCurrencyCode(n),c=this.commonCurrencyCode(o),h=d+"/"+c,l={amount:r.sell_asset_type_places,price:r.buy_asset_type_places},u=r.merge.length,p="pass"===r.status;t.push({id:a,symbol:h,base:d,quote:c,baseId:n,quoteId:o,active:p,taker:this.safeFloat(r,"taker_fee_rate"),maker:this.safeFloat(r,"maker_fee_rate"),info:r,precision:l,limits:{amount:{min:this.safeFloat(r,"least_amount"),max:void 0},price:{min:parseFloat(r.merge[u-1]),max:void 0}}})}return t}parseTicker(e,t){let i=e.date,s=t.symbol;e=e.ticker;let r=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"vol"),quoteVolume:void 0,info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetMarketTicker(this.extend({market:i.id},t));return this.parseTicker(s.data,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=(await this.publicGetMarketTickerAll(t)).data,s=i.date,r=i.ticker,a=Object.keys(r),o={};for(let n=0;n<a.length;n++){let e=a[n],t=this.markets_by_id[e],i=t.symbol,d={date:s,ticker:r[e]};o[i]=this.parseTicker(d,t)}return o}async fetchOrderBook(e,t=20,i={}){await this.loadMarkets(),void 0===t&&(t=20);const s={market:this.marketId(e),merge:"0.00000001",limit:t.toString()};let r=await this.publicGetMarketDepth(this.extend(s,i));return this.parseOrderBook(r.data)}parseTrade(e,t){let i=1e3*this.safeInteger(e,"create_time");void 0===i&&(i=this.safeInteger(e,"date_ms"));let s=this.safeString(e,"id"),r=this.safeString(e,"order_id"),a=this.safeFloat(e,"price"),o=this.safeFloat(e,"amount"),n=t.symbol,d=this.safeFloat(e,"deal_money");d||(d=parseFloat(this.costToPrecision(n,a*o)));let c={cost:this.safeFloat(e,"fee"),currency:this.safeString(e,"fee_asset")},h=this.safeString(e,"role"),l=this.safeString(e,"type");return{info:e,timestamp:i,datetime:this.iso8601(i),symbol:n,id:s,order:r,type:void 0,side:l,takerOrMaker:h,price:a,amount:o,cost:d,fee:c}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetMarketDeals(this.extend({market:r.id},s));return this.parseTrades(a.data,r,t,i)}parseOHLCV(e,t,i="5m",s,r){return[e[0],parseFloat(e[1]),parseFloat(e[3]),parseFloat(e[4]),parseFloat(e[2]),parseFloat(e[5])]}async fetchOHLCV(e,t="5m",i,s,r={}){await this.loadMarkets();let a=this.market(e),o=await this.publicGetMarketKline(this.extend({market:a.id,type:this.timeframes[t]},r));return this.parseOHLCVs(o.data,a,t,i,s)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetBalance(e),i={info:t},s=t.data,r=Object.keys(s);for(let a=0;a<r.length;a++){let e=r[a],t=s[e],o=this.commonCurrencyCode(e),n={free:parseFloat(t.available),used:parseFloat(t.frozen),total:0};n.total=this.sum(n.free,n.used),i[o]=n}return this.parseBalance(i)}parseOrderStatus(e){let t={not_deal:"open",part_deal:"open",done:"closed",cancel:"canceled"};return e in t?t[e]:e}parseOrder(e,t){let i=1e3*this.safeInteger(e,"create_time"),s=this.safeFloat(e,"price"),r=this.safeFloat(e,"deal_money"),a=this.safeFloat(e,"amount"),o=this.safeFloat(e,"deal_amount"),n=t.symbol,d=this.amountToPrecision(n,a-o),c=this.parseOrderStatus(e.status);return{id:this.safeString(e,"id"),datetime:this.iso8601(i),timestamp:i,lastTradeTimestamp:void 0,status:c,symbol:n,type:e.order_type,side:e.type,price:s,cost:r,amount:a,filled:o,remaining:d,trades:void 0,fee:{currency:t.quote,cost:this.safeFloat(e,"deal_fee")},info:e}}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o="privatePostOrder"+this.capitalize(t),n=this.market(e);s=parseFloat(s);let d={market:n.id,amount:this.amountToPrecision(e,s),type:i};"limit"===t&&(r=parseFloat(r),d.price=this.priceToPrecision(e,r));let c=await this[o](this.extend(d,a)),h=this.parseOrder(c.data,n),l=h.id;return this.orders[l]=h,h}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t),r=await this.privateDeleteOrderPending(this.extend({id:e,market:s.id},i));return this.parseOrder(r.data,s)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t),r=await this.privateGetOrder(this.extend({id:e,market:s.id},i));return this.parseOrder(r.data,s)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={market:r.id};void 0!==i&&(a.limit=i);let o=await this.privateGetOrderPending(this.extend(a,s));return this.parseOrders(o.data.data,r)}async fetchClosedOrders(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={market:r.id};void 0!==i&&(a.limit=i);let o=await this.privateGetOrderFinished(this.extend(a,s));return this.parseOrders(o.data.data,r)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.privateGetOrderUserDeals(this.extend({market:r.id,page:1,limit:100},s));return this.parseTrades(a.data.data,r,t,i)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){e=this.implodeParams(e,s);let o=this.urls.api[t]+"/"+this.version+"/"+e,n=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(n).length&&(o+="?"+this.urlencode(n));else if("web"===t)o=this.urls.api[t]+"/"+e,Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials();let e=this.nonce();n=this.extend({access_id:this.apiKey,tonce:e.toString()},n),n=this.keysort(n);let t=this.urlencode(n);r={Authorization:this.hash(this.encode(t+"&secret_key="+this.secret)).toUpperCase(),"Content-Type":"application/json"},"GET"===i||"DELETE"===i?o+="?"+t:a=this.json(n)}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},c,h){let l=await this.fetch2(e,t,i,s,c,h),u=this.safeString(l,"code"),p=this.safeValue(l,"data");if("0"!==u||!p){let e={24:d,25:d,107:a,600:o,601:n,602:n,606:n};throw new(this.safeValue(e,u,r))(l.message)}return l}}},891:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"coinexchange",name:"CoinExchange",countries:["IN","JP","KR","VN","US"],rateLimit:1e3,has:{privateAPI:!1,createOrder:!1,createMarketOrder:!1,createLimitOrder:!1,cancelOrder:!1,editOrder:!1,fetchTrades:!1,fetchOHLCV:!1,fetchCurrencies:!0,fetchTickers:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/34842303-29c99fca-f71c-11e7-83c1-09d900cb2334.jpg",api:"https://www.coinexchange.io/api/v1",www:"https://www.coinexchange.io",doc:"https://coinexchangeio.github.io/slate/",fees:"https://www.coinexchange.io/fees"},api:{public:{get:["getcurrency","getcurrencies","getmarkets","getmarketsummaries","getmarketsummary","getorderbook"]}},fees:{trading:{maker:.0015,taker:.0015},funding:{withdraw:{1337:.01,"420G":.01,611:.1,ACC:.01,ACES:.01,ACO:.01,ACP:.01,ADCN:500,ADST:1,ADZ:.1,AGRI:.01,AI:1,AKY:.01,ALIS:1,ALL:.2,AMC:.1,AMMO:.01,AMS:.01,ANTX:.01,ANY:1,ARG:.1,ARGUS:.01,ARGUSOLD:.01,ASN:.01,ATOM:.01,ATX:.01,AU:.01,B2B:1,B3:.01,BAKED:.01,BCC:.01,BCH:.001,BCM:.01,BDL:.01,BEER:.01,BELA:.01,BENJI:.05,BET:.01,BFI:1,BIGUP:1,BIRDS:.01,BITB:.1,BIXC:.01,BIZ:.01,BLAS:.1,BLAZR:.2,BLK:.01,BLN:1,BLUE:1,BOAT:1,BON:.01,BONPAY:1,BOPS:.01,BPOK:.1,BQ:1,BRAT:.01,BRC:1,BRIT:.01,BSN:1,BSR:.01,BTBc:.01,BTC:.001,BTCRED:1,BTCRF:.01,BTDX:.1,BTE:1,BTPL:.01,BULLS:.01,BUZZ:.01,BXT:.01,C47:1,CACH:.2,CALC:.01,CANN:.01,CBANK:1,CDX:1,CHEAP:.01,CHESS:.01,CHILI:.01,CHIPS:.1,CJ:.1,CLT:.1,CMPCO:.2,CMX:.01,CNNC:.02,CNT:.01,CO2:1,COOC:.01,COUPE:.01,CQST:.1,CRACKERS:.01,CRDNC:.01,CREA:.02,CREAK:.01,CREVA2:.01,CRMSN:.01,CRN:.01,CRW:.01,CTIC2:.01,CUBE:.01,CXT:.01,CYCLONE:.01,CYDER:.01,DAG:.01,DALC:1,DARI:.01,DASH:.01,DAV:.01,DBIC:.1,DCN:1,DEM:.01,DFS:.01,DGB:.1,DGC:.1,DIME:.01,DMB:.01,DMC:.1,DNCV2:.01,DNE:1,DNR:.01,DOGE:2,DOGEJ:1,DP:.01,DRGN:1,DRS:.1,DSE:.01,DSR:.01,DTCT:1,DUTCH:.01,EBC:.01,EBT:.01,ECC:.1,ECN:.01,EDRC:.01,EECN:.01,EGC:.1,ELCO:.1,ELIX:1,ELS:.01,ELT:1,EMC:.01,EMIRG:.01,ENTRC:1,ENZO:.1,EQL:1,EQT:.1,ERSO:.01,ERT:1,ERY:.01,ESP:.1,ETBS:1,ETC:.1,ETG:1,ETH:.01,ETHD:.01,ETHOS:1,ETN:2,EUROP:.1,EXCL:.1,EXTN:.01,FAIR:.01,FAP:1,FAZZ:.01,FCH:.01,FGZ:.1,FLASH:.01,FLIK:1,FRT:.1,FSX:.1,FTC:.01,FXE:2,GAIN:1,GB:.1,GBX:.01,GDC:1,GEERT:.01,GET:.01,GFC:1,GLS:.01,GLT:.01,GLTC:.01,GMB:.01,GMX:.01,GOKUOLD:.1,GOLD:.01,GOLF:.1,GOOD:2,GP:.01,GRE:.01,GREENF:.01,GRMD:1,GRS:.01,GRX:1,GTC:.01,GWC:.2,HALLO:.01,HBC:.01,HC:.01,HEALTHY:.01,HIGH:.01,HarmonyCoin:.01,HNC:.01,HOC:.01,HODL:.01,HOLLY:1,HONEY:.01,HOPE:.01,HPC:.01,HUB:1,HYP:.01,HYPER:.01,IBC:1,ICE:1,ICOT:1,IFT:1,ILC:.01,IMX:.01,INDIA:.01,INFO:.01,INSN:.01,INXT:1,IOE:.01,IQT:1,IXC:.01,JAPAN:.01,JEDI:.01,JET:1,JIN:.2,KAYI:.01,KB3:.01,KGB:.01,KLC:.1,KMD:.01,KOBO:1,KOI:.01,KORUNA:.1,KRA:.01,KUBO:.01,KURT:.01,LA:1,LAMBO:.01,LCT:1,LDC:.01,LEVO:.1,LIFE:1,LINDA:.01,LINX:.01,LIZ:.01,LMC:.1,LNK:.05,LRC:1,LTC:.01,LTG:1,LUCK:.01,LUNA:.01,LVPS:.01,MAC:2,MAG:.01,MALC:.01,MARS:.01,MARS2:.01,MAXI:.01,MAY:.01,MBC:.01,MBIT:.01,MCB:1,MEC:.1,MENTAL:.1,MER:.1,MET:.01,MGM:.01,MGT:.01,MILO:.5,MINEX:1,MINT:1,MIPS:1,MNX:.01,MOIN:.1,MOON:.1,MSCN:.01,MSP:1,MST:.1,MTH:1,MUE:.1,MUX:1,MXC:.01,MXT:.1,MYB:1,NBIT:.1,NBX:.01,NEOG:1,NEON:.01,NLC2:.01,NLG:.1,NRN:.01,NRO:.01,NTC:1,NTO:1,NUA:1,NUMUS:.01,OC:.01,OGN:.01,ORO:.01,PARIS:.01,PAYU:.1,PCN:1,PCS:.01,PDG:.01,PEC:.01,PGL:1,PHN:1,PICO:.1,PIE:.01,PIGGY:.1,PIVX:.2,PIX:1,PKT:1,PLACO:.01,PLX:1,POL:.01,POLOB:.1,POS:1,POST:1,POSW:.01,POT:.1,PRE:1,PRIMU:.01,PRL:1,PRN:1,PRX:.01,PT:1,PTS:1,PURA:1,PURE:.01,PUT:.1,PWC:.01,PWR:.1,QTUM:.01,QUANT:.01,RAIN:.5,RBL:.01,RDC:.01,REC:.01,REGA:.1,REX:1,RHO:.1,RIYA:1,RMC:2,RNS:.01,ROC:0,ROOFS:.01,RUB:.01,RUNE:.01,RUNNERS:.01,RUP:.01,SBIT:.01,SCL:1,SCORE:.01,SCOREOLD:.01,SDASH:.01,SFC:.01,SFE:.01,SGR:1,SHIT:.1,SHM:.1,SHND:.1,SHOT:.1,SIC:.1,SILK2:.01,SIMP:.001,SISA:1,SKOIN:.01,SKULL:.01,SLEVIN:.01,SLR:.01,SMART:.01,SMS:.002,SNOW:.01,SOLAR:.01,SPRTS:1,SRC:.01,SST:.1,STARS:.01,STN:.01,STO:.01,STX:1,SUPER:.01,SUPERMAN:.01,SURGE:.01,SWC:.1,SYNQ:.01,SYNX:.01,TAAS:2,TBS:.01,TCOIN:.01,TELL:.1,TER:.005,TGT:1,TIGER:.01,TIPS:.01,TLE:.01,TOPAZ:.01,TOR:.01,TPC:.01,TPG:.01,TPI:1,TRANCE:.01,TRC:.01,TRUX:.01,TSE:.1,TSTR:.01,TURBO:.01,UFO:.01,UK:.01,ULA:.01,UNIFY:0,UNIT:.1,UNO:.001,UP:.01,UQC:1,USA:.01,VC:.01,VGS:.01,VIDZ:.01,VISIO:.05,VLTC:.1,VOISE:1,VONE:.01,VOX:.01,VSX:.01,VULCANO:.01,WASH:.1,WCL:1,WINK:.01,WOMEN:.01,WORM:.01,WOW:.1,WRP:.01,WYV:.01,XBC:.01,XBL:1,XBU:1,XCHE:.1,XCS:.01,XCT:.01,XCXT:.01,XDE2:.01,XEV:.1,XGOX:.01,XGTC:.01,XLR:.1,XMCC:.01,XP:1,XPASC:.01,XQN:.01,XSA:.1,XSTC:2,XTD:.01,XVS:.01,XXX:.1,XYOC:1,XYZ:.01,XZC:.1,XZCD:.01,YHC:.01,ZCC:.01,ZCG:1,ZCL:.001,ZEC:.001,ZEIT:.1,ZENI:.01,ZERO:.01,ZMC:.1,ZOI:.01,ZSE:.01,ZURMO:.1,ZZC:.01}}},precision:{amount:8,price:8},commonCurrencies:{ACC:"AdCoin",ANC:"AnyChain",BON:"BonPeKaO",BONPAY:"BON",eNAU:"ENAU",ETN:"Ethernex",FRC:"FireRoosterCoin",GET:"GreenEnergyToken",GDC:"GoldenCryptoCoin",GOLD:"GoldenCoin",GTC:"GlobalTourCoin",HMC:"HarmonyCoin",HNC:"Huncoin",IBC:"RCoin",MARS:"MarsBux",MER:"TheMermaidCoin",OC:"occnetwork",PUT:"PutinCoin",RUB:"RubbleCoin",UP:"UpscaleToken",VULCANO:"VULC"}})}async fetchCurrencies(e={}){let t=(await this.publicGetGetcurrencies(e)).result,i=this.precision.amount,s={};for(let r=0;r<t.length;r++){let e=t[r],a=e.CurrencyID,o=this.commonCurrencyCode(e.TickerCode),n="online"===e.WalletStatus;s[o]={id:a,code:o,name:e.Name,active:n,precision:i,limits:{amount:{min:void 0,max:Math.pow(10,i)},price:{min:Math.pow(10,-i),max:Math.pow(10,i)},cost:{min:void 0,max:void 0},withdraw:{min:void 0,max:Math.pow(10,i)}},info:e}}return s}async fetchMarkets(){let e=(await this.publicGetGetmarkets()).result,t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.MarketID,a=this.safeString(s,"MarketAssetCode"),o=this.safeString(s,"BaseCurrencyCode");if(void 0!==a&&void 0!==o){let e=this.commonCurrencyCode(a),i=this.commonCurrencyCode(o),n=e+"/"+i;t.push({id:r,symbol:n,base:e,quote:i,baseId:a,quoteId:o,active:s.Active,info:s})}}return t}parseTicker(e,t){let i=void 0;if(void 0===t){let s=e.MarketID;s in this.markets_by_id?t=this.markets_by_id[s]:i=s}t&&(i=t.symbol);let s=this.milliseconds(),r=this.safeFloat(e,"LastPrice");return{symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(e,"HighPrice"),low:this.safeFloat(e,"LowPrice"),bid:this.safeFloat(e,"BidPrice"),bidVolume:void 0,ask:this.safeFloat(e,"AskPrice"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:this.safeFloat(e,"Change"),percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:this.safeFloat(e,"Volume"),info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetGetmarketsummary(this.extend({market_id:i.id},t));return this.parseTicker(s.result,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=(await this.publicGetGetmarketsummaries(t)).result,s={};for(let r=0;r<i.length;r++){let e=this.parseTicker(i[r]);s[e.symbol]=e}return s}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetGetorderbook(this.extend({market_id:this.marketId(e)},i));return this.parseOrderBook(s.result,void 0,"BuyOrders","SellOrders","Price","Quantity")}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+e;return"public"===t&&Object.keys(s).length&&(o+="?"+this.urlencode(s)),{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if(1!==this.safeInteger(n,"success")){let e=this.safeString(n,"message","Error");throw new r(e)}return n}}},892:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,AuthenticationError:a,DDoSProtection:o}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"coinfalcon",name:"CoinFalcon",countries:["GB"],rateLimit:1e3,has:{fetchTickers:!0,fetchOpenOrders:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/41822275-ed982188-77f5-11e8-92bb-496bcd14ca52.jpg",api:"https://coinfalcon.com/api/v1",www:"https://coinfalcon.com",doc:"https://docs.coinfalcon.com",fees:"https://coinfalcon.com/fees",referral:"https://coinfalcon.com/?ref=CFJSVGTUPASB"},api:{public:{get:["markets","markets/{market}/orders","markets/{market}/trades"]},private:{get:["user/accounts","user/orders","user/trades"],post:["user/orders"],delete:["user/orders"]}},fees:{trading:{maker:.0025,taker:.0025}},precision:{amount:8,price:8}})}async fetchMarkets(){let e=(await this.publicGetMarkets()).data,t=[];for(let i=0;i<e.length;i++){let s=e[i],[r,a]=s.name.split("-"),o=this.commonCurrencyCode(r),n=this.commonCurrencyCode(a),d=o+"/"+n,c={amount:this.safeInteger(s,"size_precision"),price:this.safeInteger(s,"price_precision")};t.push({id:s.name,symbol:d,base:o,quote:n,baseId:r,quoteId:a,active:!0,precision:c,limits:{amount:{min:Math.pow(10,-c.amount),max:void 0},price:{min:Math.pow(10,-c.price),max:void 0},cost:{min:void 0,max:void 0}},info:s})}return t}parseTicker(e,t){if(void 0===t){let i=e.name;t=this.marketsById[i]}let i=t.symbol,s=this.milliseconds(),r=parseFloat(e.last_price);return{symbol:i,timestamp:s,datetime:this.iso8601(s),high:void 0,low:void 0,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:parseFloat(e.change_in_24h),percentage:void 0,average:void 0,baseVolume:parseFloat(e.volume),quoteVolume:void 0,info:e}}async fetchTicker(e,t={}){return await this.loadMarkets(),(await this.fetchTickers(t))[e]}async fetchTickers(e,t={}){let i=(await this.publicGetMarkets()).data,s={};for(let r=0;r<i.length;r++){let e=this.parseTicker(i[r]);s[e.symbol]=e}return s}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetMarketsMarketOrders(this.extend({market:this.marketId(e),level:"3"},i));return this.parseOrderBook(s.data,void 0,"bids","asks","price","size")}parseTrade(e,t){let i=this.parse8601(e.created_at),s=parseFloat(e.price),r=parseFloat(e.size),a=t.symbol,o=parseFloat(this.costToPrecision(a,s*r));return{info:e,timestamp:i,datetime:this.iso8601(i),symbol:a,id:void 0,order:void 0,type:void 0,side:void 0,price:s,amount:r,cost:o,fee:void 0}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={market:r.id};void 0!==t&&(a.since=this.iso8601(t));let o=await this.publicGetMarketsMarketTrades(this.extend(a,s));return this.parseTrades(o.data,r,t,i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetUserAccounts(e),i={info:t},s=t.data;for(let r=0;r<s.length;r++){let e=s[r],t=this.safeString(e,"currency_code").toUpperCase(),a=this.commonCurrencyCode(t);t in this.currencies_by_id&&(a=this.currencies_by_id[t].code);let o={free:parseFloat(e.available_balance),used:parseFloat(e.hold_balance),total:parseFloat(e.balance)};i[a]=o}return this.parseBalance(i)}parseOrder(e,t){void 0===t&&(t=this.marketsById[e.market]);let i=t.symbol,s=this.parse8601(e.created_at),r=parseFloat(e.price),a=this.safeFloat(e,"size"),o=this.safeFloat(e,"size_filled"),n=this.amountToPrecision(i,a-o),d=this.priceToPrecision(i,a*r),c=e.status;c="fulfilled"===c?"closed":"canceled"===c?"canceled":"open";let h=e.operation_type.split("_");return{id:this.safeString(e,"id"),datetime:this.iso8601(s),timestamp:s,status:c,symbol:i,type:h[0],side:e.order_type,price:r,cost:d,amount:a,filled:o,remaining:n,trades:void 0,fee:void 0,info:e}}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e);s=this.amountToPrecision(e,parseFloat(s));let n={market:o.id,size:s.toString(),order_type:i};"limit"===t&&(r=this.priceToPrecision(e,parseFloat(r)),n.price=r.toString()),n.operation_type=t+"_order";let d=await this.privatePostUserOrders(this.extend(n,a)),c=this.parseOrder(d.data,o),h=c.id;return this.orders[h]=c,c}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateDeleteUserOrders(this.extend({id:e},i)),r=this.market(t);return this.parseOrder(s.data,r)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r={};void 0!==e&&(r.market=this.marketId(e)),void 0!==t&&(r.since_time=this.iso8601(this.milliseconds()));let a=await this.privateGetUserOrders(this.extend(r,s));return this.parseOrders(a.data)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials(),"GET"===i?Object.keys(n).length&&(o+="?"+this.urlencode(n)):a=this.json(n);let e=this.seconds().toString(),t=o.split("/"),s=[e,i,t="/"+(t=t.slice(3)).join("/")].join("|");a&&(s+="|"+a);let d=this.hmac(this.encode(s),this.encode(this.secret));r={"CF-API-KEY":this.apiKey,"CF-API-TIMESTAMP":e,"CF-API-SIGNATURE":d,"Content-Type":"application/json"}}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,n,d){if(e<400)return;throw new(this.safeValue({401:a,429:o},e,r))(d)}}},893:function(e,t,i){"use strict";const s=i(788),{NotSupported:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"coinfloor",name:"coinfloor",rateLimit:1e3,countries:["UK"],has:{CORS:!1,fetchOpenOrders:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/28246081-623fc164-6a1c-11e7-913f-bac0d5576c90.jpg",api:"https://webapi.coinfloor.co.uk:8090/bist",www:"https://www.coinfloor.co.uk",doc:["https://github.com/coinfloor/api","https://www.coinfloor.co.uk/api"]},requiredCredentials:{apiKey:!0,secret:!1,password:!0,uid:!0},api:{public:{get:["{id}/ticker/","{id}/order_book/","{id}/transactions/"]},private:{post:["{id}/balance/","{id}/user_transactions/","{id}/open_orders/","{id}/cancel_order/","{id}/buy/","{id}/sell/","{id}/buy_market/","{id}/sell_market/","{id}/estimate_sell_market/","{id}/estimate_buy_market/"]}},markets:{"BTC/GBP":{id:"XBT/GBP",symbol:"BTC/GBP",base:"BTC",quote:"GBP"},"BTC/EUR":{id:"XBT/EUR",symbol:"BTC/EUR",base:"BTC",quote:"EUR"},"BTC/USD":{id:"XBT/USD",symbol:"BTC/USD",base:"BTC",quote:"USD"},"BTC/PLN":{id:"XBT/PLN",symbol:"BTC/PLN",base:"BTC",quote:"PLN"},"BCH/GBP":{id:"BCH/GBP",symbol:"BCH/GBP",base:"BCH",quote:"GBP"}}})}async fetchBalance(e={}){let t=void 0;if("symbol"in e&&(t=this.findMarket(e.symbol)),"id"in e&&(t=this.findMarket(e.id)),!t)throw new r(this.id+" fetchBalance requires a symbol param");let i=await this.privatePostIdBalance({id:t.id}),s={info:i},a=t.id.toLowerCase().split("/");return s[t.base]={free:parseFloat(i[a[0]+"_available"]),used:parseFloat(i[a[0]+"_reserved"]),total:parseFloat(i[a[0]+"_balance"])},s[t.quote]={free:parseFloat(i[a[1]+"_available"]),used:parseFloat(i[a[1]+"_reserved"]),total:parseFloat(i[a[1]+"_balance"])},this.parseBalance(s)}async fetchOrderBook(e,t,i={}){let s=await this.publicGetIdOrderBook(this.extend({id:this.marketId(e)},i));return this.parseOrderBook(s)}parseTicker(e,t){let i=this.milliseconds(),s=void 0;void 0!==t&&(s=t.symbol);let r=this.safeFloat(e,"vwap"),a=this.safeFloat(e,"volume"),o=void 0;void 0!==r&&(o=a*r);let n=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"bid"),bidVolume:void 0,ask:this.safeFloat(e,"ask"),askVolume:void 0,vwap:r,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:o,info:e}}async fetchTicker(e,t={}){let i=this.market(e),s=await this.publicGetIdTicker(this.extend({id:i.id},t));return this.parseTicker(s,i)}parseTrade(e,t){let i=1e3*e.date;return{info:e,id:e.tid.toString(),order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:void 0,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"amount")}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetIdTransactions(this.extend({id:r.id},s));return this.parseTrades(a,r,t,i)}async createOrder(e,t,i,s,r,a={}){let o={id:this.marketId(e)},n="privatePostId"+this.capitalize(i);return"market"===t?(o.quantity=s,n+="Market"):(o.price=r,o.amount=s),this[n](this.extend(o,a))}async cancelOrder(e,t,i={}){return await this.privatePostIdCancelOrder({id:e})}parseOrder(e,t){let i=this.parseDate(e.datetime),s=this.iso8601(i),r=this.safeFloat(e,"price"),a=this.safeFloat(e,"amount"),o=r*a,n=void 0,d=this.safeString(e,"status");0===e.type?n="buy":1===e.type&&(n="sell");let c=void 0;return void 0!==t&&(c=t.symbol),{info:e,id:e.id.toString(),datetime:s,timestamp:i,lastTradeTimestamp:void 0,status:d,symbol:c,type:"limit",side:n,price:r,amount:a,filled:void 0,remaining:void 0,cost:o,fee:void 0}}async fetchOpenOrders(e,t,i,s={}){if(void 0===e)throw new r(this.id+" fetchOpenOrders requires a symbol param");await this.loadMarkets();let a=this.market(e),o=await this.privatePostIdOpenOrders({id:a.id});for(let r=0;r<o.length;r++)o[r]=this.extend(o[r],{status:"open"});return this.parseOrders(o,a,t,i)}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials();let e=this.nonce();a=this.urlencode(this.extend({nonce:e},n));let t=this.uid+"/"+this.apiKey+":"+this.password;r={"Content-Type":"application/x-www-form-urlencoded",Authorization:"Basic "+this.decode(this.stringToBase64(this.encode(t)))}}return{url:o,method:i,body:a,headers:r}}}},894:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"coingi",name:"Coingi",rateLimit:1e3,countries:["PA","BG","CN","US"],has:{CORS:!1,fetchTickers:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/28619707-5c9232a8-7212-11e7-86d6-98fe5d15cc6e.jpg",api:{www:"https://coingi.com",current:"https://api.coingi.com",user:"https://api.coingi.com"},www:"https://coingi.com",doc:"http://docs.coingi.apiary.io/"},api:{www:{get:[""]},current:{get:["order-book/{pair}/{askCount}/{bidCount}/{depth}","transactions/{pair}/{maxCount}","24hour-rolling-aggregation"]},user:{post:["balance","add-order","cancel-order","orders","transactions","create-crypto-withdrawal"]}},fees:{trading:{tierBased:!1,percentage:!0,taker:.002,maker:.002},funding:{tierBased:!1,percentage:!1,withdraw:{BTC:.001,LTC:.01,DOGE:2,PPC:.02,VTC:.2,NMC:2,DASH:.002,USD:10,EUR:10},deposit:{BTC:0,LTC:0,DOGE:0,PPC:0,VTC:0,NMC:0,DASH:0,USD:5,EUR:1}}}})}async fetchMarkets(){let e=void 0;try{this.parseJsonResponse=!1,e=await this.wwwGet(),this.parseJsonResponse=!0}catch(e){throw this.parseJsonResponse=!0,e}let t=e.split('do=currencyPairSelector-selectCurrencyPair" class="active">')[1].split('<div class="currency-pair-label">'),i=[];for(let s=1;s<t.length;s++){let e=t[s].split("</div>")[0],r=e;e=(e=e.replace("/","-")).toLowerCase();let[a,o]=r.split("/"),n={amount:8,price:8},d=Math.pow(10,-n.amount);i.push({id:e,symbol:r,base:a,quote:o,info:e,lot:d,active:!0,precision:n,limits:{amount:{min:d,max:Math.pow(10,n.amount)},price:{min:Math.pow(10,-n.price),max:void 0},cost:{min:0,max:void 0}}})}return i}async fetchBalance(e={}){await this.loadMarkets();let t=[],i=Object.keys(this.currencies);for(let a=0;a<i.length;a++){let e=i[a];t.push(e.toLowerCase())}let s=await this.userPostBalance({currencies:t.join(",")}),r={info:s};for(let a=0;a<s.length;a++){let e=s[a],t=e.currency.name;t=t.toUpperCase();let i={free:e.available,used:e.blocked+e.inOrders+e.withdrawing,total:0};i.total=this.sum(i.free,i.used),r[t]=i}return this.parseBalance(r)}async fetchOrderBook(e,t=512,i={}){await this.loadMarkets();let s=this.market(e),r=await this.currentGetOrderBookPairAskCountBidCountDepth(this.extend({pair:s.id,depth:32,askCount:t,bidCount:t},i));return this.parseOrderBook(r,void 0,"bids","asks","price","baseAmount")}parseTicker(e,t){let i=this.milliseconds(),s=void 0;return t&&(s=t.symbol),{symbol:s,timestamp:i,datetime:this.iso8601(i),high:e.high,low:e.low,bid:e.highestBid,bidVolume:void 0,ask:e.lowestAsk,askVolume:void 0,vwap:void 0,open:void 0,close:void 0,last:void 0,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:e.baseVolume,quoteVolume:e.counterVolume,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.currentGet24hourRollingAggregation(t),s={};for(let r=0;r<i.length;r++){let e=i[r],t=e.currencyPair.base.toUpperCase()+"/"+e.currencyPair.counter.toUpperCase(),a=void 0;t in this.markets&&(a=this.markets[t]),s[t]=this.parseTicker(e,a)}return s}async fetchTicker(e,t={}){await this.loadMarkets();let i=await this.fetchTickers(void 0,t);if(e in i)return i[e];throw new r(this.id+" return did not contain "+e)}parseTrade(e,t){return t||(t=this.markets_by_id[e.currencyPair]),{id:e.id,info:e,timestamp:e.timestamp,datetime:this.iso8601(e.timestamp),symbol:t.symbol,type:void 0,side:void 0,price:e.price,amount:e.amount}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.currentGetTransactionsPairMaxCount(this.extend({pair:r.id,maxCount:128},s));return this.parseTrades(a,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o={currencyPair:this.marketId(e),volume:s,price:r,orderType:"buy"===i?0:1},n=await this.userPostAddOrder(this.extend(o,a));return{info:n,id:n.result}}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.userPostCancelOrder({orderId:e})}sign(e,t="current",i="GET",s={},r,a){let o=this.urls.api[t];"www"!==t&&(o+="/"+t+"/"+this.implodeParams(e,s));let n=this.omit(s,this.extractParams(e));if("current"===t)Object.keys(n).length&&(o+="?"+this.urlencode(n));else if("user"===t){this.checkRequiredCredentials();let e=this.nonce(),t=this.extend({token:this.apiKey,nonce:e},n),i=e.toString()+"$"+this.apiKey;t.signature=this.hmac(this.encode(i),this.encode(this.secret)),a=this.json(t),r={"Content-Type":"application/json"}}return{url:o,method:i,body:a,headers:r}}async request(e,t="current",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("string"!=typeof n&&"errors"in n)throw new r(this.id+" "+this.json(n));return n}}},895:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"coinmarketcap",name:"CoinMarketCap",rateLimit:1e4,version:"v1",countries:["US"],has:{CORS:!0,privateAPI:!1,createOrder:!1,createMarketOrder:!1,createLimitOrder:!1,cancelOrder:!1,editOrder:!1,fetchBalance:!1,fetchOrderBook:!1,fetchOHLCV:!1,fetchTrades:!1,fetchTickers:!0,fetchCurrencies:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/28244244-9be6312a-69ed-11e7-99c1-7c1797275265.jpg",api:{public:"https://api.coinmarketcap.com",files:"https://files.coinmarketcap.com",charts:"https://graph.coinmarketcap.com"},www:"https://coinmarketcap.com",doc:"https://coinmarketcap.com/api"},requiredCredentials:{apiKey:!1,secret:!1},api:{files:{get:["generated/stats/global.json"]},graphs:{get:["currencies/{name}/"]},public:{get:["ticker/","ticker/{id}/","global/"]}},currencyCodes:["AUD","BRL","CAD","CHF","CNY","EUR","GBP","HKD","IDR","INR","JPY","KRW","MXN","RUB","USD","BTC","ETH","LTC"]})}async fetchOrderBook(e,t,i={}){throw new r("Fetching order books is not supported by the API of "+this.id)}currencyCode(e,t){const i={ACChain:"ACChain",AdCoin:"AdCoin",BatCoin:"BatCoin",Bitgem:"Bitgem",BlazeCoin:"BlazeCoin",BlockCAT:"BlockCAT",Catcoin:"Catcoin","Content and AD Network":"Content and AD Network",Comet:"Comet",CPChain:"CPChain",Cubits:"Cubits","DAO.Casino":"DAO.Casino",ENTCash:"ENTCash",FairGame:"FairGame","GET Protocol":"GET Protocol","Global Tour Coin":"Global Tour Coin",GuccioneCoin:"GuccioneCoin",HarmonyCoin:"HarmonyCoin",Huncoin:"Huncoin",iCoin:"iCoin","Infinity Economics":"Infinity Economics","KingN Coin":"KingN Coin",LiteBitcoin:"LiteBitcoin",Maggie:"Maggie",MIOTA:"IOTA",NetCoin:"NetCoin",Polcoin:"Polcoin",PutinCoin:"PutinCoin",Rcoin:"Rcoin"};return t in i?i[t]:e}async fetchMarkets(){let e=await this.publicGetTicker({limit:0}),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=this.currencyCodes;for(let e=0;e<r.length;e++){let i=r[e],a=i.toLowerCase(),o=s.id,n=this.currencyCode(s.symbol,s.name),d=n+"/"+i,c=o+"/"+a;t.push({id:c,symbol:d,base:n,quote:i,baseId:o,quoteId:a,info:s})}}return t}async fetchGlobal(e="USD"){await this.loadMarkets();let t={};return e&&(t.convert=e),await this.publicGetGlobal(t)}parseTicker(e,t){let i=this.milliseconds();"last_updated"in e&&e.last_updated&&(i=1e3*parseInt(e.last_updated));let s=void 0;"percent_change_24h"in e&&e.percent_change_24h&&(s=this.safeFloat(e,"percent_change_24h"));let r=void 0,a=void 0,o=void 0;if(void 0!==t){let i="price_"+t.quoteId;i in e&&e[i]&&(r=this.safeFloat(e,i)),a=t.symbol;let s="24h_volume_"+t.quoteId;s in e&&e[s]&&(o=this.safeFloat(e,s))}return{symbol:a,timestamp:i,datetime:this.iso8601(i),high:void 0,low:void 0,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:s,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:o,info:e}}async fetchTickers(e="USD",t={}){await this.loadMarkets();let i={limit:1e4};e&&(i.convert=e);let s=await this.publicGetTicker(this.extend(i,t)),r={};for(let a=0;a<s.length;a++){let t=s[a],i=e.toLowerCase(),o=t.id+"/"+i,n=o,d=void 0;o in this.markets_by_id&&(n=(d=this.markets_by_id[o]).symbol),r[n]=this.parseTicker(t,d)}return r}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=this.extend({convert:i.quote,id:i.baseId},t),r=(await this.publicGetTickerId(s))[0];return this.parseTicker(r,i)}async fetchCurrencies(e={}){let t=await this.publicGetTicker(this.extend({limit:0},e)),i={};for(let s=0;s<t.length;s++){let e=t[s],r=e.symbol,a=e.name,o=8,n=this.currencyCode(r,a);i[n]={id:r,code:n,info:e,name:a,active:!0,fee:void 0,precision:o,limits:{amount:{min:Math.pow(10,-o),max:Math.pow(10,o)},price:{min:Math.pow(10,-o),max:Math.pow(10,o)},cost:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}}}}return i}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t]+"/"+this.version+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));return Object.keys(n).length&&(o+="?"+this.urlencode(n)),{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("error"in n&&n.error)throw new r(this.id+" "+this.json(n));return n}}},896:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"coinmate",name:"CoinMate",countries:["GB","CZ","EU"],rateLimit:1e3,has:{CORS:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27811229-c1efb510-606c-11e7-9a36-84ba2ce412d8.jpg",api:"https://coinmate.io/api",www:"https://coinmate.io",doc:["http://docs.coinmate.apiary.io","https://coinmate.io/developers"]},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},api:{public:{get:["orderBook","ticker","transactions"]},private:{post:["balances","bitcoinWithdrawal","bitcoinDepositAddresses","buyInstant","buyLimit","cancelOrder","cancelOrderWithInfo","createVoucher","openOrders","redeemVoucher","sellInstant","sellLimit","transactionHistory","unconfirmedBitcoinDeposits"]}},markets:{"BTC/EUR":{id:"BTC_EUR",symbol:"BTC/EUR",base:"BTC",quote:"EUR",precision:{amount:4,price:2}},"BTC/CZK":{id:"BTC_CZK",symbol:"BTC/CZK",base:"BTC",quote:"CZK",precision:{amount:4,price:2}},"LTC/BTC":{id:"LTC_BTC",symbol:"LTC/BTC",base:"LTC",quote:"BTC",precision:{amount:4,price:5}}},fees:{trading:{maker:5e-4,taker:.0035}}})}async fetchBalance(e={}){let t=(await this.privatePostBalances()).data,i={info:t},s=Object.keys(this.currencies);for(let r=0;r<s.length;r++){let e=s[r],a=this.account();e in t&&(a.free=t[e].available,a.used=t[e].reserved,a.total=t[e].balance),i[e]=a}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){let s=(await this.publicGetOrderBook(this.extend({currencyPair:this.marketId(e),groupByPriceLimit:"False"},i))).data,r=1e3*s.timestamp;return this.parseOrderBook(s,r,"bids","asks","price","amount")}async fetchTicker(e,t={}){let i=(await this.publicGetTicker(this.extend({currencyPair:this.marketId(e)},t))).data,s=1e3*i.timestamp,r=this.safeFloat(i,"last");return{symbol:e,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(i,"high"),low:this.safeFloat(i,"low"),bid:this.safeFloat(i,"bid"),bidVolume:void 0,ask:this.safeFloat(i,"ask"),vwap:void 0,askVolume:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(i,"amount"),quoteVolume:void 0,info:i}}parseTrade(e,t){return t||(t=this.markets_by_id[e.currencyPair]),{id:e.transactionId,info:e,timestamp:e.timestamp,datetime:this.iso8601(e.timestamp),symbol:t.symbol,type:void 0,side:void 0,price:e.price,amount:e.amount}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetTransactions(this.extend({currencyPair:r.id,minutesIntoHistory:10},s));return this.parseTrades(a.data,r,t,i)}async createOrder(e,t,i,s,r,a={}){let o="privatePost"+this.capitalize(i),n={currencyPair:this.marketId(e)};"market"===t?("buy"===i?n.total=s:n.amount=s,o+="Instant"):(n.amount=s,n.price=r,o+=this.capitalize(t));let d=await this[o](this.extend(n,a));return{info:d,id:d.data.toString()}}async cancelOrder(e,t,i={}){return await this.privatePostCancelOrder({orderId:e})}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+e;if("public"===t)Object.keys(s).length&&(o+="?"+this.urlencode(s));else{this.checkRequiredCredentials();let e=this.nonce().toString(),t=e+this.uid+this.apiKey,i=this.hmac(this.encode(t),this.encode(this.secret));a=this.urlencode(this.extend({clientId:this.uid,nonce:e,publicKey:this.apiKey,signature:i.toUpperCase()},s)),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("error"in n&&n.error)throw new r(this.id+" "+this.json(n));return n}}},897:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,AuthenticationError:a,DDoSProtection:o}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"coinnest",name:"coinnest",countries:["KR"],rateLimit:1e3,has:{fetchOpenOrders:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/38065728-7289ff5c-330d-11e8-9cc1-cf0cbcb606bc.jpg",api:{public:"https://api.coinnest.co.kr/api",private:"https://api.coinnest.co.kr/api",web:"https://www.coinnest.co.kr"},www:"https://www.coinnest.co.kr",doc:"https://www.coinnest.co.kr/doc/intro.html",fees:["https://coinnesthelp.zendesk.com/hc/ko/articles/115002110252-%EA%B1%B0%EB%9E%98-%EC%88%98%EC%88%98%EB%A3%8C%EB%8A%94-%EC%96%BC%EB%A7%88%EC%9D%B8%EA%B0%80%EC%9A%94-","https://coinnesthelp.zendesk.com/hc/ko/articles/115002110272-%EB%B9%84%ED%8A%B8%EC%BD%94%EC%9D%B8-%EC%88%98%EC%88%98%EB%A3%8C%EB%A5%BC-%EC%84%A0%ED%83%9D%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0%EA%B0%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94-"]},api:{web:{get:["coin/allcoin"]},public:{get:["pub/ticker","pub/depth","pub/trades"]},private:{post:["account/balance","trade/add","trade/cancel","trade/fetchtrust","trade/trust"]}},fees:{trading:{maker:.001,taker:.001},funding:{withdraw:{BTC:"0.002"}}},precision:{amount:8,price:8}})}async fetchMarkets(){let e="KRW".toLowerCase(),t=["btc","bch","btg","bcd","ubtc","btn","kst","ltc","act","eth","etc","ada","qtum","xlm","neo","gas","rpx","hsr","knc","tsl","tron","omg","wtc","mco","storm","gto","pxs","chat","ink","oc","hlc","ent","qbt","spc","put"],i=[];for(let s=0;s<t.length;s++){let r=t[s],a=r+"/"+e,o=this.commonCurrencyCode(r.toUpperCase()),n=o+"/KRW";i.push({id:a,symbol:n,base:o,quote:"KRW",baseId:r,quoteId:e,active:!0,info:void 0})}return i}parseTicker(e,t){let i=1e3*e.time,s=t.symbol,r=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"vol"),quoteVolume:void 0,info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetPubTicker(this.extend({coin:i.baseId},t));return this.parseTicker(s,i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=await this.publicGetPubDepth(this.extend({coin:s.baseId},i));return this.parseOrderBook(r)}parseTrade(e,t){let i=1e3*parseInt(e.date),s=this.safeFloat(e,"price"),r=this.safeFloat(e,"amount"),a=t.symbol,o=this.priceToPrecision(a,r*s);return{timestamp:i,datetime:this.iso8601(i),symbol:a,id:this.safeString(e,"tid"),order:void 0,type:"limit",side:e.type,price:s,amount:r,cost:parseFloat(o),fee:void 0,info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetPubTrades(this.extend({coin:r.baseId},s));return this.parseTrades(a,r,t,i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostAccountBalance(e),i={info:t},s=Object.keys(t);for(let r=0;r<s.length;r++){let e=s[r],a=e.split("_");if(2!==a.length)continue;let o=a[1];if("reserved"!==o&&"balance"!==o)continue;let n=a[0].toUpperCase();(n=this.commonCurrencyCode(n))in i||(i[n]={free:0,used:0,total:0}),o="reserved"===o?"used":"free",i[n][o]=parseFloat(t[e]),("used"===o?"free":"used")in i[n]&&(i[n].total=this.sum(i[n].free,i[n].used))}return this.parseBalance(i)}parseOrder(e,t){let i=t.symbol,s=1e3*parseInt(e.time),r=parseInt(e.status);r=4===r?"closed":3===r?"canceled":"open";let a=this.safeFloat(e,"amount_total"),o=this.safeFloat(e,"amount_over"),n=this.safeValue(e,"deals");return n=n?this.safeFloat(n,"sum_amount"):a-o,{id:this.safeString(e,"id"),datetime:this.iso8601(s),timestamp:s,lastTradeTimestamp:void 0,status:r,symbol:i,type:"limit",side:e.type,price:this.safeFloat(e,"price"),cost:void 0,amount:a,filled:n,remaining:o,trades:void 0,fee:void 0,info:this.safeValue(e,"info",e)}}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n=await this.privatePostTradeAdd(this.extend({coin:o.baseId,type:i,number:s,price:r},a)),d={id:n.id,time:this.seconds(),type:i,price:r,amount_total:s,amount_over:s,info:n},c=d.id;return this.orders[c]=this.parseOrder(d,o),d}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t);return await this.privatePostTradeCancel(this.extend({id:e,coin:s.baseId},i))}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t),r=await this.privatePostTradeFetchtrust(this.extend({id:e,coin:s.baseId},i));return this.parseOrder(r,s)}async fetchOrders(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={coin:r.baseId};void 0!==t&&(a.since=parseInt(t/1e3)),void 0!==i&&(a.limit=i);let o=await this.privatePostTradeTrust(this.extend(a,s));return this.parseOrders(o,r)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({type:"1"},s))}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t]+"/"+e,n=void 0;if("public"===t)(n=this.urlencode(s)).length&&(o+="?"+n);else{this.checkRequiredCredentials(),a=this.urlencode(this.extend(s,{key:this.apiKey,nonce:this.nonce()}));let e=this.hash(this.secret);a+="&signature="+this.hmac(this.encode(a),this.encode(e)),r={"Content-type":"application/x-www-form-urlencoded"}}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},n,d){let c=await this.fetch2(e,t,i,s,n,d),h=this.safeString(c,"status");if(!c||"nil"===c||h){throw new(this.safeValue({100:o,101:o,104:a,105:a,106:o},h,r))(this.safeString(c,"msg",this.json(c)))}return c}}},898:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,ExchangeNotAvailable:a,InvalidOrder:o,OrderNotFound:n}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"coinone",name:"CoinOne",countries:["KR"],rateLimit:667,version:"v2",has:{CORS:!1,createMarketOrder:!1,fetchTickers:!0,fetchOrder:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/38003300-adc12fba-323f-11e8-8525-725f53c4a659.jpg",api:"https://api.coinone.co.kr",www:"https://coinone.co.kr",doc:"https://doc.coinone.co.kr"},requiredCredentials:{apiKey:!0,secret:!0},api:{public:{get:["orderbook/","trades/","ticker/"]},private:{post:["account/btc_deposit_address/","account/balance/","account/daily_balance/","account/user_info/","account/virtual_account/","order/cancel_all/","order/cancel/","order/limit_buy/","order/limit_sell/","order/complete_orders/","order/limit_orders/","order/order_info/","transaction/auth_number/","transaction/history/","transaction/krw/history/","transaction/btc/","transaction/coin/"]}},markets:{"BCH/KRW":{id:"bch",symbol:"BCH/KRW",base:"BCH",quote:"KRW",baseId:"bch",quoteId:"krw"},"BTC/KRW":{id:"btc",symbol:"BTC/KRW",base:"BTC",quote:"KRW",baseId:"btc",quoteId:"krw"},"BTG/KRW":{id:"btg",symbol:"BTG/KRW",base:"BTG",quote:"KRW",baseId:"btg",quoteId:"krw"},"ETC/KRW":{id:"etc",symbol:"ETC/KRW",base:"ETC",quote:"KRW",baseId:"etc",quoteId:"krw"},"ETH/KRW":{id:"eth",symbol:"ETH/KRW",base:"ETH",quote:"KRW",baseId:"eth",quoteId:"krw"},"IOTA/KRW":{id:"iota",symbol:"IOTA/KRW",base:"IOTA",quote:"KRW",baseId:"iota",quoteId:"krw"},"LTC/KRW":{id:"ltc",symbol:"LTC/KRW",base:"LTC",quote:"KRW",baseId:"ltc",quoteId:"krw"},"OMG/KRW":{id:"omg",symbol:"OMG/KRW",base:"OMG",quote:"KRW",baseId:"omg",quoteId:"krw"},"QTUM/KRW":{id:"qtum",symbol:"QTUM/KRW",base:"QTUM",quote:"KRW",baseId:"qtum",quoteId:"krw"},"XRP/KRW":{id:"xrp",symbol:"XRP/KRW",base:"XRP",quote:"KRW",baseId:"xrp",quoteId:"krw"},"EOS/KRW":{id:"eos",symbol:"EOS/KRW",base:"EOS",quote:"KRW",baseId:"eos",quoteId:"krw"}},fees:{trading:{tierBased:!0,percentage:!0,taker:.001,maker:.001,tiers:{taker:[[0,.001],[1e8,9e-4],[1e9,8e-4],[5e9,7e-4],[1e10,6e-4],[2e10,5e-4],[3e10,4e-4],[4e10,3e-4],[5e10,2e-4]],maker:[[0,.001],[1e8,8e-4],[1e9,6e-4],[5e9,4e-4],[1e10,2e-4],[2e10,0],[3e10,0],[4e10,0],[5e10,0]]}}},exceptions:{405:a,104:n}})}async fetchBalance(e={}){let t=await this.privatePostAccountBalance(),i={info:t},s=this.omit(t,["errorCode","result","normalWallets"]),r=Object.keys(s);for(let a=0;a<r.length;a++){let e=r[a],t=s[e],o=e.toUpperCase();e in this.currencies_by_id&&(o=this.currencies_by_id[e].code);let n=parseFloat(t.avail),d=parseFloat(t.balance),c={free:n,used:d-n,total:d};i[o]=c}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){let s=this.market(e),r=await this.publicGetOrderbook(this.extend({currency:s.id,format:"json"},i));return this.parseOrderBook(r,void 0,"bid","ask","price","qty")}async fetchTickers(e,t={}){await this.loadMarkets();let i={},s=await this.publicGetTicker(this.extend({currency:"all",format:"json"},t)),r=Object.keys(s);for(let a=0;a<r.length;a++){let e=r[a],t=e,o=void 0;if(e in this.markets_by_id){t=(o=this.markets_by_id[e]).symbol;let r=s[e];i[t]=this.parseTicker(r,o)}}return i}async fetchTicker(e,t={}){let i=this.market(e),s=await this.publicGetTicker(this.extend({currency:i.id,format:"json"},t));return this.parseTicker(s,i)}parseTicker(e,t){let i=this.milliseconds(),s=this.safeFloat(e,"last"),r=this.safeFloat(e,"yesterday_last"),a=void 0;return void 0!==s&&void 0!==r&&(a=r-s),{symbol:void 0!==t?t.symbol:void 0,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeFloat(e,"first"),close:s,last:s,previousClose:r,change:a,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"volume"),quoteVolume:void 0,info:e}}parseTrade(e,t){let i=1e3*parseInt(e.timestamp),s=void 0!==t?t.symbol:void 0;return{id:void 0,timestamp:i,datetime:this.iso8601(i),order:void 0,symbol:s,type:void 0,side:void 0,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"qty"),fee:void 0,info:e}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetTrades(this.extend({currency:r.id,period:"hour",format:"json"},s));return this.parseTrades(a.completeOrders,r,t,i)}async createOrder(e,t,i,s,a,o={}){if("limit"!==t)throw new r(this.id+" allows limit orders only");await this.loadMarkets();let n={price:a,currency:this.marketId(e),qty:s},d="privatePostOrder"+this.capitalize(t)+this.capitalize(i),c=await this[d](this.extend(n,o)),h=this.safeString(c,"orderId"),l=this.milliseconds(),u=a*s,p={info:c,id:h,timestamp:l,datetime:this.iso8601(l),lastTradeTimestamp:void 0,symbol:e,type:t,side:i,price:a,cost:u,average:void 0,amount:s,filled:void 0,remaining:s,status:"open",fee:void 0};return this.orders[h]=p,p}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=void 0,a=void 0;if(void 0===t){if(!(e in this.orders))throw new r(this.id+" fetchOrder() requires a symbol argument for order ids missing in the .orders cache (the order was created with a different instance of this class or within a different run of this code).");a=this.market(this.orders[e].symbol)}else a=this.market(t);try{let t=await this.privatePostOrderOrderInfo(this.extend({order_id:e,currency:a.id},i));s=this.parseOrder(t),this.orders[e]=s}catch(t){if(!(t instanceof n))throw t;if(!(e in this.orders))throw t;this.orders[e].status="canceled",s=this.orders[e]}return s}parseOrderStatus(e){let t={live:"open",partially_filled:"open",filled:"closed"};return e in t?t[e]:e}parseOrder(e,t){let i=this.safeValue(e,"info"),s=this.safeString(i,"orderId"),r=1e3*parseInt(i.timestamp),a=this.safeString(e,"status");a=this.parseOrderStatus(a);let o=void 0,n=this.safeString(i,"type");n=n.indexOf("ask")>=0?"sell":"buy";let d=this.safeFloat(i,"price"),c=this.safeFloat(i,"qty"),h=this.safeFloat(i,"remainQty"),l=void 0;void 0!==c&&(void 0!==h&&(l=c-h),void 0!==d&&(o=d*c));let u=this.safeString(i,"currency"),p={currency:u,cost:this.safeFloat(i,"fee"),rate:this.safeFloat(i,"feeRate")},m=void 0;if(void 0===t){let e=u.toLowerCase();e in this.markets_by_id&&(t=this.markets_by_id[e])}return void 0!==t&&(m=t.symbol),{info:e,id:s,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,symbol:m,type:"limit",side:n,price:d,cost:o,amount:c,filled:l,remaining:h,status:a,fee:p}}async cancelOrder(e,t,i={}){let s=this.safeValue(this.orders,e),r=void 0,a=void 0,n=void 0;if(void 0===s){if(void 0===t)throw new o(this.id+" cancelOrder could not find the order id "+e+" in orders cache. The order was probably created with a different instance of this class earlier. The `symbol` argument is missing. To cancel the order, pass a symbol argument and {'price': 12345, 'qty': 1.2345, 'is_ask': 0} in the params argument of cancelOrder.");if(void 0===(a=this.safeFloat(i,"price")))throw new o(this.id+" cancelOrder could not find the order id "+e+" in orders cache. The order was probably created with a different instance of this class earlier. The `price` parameter is missing. To cancel the order, pass a symbol argument and {'price': 12345, 'qty': 1.2345, 'is_ask': 0} in the params argument of cancelOrder.");if(void 0===(r=this.safeFloat(i,"qty")))throw new o(this.id+" cancelOrder could not find the order id "+e+" in orders cache. The order was probably created with a different instance of this class earlier. The `qty` (amount) parameter is missing. To cancel the order, pass a symbol argument and {'price': 12345, 'qty': 1.2345, 'is_ask': 0} in the params argument of cancelOrder.");if(void 0===(n=this.safeFloat(i,"is_ask")))throw new o(this.id+" cancelOrder could not find the order id "+e+" in orders cache. The order was probably created with a different instance of this class earlier. The `is_ask` (side) parameter is missing. To cancel the order, pass a symbol argument and {'price': 12345, 'qty': 1.2345, 'is_ask': 0} in the params argument of cancelOrder.")}else a=s.price,r=s.amount,n="buy"===s.side?0:1,t=s.symbol;let d={order_id:e,price:a,qty:r,is_ask:n,currency:this.marketId(t)};return await this.privatePostOrderCancel(this.extend(d,i))}sign(e,t="public",i="GET",s={},r,a){let o=this.implodeParams(e,s),n=this.omit(s,this.extractParams(e)),d=this.urls.api+"/";if("public"===t)d+=o,Object.keys(n).length&&(d+="?"+this.urlencode(n));else{this.checkRequiredCredentials(),d+=this.version+"/"+o;let e=this.nonce().toString(),t=this.json(this.extend({access_token:this.apiKey,nonce:e},s)),i=this.stringToBase64(this.encode(t));a=this.decode(i);let n=this.secret.toUpperCase();r={"content-type":"application/json","X-COINONE-PAYLOAD":i,"X-COINONE-SIGNATURE":this.hmac(i,this.encode(n),"sha512")}}return{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if("{"===o[0]||"["===o[0]){let e=JSON.parse(o);if(!("result"in e))throw new r(this.id+" "+o);if("success"!==e.result){const t=this.safeString(e,"errorCode"),i=this.id+" "+this.json(e),s=this.exceptions;throw t in s?new s[t](i):new r(i)}}}}},899:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,NotSupported:a}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"coinsecure",name:"Coinsecure",countries:["IN"],rateLimit:1e3,version:"v1",has:{CORS:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766472-9cbd200a-5ed9-11e7-9551-2267ad7bac08.jpg",api:"https://api.coinsecure.in",www:"https://coinsecure.in",doc:["https://api.coinsecure.in","https://github.com/coinsecure/plugins"]},requiredCredentials:{apiKey:!0,secret:!1},api:{public:{get:["bitcoin/search/confirmation/{txid}","exchange/ask/low","exchange/ask/orders","exchange/bid/high","exchange/bid/orders","exchange/lastTrade","exchange/max24Hr","exchange/min24Hr","exchange/ticker","exchange/trades"]},private:{get:["mfa/authy/call","mfa/authy/sms","netki/search/{netkiName}","user/bank/otp/{number}","user/kyc/otp/{number}","user/profile/phone/otp/{number}","user/wallet/coin/address/{id}","user/wallet/coin/deposit/confirmed/all","user/wallet/coin/deposit/confirmed/{id}","user/wallet/coin/deposit/unconfirmed/all","user/wallet/coin/deposit/unconfirmed/{id}","user/wallet/coin/wallets","user/exchange/bank/fiat/accounts","user/exchange/bank/fiat/balance/available","user/exchange/bank/fiat/balance/pending","user/exchange/bank/fiat/balance/total","user/exchange/bank/fiat/deposit/cancelled","user/exchange/bank/fiat/deposit/unverified","user/exchange/bank/fiat/deposit/verified","user/exchange/bank/fiat/withdraw/cancelled","user/exchange/bank/fiat/withdraw/completed","user/exchange/bank/fiat/withdraw/unverified","user/exchange/bank/fiat/withdraw/verified","user/exchange/ask/cancelled","user/exchange/ask/completed","user/exchange/ask/pending","user/exchange/bid/cancelled","user/exchange/bid/completed","user/exchange/bid/pending","user/exchange/bank/coin/addresses","user/exchange/bank/coin/balance/available","user/exchange/bank/coin/balance/pending","user/exchange/bank/coin/balance/total","user/exchange/bank/coin/deposit/cancelled","user/exchange/bank/coin/deposit/unverified","user/exchange/bank/coin/deposit/verified","user/exchange/bank/coin/withdraw/cancelled","user/exchange/bank/coin/withdraw/completed","user/exchange/bank/coin/withdraw/unverified","user/exchange/bank/coin/withdraw/verified","user/exchange/bank/summary","user/exchange/coin/fee","user/exchange/fiat/fee","user/exchange/kycs","user/exchange/referral/coin/paid","user/exchange/referral/coin/successful","user/exchange/referral/fiat/paid","user/exchange/referrals","user/exchange/trade/summary","user/login/token/{token}","user/summary","user/wallet/summary","wallet/coin/withdraw/cancelled","wallet/coin/withdraw/completed","wallet/coin/withdraw/unverified","wallet/coin/withdraw/verified"],post:["login","login/initiate","login/password/forgot","mfa/authy/initiate","mfa/ga/initiate","signup","user/netki/update","user/profile/image/update","user/exchange/bank/coin/withdraw/initiate","user/exchange/bank/coin/withdraw/newVerifycode","user/exchange/bank/fiat/withdraw/initiate","user/exchange/bank/fiat/withdraw/newVerifycode","user/password/change","user/password/reset","user/wallet/coin/withdraw/initiate","wallet/coin/withdraw/newVerifycode"],put:["signup/verify/{token}","user/exchange/kyc","user/exchange/bank/fiat/deposit/new","user/exchange/ask/new","user/exchange/bid/new","user/exchange/instant/buy","user/exchange/instant/sell","user/exchange/bank/coin/withdraw/verify","user/exchange/bank/fiat/account/new","user/exchange/bank/fiat/withdraw/verify","user/mfa/authy/initiate/enable","user/mfa/ga/initiate/enable","user/netki/create","user/profile/phone/new","user/wallet/coin/address/new","user/wallet/coin/new","user/wallet/coin/withdraw/sendToExchange","user/wallet/coin/withdraw/verify"],delete:["user/gcm/{code}","user/logout","user/exchange/bank/coin/withdraw/unverified/cancel/{withdrawID}","user/exchange/bank/fiat/deposit/cancel/{depositID}","user/exchange/ask/cancel/{orderID}","user/exchange/bid/cancel/{orderID}","user/exchange/bank/fiat/withdraw/unverified/cancel/{withdrawID}","user/mfa/authy/disable/{code}","user/mfa/ga/disable/{code}","user/profile/phone/delete","user/profile/image/delete/{netkiName}","user/wallet/coin/withdraw/unverified/cancel/{withdrawID}"]}},markets:{"BTC/INR":{id:"BTC/INR",symbol:"BTC/INR",base:"BTC",quote:"INR"}},fees:{trading:{maker:.004,taker:.004}}})}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privateGetUserExchangeBankSummary()).message,i={info:t,BTC:{free:t.availableCoinBalance,used:t.pendingCoinBalance,total:t.totalCoinBalance},INR:{free:t.availableFiatBalance,used:t.pendingFiatBalance,total:t.totalFiatBalance}};return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetExchangeBidOrders(i),r=await this.publicGetExchangeAskOrders(i),a={bids:s.message,asks:r.message};return this.parseOrderBook(a,void 0,"bids","asks","rate","vol")}async fetchTicker(e,t={}){await this.loadMarkets();let i=(await this.publicGetExchangeTicker(t)).message,s=i.timestamp,r=this.safeFloat(i,"coinvolume");if("BTC/INR"===e){r*=1e-8}let a=this.safeFloat(i,"fiatvolume")/100,o=a/r,n=this.safeFloat(i,"lastPrice")/100;return{symbol:e,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(i,"high")/100,low:this.safeFloat(i,"low")/100,bid:this.safeFloat(i,"bid")/100,bidVolume:void 0,ask:this.safeFloat(i,"ask")/100,askVolume:void 0,vwap:o,open:this.safeFloat(i,"open")/100,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:r,quoteVolume:a,info:i}}parseTrade(e,t){let i=e.time,s="bid"===e.ordType?"buy":"sell";return{id:void 0,timestamp:i,datetime:this.iso8601(i),order:void 0,symbol:t,type:void 0,side:s,price:this.safeFloat(e,"rate")/100,amount:this.safeFloat(e,"vol")/1e8,fee:void 0,info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetExchangeTrades(s);if("message"in a){let e=a.message;return this.parseTrades(e,r)}}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o="privatePutUserExchange",n={};if("market"===t)o+="Instant"+this.capitalize(i),"buy"===i?n.maxFiat=s:n.maxVol=s;else{o+=("buy"===i?"Bid":"Ask")+"New",n.rate=r,n.vol=s}let d=await this[o](this.extend(n,a));return{info:d,id:d.message.orderID}}async cancelOrder(e,t,i={}){throw await this.loadMarkets(),new a(this.id+" cancelOrder () is not fully implemented yet")}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.version+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));return"private"===t&&(this.checkRequiredCredentials(),r={Authorization:this.apiKey},Object.keys(n).length&&(a=this.json(n),r["Content-Type"]="application/json")),{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if(200===e){if("{"!==o[0]&&"["!==o[0])throw new r(this.id+" returned a non-JSON reply: "+o);{let e=JSON.parse(o);if(!("success"in e))throw new r(this.id+' malformed response: no "success" in response: '+o);if(!e.success)throw new r(this.id+" error returned: "+o);if(!("message"in e))throw new r(this.id+' malformed response: no "message" in response: '+o)}}}}},900:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,AuthenticationError:a,NotSupported:o}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"coinspot",name:"CoinSpot",countries:["AU"],rateLimit:1e3,has:{CORS:!1,createMarketOrder:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/28208429-3cacdf9a-6896-11e7-854e-4c79a772a30f.jpg",api:{public:"https://www.coinspot.com.au/pubapi",private:"https://www.coinspot.com.au/api"},www:"https://www.coinspot.com.au",doc:"https://www.coinspot.com.au/api"},api:{public:{get:["latest"]},private:{post:["orders","orders/history","my/coin/deposit","my/coin/send","quote/buy","quote/sell","my/balances","my/orders","my/buy","my/sell","my/buy/cancel","my/sell/cancel"]}},markets:{"BTC/AUD":{id:"BTC",symbol:"BTC/AUD",base:"BTC",quote:"AUD"},"LTC/AUD":{id:"LTC",symbol:"LTC/AUD",base:"LTC",quote:"AUD"},"DOGE/AUD":{id:"DOGE",symbol:"DOGE/AUD",base:"DOGE",quote:"AUD"}}})}async fetchBalance(e={}){let t=await this.privatePostMyBalances(),i={info:t};if("balance"in t){let e=t.balance,s=Object.keys(e);for(let t=0;t<s.length;t++){let r=s[t],a=r.toUpperCase(),o={free:e[r],used:0,total:e[r]};"DRK"===a&&(a="DASH"),i[a]=o}}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){let s=this.market(e),r=await this.privatePostOrders(this.extend({cointype:s.id},i));return this.parseOrderBook(r,void 0,"buyorders","sellorders","rate","amount")}async fetchTicker(e,t={}){let i=await this.publicGetLatest(t),s=this.marketId(e);s=s.toLowerCase();let r=i.prices[s],a=this.milliseconds(),o=this.safeFloat(r,"last");return{symbol:e,timestamp:a,datetime:this.iso8601(a),high:void 0,low:void 0,bid:this.safeFloat(r,"bid"),bidVolume:void 0,ask:this.safeFloat(r,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:o,last:o,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:void 0,info:r}}fetchTrades(e,t,i,s={}){return this.privatePostOrdersHistory(this.extend({cointype:this.marketId(e)},s))}createOrder(e,t,i,s,a,o={}){let n="privatePostMy"+this.capitalize(i);if("market"===t)throw new r(this.id+" allows limit orders only");let d={cointype:this.marketId(e),amount:s,rate:a};return this[n](this.extend(d,o))}async cancelOrder(e,t,i={}){throw new o(this.id+" cancelOrder () is not fully implemented yet")}sign(e,t="public",i="GET",s={},r,o){if(!this.apiKey)throw new a(this.id+" requires apiKey for all requests");let n=this.urls.api[t]+"/"+e;if("private"===t){this.checkRequiredCredentials();let e=this.nonce();o=this.json(this.extend({nonce:e},s)),r={"Content-Type":"application/json",key:this.apiKey,sign:this.hmac(this.encode(o),this.encode(this.secret),"sha512")}}return{url:n,method:i,body:o,headers:r}}}},901:function(e,t,i){"use strict";const s=i(794),{ExchangeError:r,ExchangeNotAvailable:a,AuthenticationError:o,InvalidOrder:n,InsufficientFunds:d,OrderNotFound:c}=i(787),{ROUND:h,TRUNCATE:l}=i(789);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"cointiger",name:"CoinTiger",countries:["CN"],hostname:"api.cointiger.pro",has:{fetchCurrencies:!1,fetchTickers:!0,fetchTradingLimits:!1,fetchOrder:!0,fetchOpenOrders:!0,fetchClosedOrders:!0},headers:{Language:"en_US"},urls:{logo:"https://user-images.githubusercontent.com/1294454/39797261-d58df196-5363-11e8-9880-2ec78ec5bd25.jpg",api:{public:"https://api.cointiger.pro/exchange/trading/api/market",private:"https://api.cointiger.pro/exchange/trading/api",exchange:"https://www.cointiger.pro/exchange",v2public:"https://api.cointiger.com/exchange/trading/api/v2",v2:"https://api.cointiger.com/exchange/trading/api/v2"},www:"https://www.cointiger.pro",referral:"https://www.cointiger.pro/exchange/register.html?refCode=FfvDtt",doc:"https://github.com/cointiger/api-docs-en/wiki"},api:{v2public:{get:["timestamp","currencys"]},v2:{get:["order/orders","order/match_results","order/make_detail","order/details"],post:["order","order/batchcancel"]},public:{get:["history/kline","detail/merged","depth","trade","history/trade","detail"]},exchange:{get:["footer/tradingrule.html","api/public/market/detail"]},private:{get:["user/balance","order/new","order/history","order/trade"],post:["order"],delete:["order"]}},exceptions:{1:r,2:r,5:n,6:n,8:c,16:o,100001:r,100002:a,100003:r,100005:o}})}async fetchMarkets(){const e=await this.v2publicGetCurrencys(),t=Object.keys(e.data),i=[];for(let s=0;s<t.length;s++){let r=t[s],a=e.data[r];for(let e=0;e<a.length;e++){let t=a[e],s=this.safeString(t,"baseCurrency"),r=this.safeString(t,"quoteCurrency"),o=s.toUpperCase(),n=r.toUpperCase();o=this.commonCurrencyCode(o),n=this.commonCurrencyCode(n);let d=s+r,c=d.toUpperCase(),h=o+"/"+n,l={amount:t.amountPrecision,price:t.pricePrecision},u={id:d,uppercaseId:c,symbol:h,base:o,quote:n,baseId:s,quoteId:r,info:t,active:!0,precision:l,limits:{amount:{min:Math.pow(10,-l.amount),max:void 0},price:{min:Math.pow(10,-l.price),max:void 0},cost:{min:0,max:void 0}}};i.push(u)}}return this.options.marketsByUppercaseId=this.indexBy(i,"uppercaseId"),i}parseTicker(e,t){let i=void 0;t&&(i=t.symbol);let s=this.safeInteger(e,"id"),r=this.safeFloat(e,"last"),a=this.safeFloat(e,"percentChange");return{symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(e,"high24hr"),low:this.safeFloat(e,"low24hr"),bid:this.safeFloat(e,"highestBid"),bidVolume:void 0,ask:this.safeFloat(e,"lowestAsk"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:a,average:void 0,baseVolume:this.safeFloat(e,"baseVolume"),quoteVolume:this.safeFloat(e,"quoteVolume"),info:e}}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),a=await this.publicGetDepth(this.extend({symbol:s.id,type:"step0"},i)),o=a.data.depth_data;if("tick"in o){if(!o.tick)throw new r(this.id+" fetchOrderBook() returned empty response: "+this.json(a));let e=o.tick,t=o.ts;return this.parseOrderBook(e,t,"buys")}throw new r(this.id+" fetchOrderBook() returned unrecognized response: "+this.json(a))}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=i.uppercaseId,a=await this.exchangeGetApiPublicMarketDetail(t);if(!(s in a))throw new r(this.id+" fetchTicker symbol "+e+" ("+s+") not found");return this.parseTicker(a[s],i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.exchangeGetApiPublicMarketDetail(t),s={},r=Object.keys(i);for(let a=0;a<r.length;a++){let e=r[a],t=void 0,o=e;e in this.options.marketsByUppercaseId&&(o=this.options.marketsByUppercaseId[e].symbol,t=this.options.marketsByUppercaseId[e]),s[o]=this.parseTicker(i[e],t)}return s}parseTrade(e,t){let i=this.safeString(e,"side"),s=void 0,r=void 0,a=void 0;void 0!==i?(i=i.toLowerCase(),r=this.safeFloat(e,"price"),s=this.safeFloat(e,"amount")):(r=this.safeFloat(e.price,"amount"),s=this.safeFloat(e.volume,"amount"),a=this.safeFloat(e.deal_price,"amount")),void 0!==s&&void 0!==r&&void 0===a&&(a=s*r);let o=this.safeValue(e,"created_at");void 0===o&&(o=this.safeValue(e,"ts"));let n=void 0!==o?this.iso8601(o):void 0,d=void 0;return void 0!==t&&(d=t.symbol),{info:e,id:e.id.toString(),order:void 0,timestamp:o,datetime:n,symbol:d,type:void 0,side:i,price:r,amount:s,cost:a,fee:void 0}}async fetchTrades(e,t,i=1e3,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id};void 0!==i&&(a.size=i);let o=await this.publicGetHistoryTrade(this.extend(a,s));return this.parseTrades(o.data.trade_data,r,t,i)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new r(this.id+" fetchOrders requires a symbol argument");await this.loadMarkets();let a=this.market(e);void 0===i&&(i=100);let o=await this.privateGetOrderTrade(this.extend({symbol:a.id,offset:1,limit:i},s));return this.parseTrades(o.data.list,a,t,i)}async fetchOHLCV(e,t="1m",i,s=1e3,r={}){await this.loadMarkets();let a=this.market(e),o={symbol:a.id,period:this.timeframes[t]};void 0!==s&&(o.size=s);let n=await this.publicGetHistoryKline(this.extend(o,r));return this.parseOHLCVs(n.data.kline_data,a,t,i,s)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetUserBalance(e),i=t.data,s={info:t};for(let r=0;r<i.length;r++){let e=i[r],t=e.coin,a=t.toUpperCase();a=this.commonCurrencyCode(a),t in this.currencies_by_id&&(a=this.currencies_by_id[t].code);let o=this.account();o.used=parseFloat(e.lock),o.free=parseFloat(e.normal),o.total=this.sum(o.used,o.free),s[a]=o}return this.parseBalance(s)}async fetchOrdersByStatus(e,t,i,s,a={}){if(void 0===t)throw new r(this.id+" fetchOrders requires a symbol argument");await this.loadMarkets();let o=this.market(t);void 0===s&&(s=100);let n="open"===e?"privateGetOrderNew":"privateGetOrderHistory",d=(await this[n](this.extend({symbol:o.id,offset:1,limit:s},a))).data.list,c=[];for(let r=0;r<d.length;r++){let t=this.extend(d[r],{status:e});c.push(this.parseOrder(t,o,i,s))}return c}async fetchOpenOrders(e,t,i,s={}){return this.fetchOrdersByStatus("open",e,t,i,s)}async fetchClosedOrders(e,t,i,s={}){return this.fetchOrdersByStatus("closed",e,t,i,s)}async fetchOrder(e,t,i={}){if(void 0===t)throw new r(this.id+" fetchOrder requires a symbol argument");await this.loadMarkets();let s=this.market(t),a={symbol:s.id,order_id:e.toString()},o=await this.v2GetOrderDetails(this.extend(a,i));return this.parseOrder(o.data,s)}parseOrderStatus(e){let t={1:"open",2:"closed",3:"open",4:"canceled",6:"error"};return e in t?t[e]:e}parseOrder(e,t){let i=this.safeString(e,"id"),s=this.safeString(e,"side"),r=this.safeString(e,"type"),a=this.safeString(e,"status"),o=this.safeInteger(e,"created_at");o=this.safeInteger(e,"ctime",o);let n=this.safeInteger(e,"mtime"),d=void 0;if(void 0===t){let i=this.safeString(e,"symbol");i in this.markets_by_id&&(t=this.markets_by_id[i])}void 0!==t&&(d=t.symbol);let c=void 0,h=void 0,l=void 0,u=void 0,p=void 0,m=void 0;if(void 0!==s)s=s.toLowerCase(),h=this.safeFloat(e.volume,"amount"),c="remain_volume"in e?this.safeFloat(e.remain_volume,"amount"):void 0,l="deal_volume"in e?this.safeFloat(e.deal_volume,"amount"):void 0,void 0===(u="age_price"in e?this.safeFloat(e.age_price,"amount"):void 0)&&(u="price"in e?this.safeFloat(e.price,"amount"):void 0);else{if(void 0!==r){let i=r.split("-");s=i[0],r=i[1],p=this.safeFloat(e,"deal_money"),u=this.safeFloat(e,"price"),u=this.safeFloat(e,"avg_price",u),h=this.safeFloat(e,"amount"),l=this.safeFloat(e,"deal_volume");let a=this.safeFloat(e,"fee");if(void 0!==a){let e=void 0;void 0!==t&&("buy"===s?e=t.base:"sell"===s&&(e=t.quote)),m={cost:a,currency:e}}}a=this.parseOrderStatus(a)}return void 0!==h&&(void 0!==c?void 0===l&&(l=Math.max(0,h-c)):void 0!==l&&(p=l*u,void 0===c&&(c=Math.max(0,h-l)))),void 0===a&&void 0!==c&&c>0&&(a="open"),{info:e,id:i,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:n,symbol:d,type:r,side:s,price:u,cost:p,amount:h,filled:l,remaining:c,status:a,fee:m,trades:void 0}}costToPrecision(e,t){return this.decimalToPrecision(t,h,this.markets[e].precision.price)}priceToPrecision(e,t){return this.decimalToPrecision(t,h,this.markets[e].precision.price)}amountToPrecision(e,t){return this.decimalToPrecision(t,l,this.markets[e].precision.amount)}feeToPrecision(e,t){return this.decimalToPrecision(t,h,this.currencies[e].precision)}async createOrder(e,t,i,s,r,a={}){if(await this.loadMarkets(),!this.password)throw new o(this.id+" createOrder requires exchange.password to be set to user trading password (not login password!)");this.checkRequiredCredentials();let d=this.market(e),c="limit"===t?1:2,h={symbol:d.id,side:i.toUpperCase(),type:c,volume:this.amountToPrecision(e,s),capital_password:this.password};if("market"===t&&"buy"===i){if(void 0===r)throw new n(this.id+" createOrder requires price argument for market buy orders to calculate total cost according to exchange rules");h.volume=this.amountToPrecision(e,s*r)}h.price="limit"===t?this.priceToPrecision(e,r):void 0===r?this.priceToPrecision(e,0):this.priceToPrecision(e,r);let l=await this.privatePostOrder(this.extend(h,a)),u=this.milliseconds();return{info:l,id:l.data.order_id.toString(),timestamp:u,datetime:this.iso8601(u),lastTradeTimestamp:void 0,status:void 0,symbol:e,type:t,side:i,price:r,amount:s,filled:void 0,remaining:void 0,cost:void 0,trades:void 0,fee:void 0}}async cancelOrder(e,t,i={}){if(await this.loadMarkets(),void 0===t)throw new r(this.id+" cancelOrder requires a symbol argument");let s=this.market(t);return{id:e,symbol:t,info:await this.privateDeleteOrder(this.extend({symbol:s.id,order_id:e},i))}}sign(e,t="public",i="GET",s={},r,a){this.checkRequiredCredentials();let o=this.urls.api[t]+"/"+this.implodeParams(e,s);if("private"===t||"v2"===t){let t=this.milliseconds().toString(),n=this.keysort(this.extend({time:t},s)),d=Object.keys(n),c="";for(let e=0;e<d.length;e++)c+=d[e]+n[d[e]].toString();c+=this.secret;let h=this.hmac(this.encode(c),this.encode(this.secret),"sha512"),l="order"===e&&"POST"===i?{}:n;o+="?"+this.urlencode(this.keysort(this.extend({api_key:this.apiKey,time:t},l))),o+="&sign="+h,"POST"===i&&(a=this.urlencode(n),r={"Content-Type":"application/x-www-form-urlencoded"})}else"public"===t||"v2public"===t?o+="?"+this.urlencode(this.extend({api_key:this.apiKey},s)):Object.keys(s).length&&(o+="?"+this.urlencode(s));return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if("string"==typeof o&&!(o.length<2||"{"!==o[0]&&"["!==o[0])){let e=JSON.parse(o);if("code"in e){let t=this.safeString(e,"code");if(void 0!==t&&"0"!==t){const i=this.safeString(e,"msg"),s=this.id+" "+this.json(e),a=this.exceptions;if(t in a){if(1===t){if(i.indexOf("Balance insufficient")>=0)throw new d(s)}else if(2===t){if("offsetNot Null"===i)throw new r(s);if("Parameter error"===i)throw new r(s)}throw new a[t](s)}throw new r(this.id+' unknown "error" value: '+this.json(e))}}}}}},902:function(e,t,i){"use strict";const s=i(800);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"coolcoin",name:"CoolCoin",countries:["HK"],urls:{logo:"https://user-images.githubusercontent.com/1294454/36770529-be7b1a04-1c5b-11e8-9600-d11f1996b539.jpg",api:{web:"https://www.coolcoin.com/coin",rest:"https://www.coolcoin.com/api/v1"},www:"https://www.coolcoin.com",doc:"https://www.coolcoin.com/help.api.html",fees:"https://www.coolcoin.com/spend.price.html"},fees:{trading:{maker:.001,taker:.001},funding:{withdraw:{BTC:.001,BCH:.002,ETH:.01,ETC:.01,LTC:.001,TBC:"1%",HSR:"1%",NEO:"1%",SDC:"1%",EOS:"1%",BTM:"1%",XAS:"1%",ACT:"1%",SAK:"1%",GCS:"1%",HCC:"1%",QTUM:"1%",GEC:"1%",TRX:"1%",IFC:"1%",PAY:"1%",PGC:"1%",KTC:"1%",INT:"1%",LSK:"0.5%",SKT:"1%",SSS:"1%",BT1:"1%",BT2:"1%"}}}})}}},903:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"crypton",name:"Crypton",countries:["EU"],rateLimit:500,version:"1",has:{fetchDepositAddress:!0,fetchMyTrades:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchTicker:!1,fetchTickers:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/41334251-905b5a78-6eed-11e8-91b9-f3aa435078a1.jpg",api:"https://api.cryptonbtc.com",www:"https://cryptonbtc.com",doc:"https://cryptonbtc.docs.apiary.io/",fees:"https://help.cryptonbtc.com/hc/en-us/articles/360004089872-Fees"},api:{public:{get:["currencies","markets","markets/{id}","markets/{id}/orderbook","markets/{id}/trades","tickers"]},private:{get:["balances","orders","orders/{id}","fills","deposit_address/{currency}","deposits"],post:["orders"],delete:["orders/{id}"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:.002,taker:.002}}})}async fetchMarkets(){let e=(await this.publicGetMarkets()).result,t=[],i=Object.keys(e);for(let s=0;s<i.length;s++){let r=i[s],a=e[r],o=a.base,n=a.quote,d=this.commonCurrencyCode(o),c=this.commonCurrencyCode(n),h=d+"/"+c,l={amount:8,price:this.precisionFromString(this.safeString(a,"priceStep"))},u=a.enabled;t.push({id:r,symbol:h,base:d,quote:c,baseId:o,quoteId:n,active:u,info:a,precision:l,limits:{amount:{min:this.safeFloat(a,"minSize"),max:void 0},price:{min:this.safeFloat(a,"priceStep"),max:void 0},cost:{min:void 0,max:void 0}}})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetBalances(e),i={info:t},s=Object.keys(t);for(let r=0;r<s.length;r++){let e=s[r],a=this.commonCurrencyCode(e),o=this.account(),n=t[e],d=parseFloat(n.total),c=parseFloat(n.free),h=parseFloat(n.locked);o.total=d,o.free=c,o.used=h,i[a]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetMarketsIdOrderbook(this.extend({id:this.marketId(e)},i));return this.parseOrderBook(s)}parseTicker(e,t){let i=void 0;t&&(i=t.symbol);let s=this.safeFloat(e,"last"),r=this.safeFloat(e,"change24h",0);return{symbol:i,timestamp:void 0,datetime:void 0,high:void 0,low:void 0,bid:this.safeFloat(e,"bid"),bidVolume:void 0,ask:this.safeFloat(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:s,last:s,previousClose:void 0,change:void 0,percentage:100*r,average:void 0,baseVolume:this.safeFloat(e,"volume24h"),quoteVolume:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers(t),s=Object.keys(i),r={};for(let a=0;a<s.length;a++){let e=s[a],t=i[e],o=void 0,n=e;r[n=e in this.markets_by_id?(o=this.markets_by_id[e]).symbol:this.parseSymbol(e)]=this.parseTicker(t,o)}return r}parseTrade(e,t){let i=this.parse8601(e.time),s=void 0;if("market"in e){let i=e.market;i in this.markets_by_id?t=this.markets_by_id[i]:s=this.parseSymbol(i)}void 0!==t&&(s=t.symbol);let r=void 0;return"fee"in e&&(r={cost:this.safeFloat(e,"fee"),currency:this.commonCurrencyCode(e.feeCurrency)}),{id:e.id.toString(),info:e,timestamp:i,datetime:this.iso8601(i),symbol:s,type:void 0,side:e.side,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"size"),order:this.safeString(e,"orderId"),fee:r}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={id:r.id};void 0!==i&&(a.limit=i);let o=await this.publicGetMarketsIdTrades(this.extend(a,s));return this.parseTrades(o.result,r,t,i)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={};void 0!==i&&(a.limit=i);let o=await this.privateGetFills(this.extend(a,s)),n=this.parseTrades(o.result,r,t,i);return this.filterBySymbol(n,e)}parseOrder(e,t){let i=e.id.toString(),s=e.status,r=e.side,a=e.type,o=void 0,n=e.market;o=n in this.markets_by_id?this.markets_by_id[n].symbol:this.parseSymbol(n);let d=this.parse8601(e.createdAt),c=this.iso8601(d),h=void 0;"fee"in e&&(h={cost:parseFloat(e.fee),currency:this.commonCurrencyCode(e.feeCurrency)});let l=this.safeFloat(e,"price"),u=this.safeFloat(e,"size"),p=this.safeFloat(e,"filledSize");return{info:e,id:i,timestamp:d,datetime:c,lastTradeTimestamp:void 0,symbol:o,type:a,side:r,price:l,cost:p*l,average:void 0,amount:u,filled:p,remaining:u-p,status:s,fee:h}}async fetchOrder(e,t,i={}){await this.loadMarkets();let s={id:e},r=await this.privateGetOrdersId(this.extend(s,i));return this.parseOrder(r.result)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r={};void 0!==e&&(r.market=this.marketId(e));let a=await this.privateGetOrders(this.extend(r,s));return this.parseOrders(a.result,void 0,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o={market:this.marketId(e),side:i,type:t,size:this.amountToPrecision(e,s),price:this.priceToPrecision(e,r)},n=await this.privatePostOrders(this.extend(o,a));return this.parseOrder(n.result)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s={id:e},r=await this.privateDeleteOrdersId(this.extend(s,i));return this.parseOrder(r.result)}parseSymbol(e){let[t,i]=e.split("-");return(t=this.commonCurrencyCode(t))+"/"+(i=this.commonCurrencyCode(i))}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privateGetDepositAddressCurrency(this.extend({currency:i.id},t)),r=s.result,a=this.safeString(r,"address"),o=this.safeString(r,"tag");return this.checkAddress(a),{currency:e,address:a,tag:o,info:s}}sign(e,t="public",i="GET",s={},r,a){let o="/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));"GET"===i&&Object.keys(n).length&&(o+="?"+this.urlencode(n));let d=this.urls.api+o;if("private"===t){this.checkRequiredCredentials();let e=this.milliseconds().toString(),t="";"GET"!==i&&Object.keys(n).length&&(t=a=this.json(n));let s=e+i+o+t,d=this.hmac(this.encode(s),this.encode(this.secret),"sha256");r={"CRYPTON-APIKEY":this.apiKey,"CRYPTON-SIGNATURE":d,"CRYPTON-TIMESTAMP":e,"Content-Type":"application/json"}}return{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if("{"===o[0]){let e=JSON.parse(o);if(!this.safeValue(e,"success"))throw new r(this.id+" "+o)}}}},904:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,InsufficientFunds:a,InvalidOrder:o,OrderNotFound:n,OrderNotCached:d,InvalidNonce:c}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"cryptopia",name:"Cryptopia",rateLimit:1500,countries:["NZ"],has:{CORS:!1,createMarketOrder:!1,fetchClosedOrders:"emulated",fetchCurrencies:!0,fetchDepositAddress:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOrder:"emulated",fetchOrderBooks:!0,fetchOrders:"emulated",fetchOpenOrders:!0,fetchTickers:!0,deposit:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/29484394-7b4ea6e2-84c6-11e7-83e5-1fccf4b2dc81.jpg",api:{public:"https://www.cryptopia.co.nz/api",private:"https://www.cryptopia.co.nz/api",web:"https://www.cryptopia.co.nz"},www:"https://www.cryptopia.co.nz",referral:"https://www.cryptopia.co.nz/Register?referrer=kroitor",doc:["https://support.cryptopia.co.nz/csm?id=kb_article&sys_id=a75703dcdbb9130084ed147a3a9619bc","https://support.cryptopia.co.nz/csm?id=kb_article&sys_id=40e9c310dbf9130084ed147a3a9619eb"]},timeframes:{"15m":15,"30m":30,"1h":60,"2h":120,"4h":240,"12h":720,"1d":1440,"1w":10080},api:{web:{get:["Exchange/GetTradePairChart"]},public:{get:["GetCurrencies","GetTradePairs","GetMarkets","GetMarkets/{id}","GetMarkets/{hours}","GetMarkets/{id}/{hours}","GetMarket/{id}","GetMarket/{id}/{hours}","GetMarketHistory/{id}","GetMarketHistory/{id}/{hours}","GetMarketOrders/{id}","GetMarketOrders/{id}/{count}","GetMarketOrderGroups/{ids}","GetMarketOrderGroups/{ids}/{count}"]},private:{post:["CancelTrade","GetBalance","GetDepositAddress","GetOpenOrders","GetTradeHistory","GetTransactions","SubmitTip","SubmitTrade","SubmitTransfer","SubmitWithdraw"]}},commonCurrencies:{ACC:"AdCoin",BAT:"BatCoin",BEAN:"BITB",BLZ:"BlazeCoin",BTG:"Bitgem",CAN:"CanYa",CAT:"Catcoin",CC:"CCX",CMT:"Comet",EPC:"ExperienceCoin",FCN:"Facilecoin",FUEL:"FC2",HAV:"Havecoin",KARM:"KARMA",LBTC:"LiteBitcoin",LDC:"LADACoin",MARKS:"Bitmark",NET:"NetCoin",RED:"RedCoin",STC:"StopTrumpCoin",QBT:"Cubits",WRC:"WarCoin"},options:{fetchTickersErrors:!0}})}async fetchMarkets(){let e=[],t=(await this.publicGetGetTradePairs()).Data;for(let i=0;i<t.length;i++){let s=t[i],r=s.Id,a=s.Label,o=s.Symbol,n=s.BaseSymbol,d=this.commonCurrencyCode(o),c=this.commonCurrencyCode(n);a=d+"/"+c;let h={amount:8,price:8},l=s.MinimumTrade,u={min:s.MinimumPrice,max:s.MaximumPrice},p={amount:{min:l,max:s.MaximumTrade},price:u,cost:{min:s.MinimumBaseTrade,max:void 0}},m="OK"===s.Status;e.push({id:r,symbol:a,label:s.Label,base:d,quote:c,baseId:o,quoteId:n,info:s,maker:s.TradeFee/100,taker:s.TradeFee/100,lot:p.amount.min,active:m,precision:h,limits:p})}return this.options.marketsByLabel=this.indexBy(e,"label"),e}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=(await this.publicGetGetMarketOrdersId(this.extend({id:this.marketId(e)},i))).Data;return this.parseOrderBook(s,void 0,"Buy","Sell","Price","Volume")}async fetchOHLCV(e,t="15m",i,s,r={}){let a=0;if(void 0!==i){const e=[86400,172800,604800,1209600,2592e3,7776e3,15552e3],t=e.length;let s=this.seconds(),r=parseInt(i/1e3);for(let i=1;i<t;i++)s-r>e[i]&&(a=i)}await this.loadMarkets();let o=this.market(e),n={tradePairId:o.id,dataRange:a,dataGroup:this.timeframes[t]},d=await this.webGetExchangeGetTradePairChart(this.extend(n,r)),c=d.Candle,h=d.Volume;for(let l=0;l<c.length;l++)c[l].push(h[l].basev);return this.parseOHLCVs(c,o,t,i,s)}joinMarketIds(e,t="-"){let i=e[0].toString();for(let s=1;s<e.length;s++)i+=t+e[s].toString();return i}async fetchOrderBooks(e,t={}){if(await this.loadMarkets(),void 0===e)throw new r(this.id+" fetchOrderBooks requires the symbols argument as of May 2018 (up to 5 symbols at max)");if(e.length>5)throw new r(this.id+" fetchOrderBooks accepts 5 symbols at max");let i=this.joinMarketIds(this.marketIds(e)),s=(await this.publicGetGetMarketOrderGroupsIds(this.extend({ids:i},t))).Data,a={};for(let r=0;r<s.length;r++){let e=s[r],t=this.safeInteger(e,"TradePairId"),i=t;if(t in this.markets_by_id){i=this.markets_by_id[t].symbol}a[i]=this.parseOrderBook(e,void 0,"Buy","Sell","Price","Volume")}return a}parseTicker(e,t){let i=this.milliseconds(),s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"Open"),a=this.safeFloat(e,"LastPrice"),o=a-r,n=this.safeFloat(e,"Volume"),d=this.safeFloat(e,"BaseVolume"),c=void 0;return void 0!==d&&void 0!==n&&n>0&&(c=d/n),{symbol:s,info:e,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"High"),low:this.safeFloat(e,"Low"),bid:this.safeFloat(e,"BidPrice"),bidVolume:void 0,ask:this.safeFloat(e,"AskPrice"),askVolume:void 0,vwap:c,open:r,close:a,last:a,previousClose:void 0,change:o,percentage:this.safeFloat(e,"Change"),average:this.sum(a,r)/2,baseVolume:n,quoteVolume:d}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=(await this.publicGetGetMarketId(this.extend({id:i.id},t))).Data;return this.parseTicker(s,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i={},s=(await this.publicGetGetMarkets(t)).Data;for(let a=0;a<s.length;a++){let e=s[a],t=e.TradePairId;if(t in this.markets_by_id){let s=this.markets_by_id[t];i[s.symbol]=this.parseTicker(e,s)}else if(this.options.fetchTickersErrors)throw new r(this.id+" fetchTickers() returned unrecognized pair id "+t.toString())}return this.filterByArray(i,"symbol",e)}parseTrade(e,t){let i=void 0;"Timestamp"in e?i=1e3*e.Timestamp:"TimeStamp"in e&&(i=this.parse8601(e.TimeStamp));let s=this.safeFloat(e,"Price");s||(s=this.safeFloat(e,"Rate"));let r=this.safeFloat(e,"Total"),a=this.safeString(e,"TradeId");void 0===t&&"TradePairId"in e&&e.TradePairId in this.markets_by_id&&(t=this.markets_by_id[e.TradePairId]);let o=void 0,n=void 0;return void 0!==t&&(o=t.symbol,"Fee"in e&&(n={currency:t.quote,cost:e.Fee})),{id:a,info:e,order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:o,type:"limit",side:e.Type.toLowerCase(),price:s,cost:r,amount:e.Amount,fee:n}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=24;if(void 0!==t){let e=this.milliseconds()-t,i=36e5;a=parseInt(Math.ceil(e/i))}let o={id:r.id,hours:a},n=(await this.publicGetGetMarketHistoryIdHours(this.extend(o,s))).Data;return this.parseTrades(n,r,t,i)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r={},a=void 0;void 0!==e&&(a=this.market(e),r.TradePairId=a.id),void 0!==i&&(r.Count=i);let o=await this.privatePostGetTradeHistory(this.extend(r,s));return this.parseTrades(o.Data,a,t,i)}async fetchCurrencies(e={}){let t=(await this.publicGetGetCurrencies(e)).Data,i={};for(let s=0;s<t.length;s++){let e=t[s],r=e.Symbol,a=8,o=this.commonCurrencyCode(r),n="Active"===e.ListingStatus,d=e.Status.toLowerCase();"ok"!==d&&(n=!1),i[o]={id:r,code:o,info:e,name:e.Name,active:n,status:d,fee:e.WithdrawFee,precision:a,limits:{amount:{min:Math.pow(10,-a),max:Math.pow(10,a)},price:{min:Math.pow(10,-a),max:Math.pow(10,a)},cost:{min:e.MinBaseTrade,max:void 0},withdraw:{min:e.MinWithdraw,max:e.MaxWithdraw}}}}return i}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostGetBalance(e),i=t.Data,s={info:t};for(let r=0;r<i.length;r++){let e=i[r],t=e.Symbol,a=this.commonCurrencyCode(t),o={free:e.Available,used:0,total:e.Total};o.used=o.total-o.free,s[a]=o}return this.parseBalance(s)}async createOrder(e,t,i,s,a,o={}){if("market"===t)throw new r(this.id+" allows limit orders only");await this.loadMarkets();let n={TradePairId:this.market(e).id,Type:this.capitalize(i),Rate:a,Amount:s},d=await this.privatePostSubmitTrade(this.extend(n,o));if(!d)throw new r(this.id+" createOrder returned unknown error: "+this.json(d));let c=void 0,h=0,l="open";"Data"in d&&"OrderId"in d.Data&&(d.Data.OrderId?c=d.Data.OrderId.toString():(h=s,l="closed"));let u={id:c,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,status:l,symbol:e,type:t,side:i,price:a,cost:a*s,amount:s,remaining:s-h,filled:h,fee:void 0};return c&&(this.orders[c]=u),this.extend({info:d},u)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=void 0;try{s=await this.privatePostCancelTrade(this.extend({Type:"Trade",OrderId:e},i)),e in this.orders&&(this.orders[e].status="canceled")}catch(e){if(this.last_json_response){let e=this.safeString(this.last_json_response,"Error");if(e&&e.indexOf("does not exist")>=0)throw new n(this.id+" cancelOrder() error: "+this.last_http_response)}throw e}return this.parseOrder(s)}parseOrder(e,t){let i=void 0;if(void 0!==t)i=t.symbol;else if("Market"in e){let s=e.Market;s in this.markets_by_id?i=(t=this.markets_by_id[s]).symbol:s in this.options.marketsByLabel&&(i=(t=this.options.marketsByLabel[s]).symbol)}let s=this.parse8601(e,"TimeStamp"),r=void 0;s&&(r=this.iso8601(s));let a=this.safeFloat(e,"Amount"),o=this.safeFloat(e,"Remaining"),n=void 0;void 0!==a&&void 0!==o&&(n=a-o);let d=this.safeValue(e,"OrderId");void 0!==d&&(d=d.toString());let c=this.safeString(e,"Type");return void 0!==c&&(c=c.toLowerCase()),{id:d,info:this.omit(e,"status"),timestamp:s,datetime:r,lastTradeTimestamp:void 0,status:this.safeString(e,"status"),symbol:i,type:"limit",side:c,price:this.safeFloat(e,"Rate"),cost:this.safeFloat(e,"Total"),amount:a,filled:n,remaining:o,fee:void 0}}async fetchOrders(e,t,i,s={}){await this.loadMarkets();let r=void 0,a={};void 0!==e&&(r=this.market(e),a.TradePairId=r.id);let o=await this.privatePostGetOpenOrders(this.extend(a,s)),n=[];for(let u=0;u<o.Data.length;u++)n.push(this.extend(o.Data[u],{status:"open"}));let d=this.parseOrders(n,r);for(let u=0;u<d.length;u++)this.orders[d[u].id]=d[u];let c=this.indexBy(d,"id"),h=Object.keys(this.orders),l=[];for(let u=0;u<h.length;u++){let t=h[u];if(t in c)this.orders[t]=this.extend(this.orders[t],c[t]);else{let i=this.orders[t];"open"===i.status&&(void 0!==e&&i.symbol!==e||(this.orders[t]=this.extend(i,{status:"closed",cost:i.amount*i.price,filled:i.amount,remaining:0})))}let i=this.orders[t];void 0!==e&&i.symbol!==e||l.push(i)}return this.filterBySinceLimit(l,t,i)}async fetchOrder(e,t,i={}){e=e.toString();let s=await this.fetchOrders(t,void 0,void 0,i);for(let r=0;r<s.length;r++)if(s[r].id===e)return s[r];throw new d(this.id+" order "+e+" not found in cached .orders, fetchOrder requires .orders (de)serialization implemented for this method to work properly")}async fetchOpenOrders(e,t,i,s={}){let r=await this.fetchOrders(e,t,i,s),a=[];for(let o=0;o<r.length;o++)"open"===r[o].status&&a.push(r[o]);return a}async fetchClosedOrders(e,t,i,s={}){let r=await this.fetchOrders(e,t,i,s),a=[];for(let o=0;o<r.length;o++)"closed"===r[o].status&&a.push(r[o]);return a}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privatePostGetDepositAddress(this.extend({Currency:i.id},t)),r=this.safeString(s.Data,"BaseAddress");return r||(r=this.safeString(s.Data,"Address")),this.checkAddress(r),{currency:e,address:r,info:s}}async withdraw(e,t,i,s,r={}){await this.loadMarkets();let a=this.currency(e);this.checkAddress(i);let o={Currency:a.id,Amount:t,Address:i};s&&(o.PaymentId=s);let n=await this.privatePostSubmitWithdraw(this.extend(o,r));return{info:n,id:n.Data}}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t]+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));if("private"===t){this.checkRequiredCredentials();let e=this.nonce().toString();a=this.json(n,{convertArraysToObjects:!0});let t=this.hash(this.encode(a),"md5","base64"),s=this.base64ToBinary(this.secret),d=this.encodeURIComponent(o).toLowerCase();t=this.binaryToString(t);let c=this.apiKey+i+d+e+t,h=this.hmac(this.encode(c),s,"sha256","base64");r={"Content-Type":"application/json",Authorization:"amx "+this.apiKey+":"+this.binaryToString(h)+":"+e}}else Object.keys(n).length&&(o+="?"+this.urlencode(n));return{url:o,method:i,body:a,headers:r}}nonce(){return this.milliseconds()}handleErrors(e,t,i,s,d,h){if("string"!=typeof h)return;if(h.length<2)return;const l=this.sanitizeBrokenJSONString(h);if("{"===l[0]){let e=JSON.parse(l);if("Success"in e){const t=this.safeValue(e,"Success");if(void 0!==t&&!t){let t=this.safeString(e,"Error"),i=this.id;if("string"==typeof t){if(i=i+" "+t,t.indexOf("Invalid trade amount")>=0)throw new o(i);if(t.indexOf("does not exist")>=0)throw new n(i);if(t.indexOf("Insufficient Funds")>=0)throw new a(i);if(t.indexOf("Nonce has already been used")>=0)throw new c(i)}else i=i+" "+l;throw new r(i)}}}}sanitizeBrokenJSONString(e){const t=e.indexOf("{");return t>=0?e.slice(t):e}parseJson(e,t,i,s){return super.parseJson(e,this.sanitizeBrokenJSONString(t),i,s)}}},905:function(e,t,i){"use strict";const s=i(788),{AuthenticationError:r,PermissionDenied:a}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"deribit",name:"Deribit",countries:["NL"],version:"v1",userAgent:void 0,rateLimit:2e3,has:{CORS:!0,editOrder:!0,fetchOrder:!0,fetchOrders:!1,fetchOpenOrders:!0,fetchClosedOrders:!0,fetchMyTrades:!0,fetchTickers:!1},timeframes:{},urls:{logo:"https://user-images.githubusercontent.com/1294454/41933112-9e2dd65a-798b-11e8-8440-5bab2959fcb8.jpg",api:"https://www.deribit.com",www:"https://www.deribit.com",doc:["https://www.deribit.com/pages/docs/api","https://github.com/deribit"],fees:"https://www.deribit.com/pages/information/fees",referral:"https://www.deribit.com/reg-1189.4038"},api:{public:{get:["test","getinstruments","index","getcurrencies","getorderbook","getlasttrades","getsummary","stats","getannouncments"]},private:{get:["account","getopenorders","positions","orderhistory","orderstate","tradehistory","newannouncements"],post:["buy","sell","edit","cancel","cancelall"]}},exceptions:{"Invalid API Key.":r,"Access Denied":a},options:{fetchTickerQuotes:!0}})}async fetchMarkets(){let e=(await this.publicGetGetinstruments()).result,t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.instrumentName,a=s.baseCurrency,o=s.currency;a=this.commonCurrencyCode(a),o=this.commonCurrencyCode(o),t.push({id:r,symbol:r,base:a,quote:o,active:s.isActive,precision:{amount:s.minTradeSize,price:s.tickSize},limits:{amount:{min:s.minTradeSize},price:{min:s.tickSize}},type:s.kind,spot:!1,future:"future"===s.kind,option:"option"===s.kind,info:s})}return t}async fetchBalance(e={}){let t=await this.privateGetAccount(),i={BTC:{free:t.result.availableFunds,used:t.result.maintenanceMargin,total:t.result.equity}};return this.parseBalance(i)}async fetchDepositAddress(e,t={}){let i=await this.privateGetAccount();return{currency:"BTC",address:i.depositAddress,status:"ok",info:i}}parseTicker(e,t){let i=this.safeInteger(e,"created"),s=void 0===i?void 0:this.iso8601(i),r=this.findSymbol(this.safeString(e,"instrumentName"),t),a=this.safeFloat(e,"last");return{symbol:r,timestamp:i,datetime:s,high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"bidPrice"),bidVolume:void 0,ask:this.safeFloat(e,"askPrice"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:this.safeFloat(e,"volume"),info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetGetsummary(this.extend({instrument:i.id},t));return this.parseTicker(s.result,i)}parseTrade(e,t){let i=this.safeString(e,"tradeId"),s=void 0;void 0!==t&&(s=t.symbol);let r=this.safeInteger(e,"timeStamp");return{info:e,id:i,timestamp:r,datetime:this.iso8601(r),symbol:s,order:void 0,type:void 0,side:e.direction,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"quantity")}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={instrument:r.id};a.limit=void 0!==i?i:1e4;let o=await this.publicGetGetlasttrades(this.extend(a,s));return this.parseTrades(o.result,r,t,i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=await this.publicGetGetorderbook({instrument:s.id}),a=parseInt(r.usOut/1e3),o=this.parseOrderBook(r.result,a,"bids","asks","price","quantity");return this.extend(o,{nonce:this.safeInteger(r,"tstamp")})}parseOrderStatus(e){const t={open:"open",cancelled:"canceled",filled:"closed"};return e in t?t.status:e}parseOrder(e,t){let i=this.safeInteger(e,"created"),s=this.safeInteger(e,"lastUpdate");s=this.safeInteger(e,"tstamp",s);let r=this.safeInteger(e,"modified"),a=Math.max(s,r),o=this.safeString(e,"orderId"),n=this.safeFloat(e,"price"),d=this.safeFloat(e,"amount"),c=this.safeFloat(e,"filledQuantity"),h=void 0;n=this.safeFloat(e,"avgPrice",n);let l=void 0;void 0!==c&&(void 0!==d&&(h=d-c),void 0!==n&&(l=n*c));let u=this.safeString(e,"state");u=this.parseOrderStatus(u);let p=this.safeString(e,"direction");void 0!==p&&(p=p.toLowerCase());let m=this.safeFloat(e,"commission");void 0!==m&&(m=Math.abs(m));let f={cost:m,currency:"BTC"};return{info:e,id:o,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:a,symbol:e.instrument,type:void 0,side:p,price:n,amount:d,cost:l,filled:c,remaining:h,status:u,fee:f,trades:void 0}}async fetchOrder(e,t,i={}){let s=await this.privateGetOrderstate({orderId:e});return this.parseOrder(s.result)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o={instrument:this.marketId(e),quantity:s,type:t};void 0!==r&&(o.price=r);let n="privatePost"+this.capitalize(i),d=await this[n](this.extend(o,a));return this.parseOrder(d.result)}async editOrder(e,t,i,s,r,a,o={}){await this.loadMarkets();let n={orderId:e};void 0!==r&&(n.quantity=r),void 0!==a&&(n.price=a);let d=await this.privatePostEdit(this.extend(n,o));return this.parseOrder(d.result)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostCancel(this.extend({orderId:e},i));return this.parseOrder(s.result)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={instrument:r.id},o=await this.privateGetGetopenorders(this.extend(a,s));return this.parseOrders(o.result,r,t,i)}async fetchClosedOrders(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={instrument:r.id},o=await this.privateGetOrderhistory(this.extend(a,s));return this.parseOrders(o.result,r,t,i)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={instrument:r.id};void 0!==i&&(a.count=i);let o=await this.privateGetTradehistory(this.extend(a,s));return this.parseTrades(o.result,r,t,i)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o="/api/"+this.version+"/"+t+"/"+e,n=this.urls.api+o;if("public"===t)Object.keys(s).length&&(n+="?"+this.urlencode(s));else{this.checkRequiredCredentials();let e=this.nonce().toString(),t="_="+e+"&_ackey="+this.apiKey+"&_acsec="+this.secret+"&_action="+o;"POST"===i&&(s=this.keysort(s),t+="&"+this.urlencode(s));let n=this.hash(this.encode(t),"sha256","base64");r={"Content-Type":"application/x-www-form-urlencoded","x-deribit-sig":this.apiKey+"."+e+"."+n},a=this.urlencode(s)}return{url:n,method:i,body:a,headers:r}}}},906:function(e,t,i){"use strict";const s=i(791);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"dsx",name:"DSX",countries:["UK"],rateLimit:1500,has:{CORS:!1,fetchOrder:!0,fetchOrders:!0,fetchOpenOrders:!0,fetchClosedOrders:!0,fetchTickers:!0,fetchMyTrades:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27990275-1413158a-645a-11e7-931c-94717f7510e3.jpg",api:{public:"https://dsx.uk/mapi",private:"https://dsx.uk/tapi",dwapi:"https://dsx.uk/dwapi"},www:"https://dsx.uk",doc:["https://api.dsx.uk","https://dsx.uk/api_docs/public","https://dsx.uk/api_docs/private",""]},api:{public:{get:["barsFromMoment/{id}/{period}/{start}","depth/{pair}","info","lastBars/{id}/{period}/{amount}","periodBars/{id}/{period}/{start}/{end}","ticker/{pair}","trades/{pair}"]},private:{post:["getInfo","TransHistory","TradeHistory","OrderHistory","ActiveOrders","Trade","CancelOrder"]},dwapi:{post:["getCryptoDepositAddress","cryptoWithdraw","fiatWithdraw","getTransactionStatus","getTransactions"]}}})}getBaseQuoteFromMarketId(e){let t=e.toUpperCase(),i=t.slice(0,3),s=t.slice(3,6);return[i=this.commonCurrencyCode(i),s=this.commonCurrencyCode(s)]}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privatePostGetInfo()).return,i={info:t},s=t.funds,r=Object.keys(s);for(let a=0;a<r.length;a++){let e=r[a],o=e.toUpperCase();o=this.commonCurrencyCode(o);let n={free:s[e],used:0,total:t.total[e]};n.used=n.total-n.free,i[o]=n}return this.parseBalance(i)}parseTicker(e,t){let i=1e3*e.updated,s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"avg");void 0!==r&&r>0&&(r=1/r);let a=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:r,baseVolume:this.safeFloat(e,"vol"),quoteVolume:this.safeFloat(e,"vol_cur"),info:e}}getOrderIdKey(){return"orderId"}signBodyWithSecret(e){return this.decode(this.hmac(this.encode(e),this.encode(this.secret),"sha512","base64"))}getVersionString(){return""}}},907:function(e,t,i){"use strict";const s=i(798);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"ethfinex",name:"Ethfinex",countries:["VG"],version:"v1",rateLimit:1500,has:{CORS:!1,createDepositAddress:!0,deposit:!0,fetchClosedOrders:!0,fetchDepositAddress:!0,fetchFees:!0,fetchFundingFees:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchTickers:!0,fetchTradingFees:!0,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","3h":"3h","6h":"6h","12h":"12h","1d":"1D","1w":"7D","2w":"14D","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/37555526-7018a77c-29f9-11e8-8835-8e415c038a18.jpg",api:"https://api.ethfinex.com",www:"https://www.ethfinex.com",doc:["https://bitfinex.readme.io/v1/docs","https://github.com/bitfinexcom/bitfinex-api-node","https://www.ethfinex.com/api_docs"]}})}}},908:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,ExchangeNotAvailable:a,OrderNotFound:o,AuthenticationError:n,InsufficientFunds:d,InvalidOrder:c,InvalidNonce:h}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"exmo",name:"EXMO",countries:["ES","RU"],rateLimit:350,version:"v1",has:{CORS:!1,fetchClosedOrders:"emulated",fetchDepositAddress:!0,fetchOpenOrders:!0,fetchOrder:"emulated",fetchOrders:"emulated",fetchOrderTrades:!0,fetchOrderBooks:!0,fetchMyTrades:!0,fetchTickers:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766491-1b0ea956-5eda-11e7-9225-40d67b481b8d.jpg",api:"https://api.exmo.com",www:"https://exmo.me",referral:"https://exmo.me/?ref=131685",doc:["https://exmo.me/en/api_doc?ref=131685","https://github.com/exmo-dev/exmo_api_lib/tree/master/nodejs"],fees:"https://exmo.com/en/docs/fees"},api:{public:{get:["currency","order_book","pair_settings","ticker","trades"]},private:{post:["user_info","order_create","order_cancel","user_open_orders","user_trades","user_cancelled_orders","order_trades","required_amount","deposit_address","withdraw_crypt","withdraw_get_txid","excode_create","excode_load","wallet_history"]}},fees:{trading:{maker:.002,taker:.002},funding:{withdraw:{BTC:.001,LTC:.01,DOGE:1,DASH:.01,ETH:.01,WAVES:.001,ZEC:.001,USDT:25,XMR:.05,XRP:.02,KICK:350,ETC:.01,BCH:.001},deposit:{USDT:15,KICK:50}}},exceptions:{40005:n,40009:h,40015:r,40016:a,40017:n,50052:d,50054:d,50304:o,50173:o,50319:c,50321:c}})}async fetchMarkets(){let e=await this.publicGetPairSettings(),t=Object.keys(e),i=[];for(let s=0;s<t.length;s++){let r=t[s],a=e[r],o=r.replace("_","/"),[n,d]=o.split("/");i.push({id:r,symbol:o,base:n,quote:d,active:!0,limits:{amount:{min:this.safeFloat(a,"min_quantity"),max:this.safeFloat(a,"max_quantity")},price:{min:this.safeFloat(a,"min_price"),max:this.safeFloat(a,"max_price")},cost:{min:this.safeFloat(a,"min_amount"),max:this.safeFloat(a,"max_amount")}},precision:{amount:8,price:8},info:a})}return i}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostUserInfo(),i={info:t},s=Object.keys(this.currencies);for(let r=0;r<s.length;r++){let e=s[r],a=this.account();e in t.balances&&(a.free=parseFloat(t.balances[e])),e in t.reserved&&(a.used=parseFloat(t.reserved[e])),a.total=this.sum(a.free,a.used),i[e]=a}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=this.extend({pair:s.id},i);void 0!==t&&(r.limit=t);let a=(await this.publicGetOrderBook(r))[s.id];return this.parseOrderBook(a,void 0,"bid","ask")}async fetchOrderBooks(e,t={}){await this.loadMarkets();let i=void 0;if(void 0===e){if((i=this.ids.join(",")).length>2048){let e=this.ids.length;throw new r(this.id+" has "+e.toString()+" symbols exceeding max URL length, you are required to specify a list of symbols in the first argument to fetchOrderBooks")}}else i=(i=this.marketIds(e)).join(",");let s=await this.publicGetOrderBook(this.extend({pair:i},t)),a={};i=Object.keys(s);for(let r=0;r<i.length;r++){let e=i[r];a[this.findSymbol(e)]=this.parseOrderBook(s[e],void 0,"bid","ask")}return a}parseTicker(e,t){let i=1e3*e.updated,s=void 0;t&&(s=t.symbol);const r=this.safeFloat(e,"last_trade");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy_price"),bidVolume:void 0,ask:this.safeFloat(e,"sell_price"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeFloat(e,"avg"),baseVolume:this.safeFloat(e,"vol"),quoteVolume:this.safeFloat(e,"vol_curr"),info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTicker(t),s={},r=Object.keys(i);for(let a=0;a<r.length;a++){let e=r[a],t=this.markets_by_id[e],o=t.symbol,n=i[e];s[o]=this.parseTicker(n,t)}return s}async fetchTicker(e,t={}){await this.loadMarkets();let i=await this.publicGetTicker(t),s=this.market(e);return this.parseTicker(i[s.id],s)}parseTrade(e,t){let i=1e3*e.date;return{id:e.trade_id.toString(),info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:this.safeString(e,"order_id"),type:void 0,side:e.type,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"quantity"),cost:this.safeFloat(e,"amount")}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTrades(this.extend({pair:r.id},s));return this.parseTrades(a[r.id],r,t,i)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r={},a=void 0;void 0!==e&&(a=this.market(e),r.pair=a.id);let o=await this.privatePostUserTrades(this.extend(r,s));return void 0!==a&&(o=o[a.id]),this.parseTrades(o,a,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o="market"===t?t+"_":"",n=this.market(e);"market"===t&&void 0===r&&(r=0);let d={pair:n.id,quantity:this.amountToString(e,s),type:o+i,price:this.priceToPrecision(e,r)},c=await this.privatePostOrderCreate(this.extend(d,a)),h=this.safeString(c,"order_id"),l=this.milliseconds();s=parseFloat(s),r=parseFloat(r);let u={id:h,timestamp:l,datetime:this.iso8601(l),lastTradeTimestamp:void 0,status:"open",symbol:e,type:t,side:i,price:r,cost:r*s,amount:s,remaining:s,filled:0,fee:void 0,trades:void 0};return this.orders[h]=u,this.extend({info:c},u)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostOrderCancel({order_id:e});return e in this.orders&&(this.orders[e].status="canceled"),s}async fetchOrder(e,t,i={}){await this.loadMarkets();try{let t=await this.privatePostOrderTrades({order_id:e.toString()});return this.parseOrder(t)}catch(t){if(t instanceof o&&e in this.orders)return this.orders[e]}throw new o(this.id+" fetchOrder order id "+e.toString()+" not found in cache.")}async fetchOrderTrades(e,t,i,s,r={}){let a=void 0;void 0!==t&&(a=this.market(t));let o=await this.privatePostOrderTrades({order_id:e.toString()});return this.parseTrades(o,a,i,s)}updateCachedOrders(e,t){for(let r=0;r<e.length;r++){const t=e[r].id;this.orders[t]=e[r]}let i=this.indexBy(e,"id"),s=Object.keys(this.orders);for(let r=0;r<s.length;r++){let e=s[r],a=this.orders[e];if(!(e in i)){if(void 0!==t&&t!==a.symbol)continue;"open"===a.status&&(void 0===(a=this.extend(a,{status:"closed",cost:void 0,filled:a.amount,remaining:0})).cost&&void 0!==a.filled&&(a.cost=a.filled*a.price),this.orders[e]=a)}}return this.toArray(this.orders)}async fetchOrders(e,t,i,s={}){await this.loadMarkets();let r=await this.privatePostUserOpenOrders(s),a=Object.keys(r),o=[];for(let n=0;n<a.length;n++){let e=a[n],t=void 0;e in this.markets_by_id&&(t=this.markets_by_id[e]);let i=this.parseOrders(r[e],t);o=this.arrayConcat(o,i)}return this.updateCachedOrders(o,e),this.filterBySymbolSinceLimit(this.toArray(this.orders),e,t,i)}async fetchOpenOrders(e,t,i,s={}){await this.fetchOrders(e,t,i,s);let r=this.filterBy(this.orders,"status","open");return this.filterBySymbolSinceLimit(r,e,t,i)}async fetchClosedOrders(e,t,i,s={}){await this.fetchOrders(e,t,i,s);let r=this.filterBy(this.orders,"status","closed");return this.filterBySymbolSinceLimit(r,e,t,i)}parseOrder(e,t){let i=this.safeString(e,"order_id"),s=this.safeInteger(e,"created");void 0!==s&&(s*=1e3);let r=void 0,a=void 0,o=this.safeString(e,"type");if(void 0===t){let i=void 0;"pair"in e?i=e.pair:"in_currency"in e&&"out_currency"in e&&(i="buy"===o?e.in_currency+"_"+e.out_currency:e.out_currency+"_"+e.in_currency),void 0!==i&&i in this.markets_by_id&&(t=this.markets_by_id[i])}let n=this.safeFloat(e,"quantity");if(void 0===n){let t="buy"===o?"in_amount":"out_amount";n=this.safeFloat(e,t)}let d=this.safeFloat(e,"price"),c=this.safeFloat(e,"amount"),h=0,l=[],u=this.safeValue(e,"trades"),p=void 0;if(void 0!==u&&Array.isArray(u))for(let b=0;b<u.length;b++){let e=this.parseTrade(u[b],t);void 0===i&&(i=e.order),void 0===s&&(s=e.timestamp),s>e.timestamp&&(s=e.timestamp),h+=e.amount,void 0===p&&(p=0),void 0===c&&(c=0),c+=e.cost,l.push(e)}void 0!==s&&(r=this.iso8601(s));let m=void 0;void 0!==n&&(m=n-h);let f=this.safeString(e,"status");f=h>=n?"closed":"open",void 0===t&&(t=this.getMarketFromTrades(l));let y=void 0;return void 0!==t&&(a=t.symbol,y=t.quote),void 0===c?void 0!==d&&(c=d*h):void 0===d&&h>0&&(d=c/h),{id:i,datetime:r,timestamp:s,lastTradeTimestamp:void 0,status:f,symbol:a,type:"limit",side:o,price:d,cost:c,amount:n,filled:h,remaining:m,trades:l,fee:{cost:p,currency:y},info:e}}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=await this.privatePostDepositAddress(t),s=this.safeString(i,e),r=void 0,a=void 0;if(s){let e=s.split(",");r=e[0],e.length>1&&(a=e[1])}return this.checkAddress(r),{currency:e,address:r,tag:a,info:i}}getMarketFromTrades(e){let t=this.indexBy(e,"pair"),i=Object.keys(t);if(1===i.length)return this.markets[i[0]]}calculateFee(e,t,i,s,r,a="taker",o={}){let n=this.markets[e],d=n[a],c=parseFloat(this.costToPrecision(e,s*d)),h="quote";return"sell"===i?c*=r:h="base",{type:a,currency:n[h],rate:d,cost:parseFloat(this.feeToPrecision(e,c))}}async withdraw(e,t,i,s,r={}){await this.loadMarkets();let a={amount:t,currency:e,address:i};void 0!==s&&(a.invoice=s);let o=await this.privatePostWithdrawCrypt(this.extend(a,r));return{info:o,id:o.task_id}}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.version+"/"+e;if("public"===t)Object.keys(s).length&&(o+="?"+this.urlencode(s));else{this.checkRequiredCredentials();let e=this.nonce();a=this.urlencode(this.extend({nonce:e},s)),r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.hmac(this.encode(a),this.encode(this.secret),"sha512")}}return{url:o,method:i,body:a,headers:r}}nonce(){return this.milliseconds()}handleErrors(e,t,i,s,a,o){if("string"==typeof o&&!(o.length<2||"{"!==o[0]&&"["!==o[0])){let e=JSON.parse(o);if("result"in e){let t=this.safeValue(e,"result",!1);if("string"==typeof t&&(t="true"===t||"1"===t),!t){let t=void 0;const i=this.safeString(e,"error").split(":");if(i.length>1){const e=i[0].split(" ");t=e.length>1?e[1]:e[0]}const s=this.id+" "+this.json(e),a=this.exceptions;throw t in a?new a[t](s):new r(s)}}}}}},909:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,AuthenticationError:a}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"exx",name:"EXX",countries:["CN"],rateLimit:100,has:{fetchOrder:!0,fetchTickers:!0,fetchOpenOrders:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/37770292-fbf613d0-2de4-11e8-9f79-f2dc451b8ccb.jpg",api:{public:"https://api.exx.com/data/v1",private:"https://trade.exx.com/api"},www:"https://www.exx.com/",doc:"https://www.exx.com/help/restApi",fees:"https://www.exx.com/help/rate"},api:{public:{get:["markets","tickers","ticker","depth","trades"]},private:{get:["order","cancel","getOrder","getOpenOrders","getBalance"]}},fees:{trading:{maker:.001,taker:.001},funding:{withdraw:{BCC:3e-4,BCD:0,BOT:10,BTC:.001,BTG:0,BTM:25,BTS:3,EOS:1,ETC:.01,ETH:.01,ETP:.012,HPY:0,HSR:.001,INK:20,LTC:.005,MCO:.6,MONA:.01,QASH:5,QCASH:5,QTUM:.01,USDT:5}}},commonCurrencies:{CAN:"Content and AD Network"}})}async fetchMarkets(){let e=await this.publicGetMarkets(),t=Object.keys(e),i=[];for(let s=0;s<t.length;s++){let r=t[s],a=e[r],[o,n]=r.split("_"),d=r.toUpperCase(),[c,h]=d.split("_"),l=(c=this.commonCurrencyCode(c))+"/"+(h=this.commonCurrencyCode(h)),u=!0===a.isOpen,p={amount:parseInt(a.amountScale),price:parseInt(a.priceScale)},m=Math.pow(10,-p.amount);i.push({id:r,symbol:l,base:c,quote:h,baseId:o,quoteId:n,active:u,lot:m,precision:p,limits:{amount:{min:m,max:Math.pow(10,p.amount)},price:{min:Math.pow(10,-p.price),max:Math.pow(10,p.price)},cost:{min:void 0,max:void 0}},info:a})}return i}parseTicker(e,t){let i=t.symbol,s=parseInt(e.date);e=e.ticker;let r=this.safeFloat(e,"last");return{symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:this.safeFloat(e,"riseRate"),percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"vol"),quoteVolume:void 0,info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTicker(this.extend({currency:i.id},t));return this.parseTicker(s,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers(t),s={},r=this.milliseconds(),a=Object.keys(i);for(let o=0;o<a.length;o++){let e=a[o];if(!(e in this.marketsById))continue;let t=this.marketsById[e],n=t.symbol,d={date:r,ticker:i[e]};s[n]=this.parseTicker(d,t)}return s}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetDepth(this.extend({currency:this.marketId(e)},i));return this.parseOrderBook(s,s.timestamp)}parseTrade(e,t){let i=1e3*e.date,s=this.safeFloat(e,"price"),r=this.safeFloat(e,"amount"),a=t.symbol,o=this.costToPrecision(a,s*r);return{timestamp:i,datetime:this.iso8601(i),symbol:a,id:this.safeString(e,"tid"),order:void 0,type:"limit",side:e.type,price:s,amount:r,cost:o,fee:void 0,info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTrades(this.extend({currency:r.id},s));return this.parseTrades(a,r,t,i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetGetBalance(e),i={info:t};t=t.funds;let s=Object.keys(t);for(let r=0;r<s.length;r++){let e=s[r],a=t[e],o=this.commonCurrencyCode(e),n={free:parseFloat(a.balance),used:parseFloat(a.freeze),total:parseFloat(a.total)};i[o]=n}return this.parseBalance(i)}parseOrder(e,t){let i=t.symbol,s=parseInt(e.trade_date),r=this.safeFloat(e,"price"),a=this.safeFloat(e,"trade_money"),o=this.safeFloat(e,"total_amount"),n=this.safeFloat(e,"trade_amount",0),d=this.amountToPrecision(i,o-n),c=this.safeInteger(e,"status");c=1===c?"canceled":2===c?"closed":"open";let h=void 0;return"fees"in e&&(h={cost:this.safeFloat(e,"fees"),currency:t.quote}),{id:this.safeString(e,"id"),datetime:this.iso8601(s),timestamp:s,lastTradeTimestamp:void 0,status:"open",symbol:i,type:"limit",side:e.type,price:r,cost:a,amount:o,filled:n,remaining:d,trades:void 0,fee:h,info:e}}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n=await this.privateGetOrder(this.extend({currency:o.id,type:i,price:r,amount:s},a)),d=n.id,c=this.parseOrder({id:d,trade_date:this.milliseconds(),total_amount:s,price:r,type:i,info:n},o);return this.orders[d]=c,c}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t);return await this.privateGetCancel(this.extend({id:e,currency:s.id},i))}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t),r=await this.privateGetGetOrder(this.extend({id:e,currency:s.id},i));return this.parseOrder(r,s)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.privateGetOpenOrders(this.extend({currency:r.id},s));return this.parseOrders(a,r,t,i)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t]+"/"+e;if("public"===t)Object.keys(s).length&&(o+="?"+this.urlencode(s));else{this.checkRequiredCredentials();let e=this.urlencode(this.keysort(this.extend({accesskey:this.apiKey,nonce:this.nonce()},s)));o+="?"+e+"&signature="+this.hmac(this.encode(e),this.encode(this.secret),"sha512")}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},o,n){let d=await this.fetch2(e,t,i,s,o,n),c=this.safeInteger(d,"code"),h=this.safeString(d,"message");if(c&&100!==c&&h){if(103===c)throw new a(h);throw new r(h)}return d}}},910:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,ExchangeNotAvailable:a,InsufficientFunds:o,InvalidOrder:n,DDoSProtection:d,InvalidNonce:c,AuthenticationError:h,NotSupported:l}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"fcoin",name:"FCoin",countries:"CN",rateLimit:2e3,userAgent:this.userAgents.chrome39,version:"v2",accounts:void 0,accountsById:void 0,hostname:"api.fcoin.com",has:{CORS:!1,fetchDepositAddress:!1,fetchOHCLV:!1,fetchOpenOrders:!0,fetchClosedOrders:!0,fetchOrder:!0,fetchOrders:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchTradingLimits:!1,withdraw:!1,fetchCurrencies:!1},timeframes:{"1m":"M1","3m":"M3","5m":"M5","15m":"M15","30m":"M30","1h":"H1","1d":"D1","1w":"W1","1M":"MN"},urls:{logo:"https://user-images.githubusercontent.com/1294454/42244210-c8c42e1e-7f1c-11e8-8710-a5fb63b165c4.jpg",api:"https://api.fcoin.com",www:"https://www.fcoin.com",referral:"https://www.fcoin.com/i/Z5P7V",doc:"https://developer.fcoin.com",fees:"https://support.fcoin.com/hc/en-us/articles/360003715514-Trading-Rules"},api:{market:{get:["ticker/{symbol}","depth/{level}/{symbol}","trades/{symbol}","candles/{timeframe}/{symbol}"]},public:{get:["symbols","currencies","server-time"]},private:{get:["accounts/balance","orders","orders/{order_id}","orders/{order_id}/match-results"],post:["orders","orders/{order_id}/submit-cancel"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:.001,taker:.001}},limits:{amount:{min:.01,max:1e5}},options:{limits:{"BTM/USDT":{amount:{min:.1,max:1e7}},"ETC/USDT":{amount:{min:.001,max:4e5}},"ETH/USDT":{amount:{min:.001,max:1e4}},"LTC/USDT":{amount:{min:.001,max:4e4}},"BCH/USDT":{amount:{min:.001,max:5e3}},"BTC/USDT":{amount:{min:.001,max:1e3}},"ICX/ETH":{amount:{min:.01,max:3e6}},"OMG/ETH":{amount:{min:.01,max:5e5}},"FT/USDT":{amount:{min:1,max:1e7}},"ZIL/ETH":{amount:{min:1,max:1e7}},"ZIP/ETH":{amount:{min:1,max:1e7}},"FT/BTC":{amount:{min:1,max:1e7}},"FT/ETH":{amount:{min:1,max:1e7}}}},exceptions:{400:l,401:h,405:l,429:d,1002:a,1016:o,3008:n,6004:c,6005:h}})}async fetchMarkets(){let e=[],t=(await this.publicGetSymbols()).data;for(let i=0;i<t.length;i++){let s=t[i],r=s.name,a=s.base_currency,o=s.quote_currency,n=a.toUpperCase();n=this.commonCurrencyCode(n);let d=o.toUpperCase(),c=n+"/"+(d=this.commonCurrencyCode(d)),h={price:s.price_decimal,amount:s.amount_decimal},l={price:{min:Math.pow(10,-h.price),max:Math.pow(10,h.price)}};c in this.options.limits&&(l=this.extend(this.options.limits[c],l)),e.push({id:r,symbol:c,base:n,quote:d,baseId:a,quoteId:o,active:!0,precision:h,limits:l,info:s})}return e}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetAccountsBalance(e),i={info:t},s=t.data;for(let r=0;r<s.length;r++){let e=s[r],t=e.currency,a=t.toUpperCase();a=t in this.currencies_by_id?this.currencies_by_id[t].code:this.commonCurrencyCode(a);let o=this.account();o.free=parseFloat(e.available),o.total=parseFloat(e.balance),o.used=parseFloat(e.frozen),i[a]=o}return this.parseBalance(i)}parseBidsAsks(e,t=0,i=1){let s=[],r=e.length,a=parseInt(r/2);for(let o=0;o<a;o++){let r=2*o,a=this.sum(r,t),n=this.sum(r,i);s.push([e[a],e[n]])}return s}async fetchOrderBook(e,t,i={}){if(await this.loadMarkets(),void 0!==t){if(20!==t&&100!==t)throw new r(this.id+" fetchOrderBook supports limit of 20, 100 or no limit. Other values are not accepted");t="L"+t.toString()}else t="full";let s=this.extend({symbol:this.marketId(e),level:t},i),a=(await this.marketGetDepthLevelSymbol(s)).data;return this.parseOrderBook(a,a.ts,"bids","asks",0,1)}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.marketGetTickerSymbol(this.extend({symbol:i.id},t));return this.parseTicker(s.data,i)}parseTicker(e,t){let i=void 0;if(void 0===t){let i=this.safeString(e,"type");if(void 0!==i){let e=i.split(".")[1];e in this.markets_by_id&&(t=this.markets_by_id[e])}}let s=e.ticker,r=s[0];return void 0!==t&&(i=t.symbol),{symbol:i,timestamp:void 0,datetime:this.iso8601(void 0),high:s[7],low:s[8],bid:s[2],bidVolume:s[3],ask:s[4],askVolume:s[5],vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:s[9],quoteVolume:s[10],info:e}}parseTrade(e,t){let i=void 0;void 0!==t&&(i=t.symbol);let s=parseInt(e.ts),r=e.side.toLowerCase(),a=this.safeString(e,"id"),o=this.safeFloat(e,"price"),n=this.safeFloat(e,"amount"),d=o*n;return{id:a,info:e,timestamp:s,datetime:this.iso8601(s),symbol:i,type:void 0,order:a,side:r,price:o,amount:n,cost:d,fee:void 0}}async fetchTrades(e,t,i=50,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id,limit:i};void 0!==t&&(a.timestamp=parseInt(t/1e3));let o=await this.marketGetTradesSymbol(this.extend(a,s));return this.parseTrades(o.data,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=t;s=this.amountToPrecision(e,s);let n={symbol:this.marketId(e),amount:s,side:i,type:o};return"limit"===t&&(n.price=this.priceToPrecision(e,r)),(await this.privatePostOrders(this.extend(n,a))).data}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privatePostOrdersOrderIdSubmitCancel(this.extend({order_id:e},i))}parseOrderStatus(e){const t={submitted:"open",canceled:"canceled",partial_filled:"open",partial_canceled:"canceled",filled:"closed",pending_cancel:"canceled"};return e in t?t[e]:e}parseOrder(e,t){let i=e.id,s=e.side,r=this.parseOrderStatus(e.state),a=void 0;if(void 0===t){let i=e.symbol;i in this.markets_by_id&&(t=this.markets_by_id[i])}let o=e.type,n=parseInt(e.created_at),d=this.safeFloat(e,"amount"),c=this.safeFloat(e,"filled_amount"),h=void 0,l=this.safeFloat(e,"price"),u=void 0;void 0!==c&&(void 0!==d&&(h=d-c),void 0!==l&&(u=l*c));let p=void 0;void 0!==t&&(a=t.symbol,p="buy"===s?t.base:t.quote);let m=this.safeFloat(e,"fill_fees");return{info:e,id:i,timestamp:n,datetime:this.iso8601(n),lastTradeTimestamp:void 0,symbol:a,type:o,side:s,price:l,cost:u,amount:d,remaining:h,filled:c,average:void 0,status:r,fee:{cost:m,currency:p},trades:void 0}}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=this.extend({order_id:e},i),r=await this.privateGetOrdersOrderId(s);return this.parseOrder(r.data)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,{states:"submitted"})}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,{states:"filled"})}async fetchOrders(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id,states:"submitted"};void 0!==i&&(a.limit=i);let o=await this.privateGetOrders(this.extend(a,s));return this.parseOrders(o.data,r,t,i)}parseOHLCV(e,t,i="1m",s,r){return[e.seq,e.open,e.high,e.low,e.close,e.base_vol]}async fetchOHLCV(e,t="1m",i,s=100,a={}){if(await this.loadMarkets(),void 0===s)throw new r(this.id+" fetchOHLCV requires a limit argument");let o=this.market(e),n=this.extend({symbol:o.id,timeframe:this.timeframes[t],limit:s},a),d=await this.marketGetCandlesTimeframeSymbol(n);return this.parseOHLCVs(d.data,o,t,i,s)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o="/"+this.version+"/";o+="private"===t?"":t+"/",o+=this.implodeParams(e,s);let n=this.omit(s,this.extractParams(e)),d=this.urls.api+o;if("public"===t||"market"===t)Object.keys(n).length&&(d+="?"+this.urlencode(n));else if("private"===t){this.checkRequiredCredentials();let e=this.nonce().toString();n=this.keysort(n),"GET"===i&&Object.keys(n).length&&(d+="?"+this.urlencode(n));let t=i+d+e;"POST"===i&&Object.keys(n).length&&(a=this.json(n),t+=this.urlencode(n));let s=this.stringToBase64(this.encode(t)),o=this.hmac(s,this.encode(this.secret),"sha1","binary");o=this.decode(this.stringToBase64(o)),r={"FC-ACCESS-KEY":this.apiKey,"FC-ACCESS-SIGNATURE":o,"FC-ACCESS-TIMESTAMP":e,"Content-Type":"application/json"}}return{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if("string"==typeof o&&!(o.length<2||"{"!==o[0]&&"["!==o[0])){const e=JSON.parse(o);let t=this.safeString(e,"status");if("0"!==t){const e=this.id+" "+o;if(t in this.exceptions){throw new this.exceptions[t](e)}throw new r(e)}}}}},911:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787),{ROUND:a}=i(789);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"flowbtc",name:"flowBTC",countries:["BR"],version:"v1",rateLimit:1e3,has:{CORS:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/28162465-cd815d4c-67cf-11e7-8e57-438bea0523a2.jpg",api:"https://api.flowbtc.com:8405/ajax",www:"https://trader.flowbtc.com",doc:"https://www.flowbtc.com.br/api.html"},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},api:{public:{post:["GetTicker","GetTrades","GetTradesByDate","GetOrderBook","GetProductPairs","GetProducts"]},private:{post:["CreateAccount","GetUserInfo","SetUserInfo","GetAccountInfo","GetAccountTrades","GetDepositAddresses","Withdraw","CreateOrder","ModifyOrder","CancelOrder","CancelAllOrders","GetAccountOpenOrders","GetOrderFee"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:.0035,taker:.0035}}})}async fetchMarkets(){let e=(await this.publicPostGetProductPairs()).productPairs,t={};for(let i=0;i<e.length;i++){let s=e[i],r=s.name,a=s.product1Label,o=s.product2Label,n={amount:this.safeInteger(s,"product1DecimalPlaces"),price:this.safeInteger(s,"product2DecimalPlaces")},d=a+"/"+o;t[d]={id:r,symbol:d,base:a,quote:o,precision:n,limits:{amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:s}}return t}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostGetAccountInfo(),i=t.currencies,s={info:t};for(let r=0;r<i.length;r++){let e=i[r],t=e.name,a={free:e.balance,used:e.hold,total:0};a.total=this.sum(a.free,a.used),s[t]=a}return this.parseBalance(s)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=await this.publicPostGetOrderBook(this.extend({productPair:s.id},i));return this.parseOrderBook(r,void 0,"bids","asks","px","qty")}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicPostGetTicker(this.extend({productPair:i.id},t)),r=this.milliseconds(),a=this.safeFloat(s,"last");return{symbol:e,timestamp:r,datetime:this.iso8601(r),high:this.safeFloat(s,"high"),low:this.safeFloat(s,"low"),bid:this.safeFloat(s,"bid"),bidVolume:void 0,ask:this.safeFloat(s,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(s,"volume24hr"),quoteVolume:this.safeFloat(s,"volume24hrProduct2"),info:s}}parseTrade(e,t){let i=1e3*e.unixtime,s=0===e.incomingOrderSide?"buy":"sell";return{info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,id:e.tid.toString(),order:void 0,type:void 0,side:s,price:e.px,amount:e.qty}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicPostGetTrades(this.extend({ins:r.id,startIndex:-1},s));return this.parseTrades(a.trades,r,t,i)}priceToPrecision(e,t){return this.decimalToPrecision(t,a,this.markets[e].precision.price,this.precisionMode)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o="market"===t?1:0,n={ins:this.marketId(e),side:i,orderType:o,qty:s,px:this.priceToPrecision(e,r)},d=await this.privatePostCreateOrder(this.extend(n,a));return{info:d,id:d.serverOrderId}}async cancelOrder(e,t,i={}){if(await this.loadMarkets(),"ins"in i)return await this.privatePostCancelOrder(this.extend({serverOrderId:e},i));throw new r(this.id+" requires `ins` symbol parameter for cancelling an order")}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.version+"/"+e;if("public"===t)Object.keys(s).length&&(a=this.json(s));else{this.checkRequiredCredentials();let e=this.nonce(),t=e.toString()+this.uid+this.apiKey,i=this.hmac(this.encode(t),this.encode(this.secret));a=this.json(this.extend({apiKey:this.apiKey,apiNonce:e,apiSig:i.toUpperCase()},s)),r={"Content-Type":"application/json"}}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("isAccepted"in n&&n.isAccepted)return n;throw new r(this.id+" "+this.json(n))}}},912:function(e,t,i){"use strict";const s=i(815);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"fybsg",name:"FYB-SG",countries:["SG"],has:{CORS:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766513-3364d56a-5edb-11e7-9e6b-d5898bb89c81.jpg",api:"https://www.fybsg.com/api/SGD",www:"https://www.fybsg.com",doc:"http://docs.fyb.apiary.io"},markets:{"BTC/SGD":{id:"SGD",symbol:"BTC/SGD",base:"BTC",quote:"SGD"}}})}}},913:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,AuthenticationError:a,InvalidAddress:o,InsufficientFunds:n,OrderNotFound:d,InvalidOrder:c,PermissionDenied:h}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"gatecoin",name:"Gatecoin",rateLimit:2e3,countries:["HK"],comment:"a regulated/licensed exchange",has:{CORS:!1,createDepositAddress:!0,fetchDepositAddress:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchTickers:!0,withdraw:!0},timeframes:{"1m":"1m","15m":"15m","1h":"1h","6h":"6h","1d":"24h"},urls:{logo:"https://user-images.githubusercontent.com/1294454/28646817-508457f2-726c-11e7-9eeb-3528d2413a58.jpg",api:"https://api.gatecoin.com",www:"https://gatecoin.com",doc:["https://gatecoin.com/api","https://github.com/Gatecoin/RESTful-API-Implementation","https://api.gatecoin.com/swagger-ui/index.html"]},api:{public:{get:["Public/ExchangeRate","Public/LiveTicker","Public/LiveTicker/{CurrencyPair}","Public/LiveTickers","Public/MarketDepth/{CurrencyPair}","Public/NetworkStatistics/{DigiCurrency}","Public/StatisticHistory/{DigiCurrency}/{Typeofdata}","Public/TickerHistory/{CurrencyPair}/{Timeframe}","Public/Transactions/{CurrencyPair}","Public/TransactionsHistory/{CurrencyPair}","Reference/BusinessNatureList","Reference/Countries","Reference/Currencies","Reference/CurrencyPairs","Reference/CurrentStatusList","Reference/IdentydocumentTypes","Reference/IncomeRangeList","Reference/IncomeSourceList","Reference/VerificationLevelList","Stream/PublicChannel"],post:["Export/Transactions","Ping","Public/Unsubscribe/{EmailCode}","RegisterUser"]},private:{get:["Account/CorporateData","Account/DocumentAddress","Account/DocumentCorporation","Account/DocumentID","Account/DocumentInformation","Account/Email","Account/FeeRate","Account/Level","Account/PersonalInformation","Account/Phone","Account/Profile","Account/Questionnaire","Account/Referral","Account/ReferralCode","Account/ReferralNames","Account/ReferralReward","Account/ReferredCode","Account/ResidentInformation","Account/SecuritySettings","Account/User","APIKey/APIKey","Auth/ConnectionHistory","Balance/Balances","Balance/Balances/{Currency}","Balance/Deposits","Balance/Withdrawals","Bank/Accounts/{Currency}/{Location}","Bank/Transactions","Bank/UserAccounts","Bank/UserAccounts/{Currency}","ElectronicWallet/DepositWallets","ElectronicWallet/DepositWallets/{DigiCurrency}","ElectronicWallet/Transactions","ElectronicWallet/Transactions/{DigiCurrency}","ElectronicWallet/UserWallets","ElectronicWallet/UserWallets/{DigiCurrency}","Info/ReferenceCurrency","Info/ReferenceLanguage","Notification/Messages","Trade/Orders","Trade/Orders/{OrderID}","Trade/StopOrders","Trade/StopOrdersHistory","Trade/Trades","Trade/UserTrades"],post:["Account/DocumentAddress","Account/DocumentCorporation","Account/DocumentID","Account/Email/RequestVerify","Account/Email/Verify","Account/GoogleAuth","Account/Level","Account/Questionnaire","Account/Referral","APIKey/APIKey","Auth/ChangePassword","Auth/ForgotPassword","Auth/ForgotUserID","Auth/Login","Auth/Logout","Auth/LogoutOtherSessions","Auth/ResetPassword","Bank/Transactions","Bank/UserAccounts","ElectronicWallet/DepositWallets/{DigiCurrency}","ElectronicWallet/Transactions/Deposits/{DigiCurrency}","ElectronicWallet/Transactions/Withdrawals/{DigiCurrency}","ElectronicWallet/UserWallets/{DigiCurrency}","ElectronicWallet/Withdrawals/{DigiCurrency}","Notification/Messages","Notification/Messages/{ID}","Trade/Orders","Trade/StopOrders"],put:["Account/CorporateData","Account/DocumentID","Account/DocumentInformation","Account/Email","Account/PersonalInformation","Account/Phone","Account/Questionnaire","Account/ReferredCode","Account/ResidentInformation","Account/SecuritySettings","Account/User","Bank/UserAccounts","ElectronicWallet/DepositWallets/{DigiCurrency}/{AddressName}","ElectronicWallet/UserWallets/{DigiCurrency}","Info/ReferenceCurrency","Info/ReferenceLanguage"],delete:["APIKey/APIKey/{PublicKey}","Bank/Transactions/{RequestID}","Bank/UserAccounts/{Currency}/{Label}","ElectronicWallet/DepositWallets/{DigiCurrency}/{AddressName}","ElectronicWallet/UserWallets/{DigiCurrency}/{AddressName}","Trade/Orders","Trade/Orders/{OrderID}","Trade/StopOrders","Trade/StopOrders/{ID}"]}},fees:{trading:{maker:.0025,taker:.0035}},commonCurrencies:{BCP:"BCPT",FLI:"FLIXX",MAN:"MANA",SLT:"SALT",TRA:"TRAC",WGS:"WINGS"},exceptions:{1005:n,1008:d,1057:c,1044:d,1054:d}})}async fetchMarkets(){let e=(await this.publicGetReferenceCurrencyPairs()).currencyPairs,t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.tradingCode,a=s.baseCurrency,o=s.quoteCurrency,n=this.commonCurrencyCode(a),d=this.commonCurrencyCode(o),c=n+"/"+d,h={amount:8,price:s.priceDecimalPlaces},l={amount:{min:Math.pow(10,-h.amount),max:void 0},price:{min:Math.pow(10,-h.amount),max:void 0},cost:{min:void 0,max:void 0}};t.push({id:r,symbol:c,base:n,quote:d,baseId:a,quoteId:o,active:!0,precision:h,limits:l,info:s})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privateGetBalanceBalances()).balances,i={info:t};for(let s=0;s<t.length;s++){let e=t[s],r=e.currency,a=r;r in this.currencies_by_id&&(a=this.currencies_by_id[r].code);let o={free:e.availableBalance,used:this.sum(e.pendingIncoming,e.pendingOutgoing,e.openOrder),total:e.balance};i[a]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=await this.publicGetPublicMarketDepthCurrencyPair(this.extend({CurrencyPair:s.id},i));return this.parseOrderBook(r,void 0,"bids","asks","price","volume")}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetTradeOrdersOrderID(this.extend({OrderID:e},i));return this.parseOrder(s.order)}parseTicker(e,t){let i=1e3*parseInt(e.createDateTime),s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"volume"),a=this.safeFloat(e,"vwap"),o=r*a,n=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"bid"),bidVolume:void 0,ask:this.safeFloat(e,"ask"),askVolume:void 0,vwap:a,open:this.safeFloat(e,"open"),close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:r,quoteVolume:o,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=(await this.publicGetPublicLiveTickers(t)).tickers,s={};for(let r=0;r<i.length;r++){let e=i[r],t=e.currencyPair,a=this.markets_by_id[t];s[a.symbol]=this.parseTicker(e,a)}return s}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=(await this.publicGetPublicLiveTickerCurrencyPair(this.extend({CurrencyPair:i.id},t))).ticker;return this.parseTicker(s,i)}parseTrade(e,t){let i=void 0,s=void 0;if("way"in e){i="bid"===e.way?"buy":"sell";let t=e.way+"OrderId";s=this.safeString(e,t)}let r=1e3*parseInt(e.transactionTime);if(void 0===t){let i=this.safeString(e,"currencyPair");void 0!==i&&(t=this.findMarket(i))}let a=void 0,o=this.safeFloat(e,"feeAmount"),n=e.price,d=e.quantity,c=n*d,h=void 0,l=void 0;return void 0!==t&&(l=t.symbol,h=t.quote),void 0!==o&&(a={cost:o,currency:h,rate:this.safeFloat(e,"feeRate")}),{info:e,id:this.safeString(e,"transactionId"),order:s,timestamp:r,datetime:this.iso8601(r),symbol:l,type:void 0,side:i,price:n,amount:d,cost:c,fee:a}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetPublicTransactionsCurrencyPair(this.extend({CurrencyPair:r.id},s));return this.parseTrades(a.transactions,r,t,i)}parseOHLCV(e,t,i="1m",s,r){return[1e3*parseInt(e.createDateTime),e.open,e.high,e.low,void 0,e.volume]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),o={CurrencyPair:a.id,Timeframe:this.timeframes[t]};void 0!==s&&(o.Count=s),o=this.extend(o,r);let n=await this.publicGetPublicTickerHistoryCurrencyPairTimeframe(o),d=this.parseOHLCVs(n.tickers,a,t,i,s);return this.sortBy(d,0)}async createOrder(e,t,i,s,r,o={}){await this.loadMarkets();let n={Code:this.marketId(e),Way:"buy"===i?"Bid":"Ask",Amount:s};if("limit"===t&&(n.Price=r),this.twofa){if(!("ValidationCode"in o))throw new a(this.id+" two-factor authentication requires a missing ValidationCode parameter");n.ValidationCode=o.ValidationCode}let d=await this.privatePostTradeOrders(this.extend(n,o));return{info:d,status:"open",id:this.safeString(d,"clOrderId")}}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privateDeleteTradeOrdersOrderID({OrderID:e})}parseOrderStatus(e){const t={1:"open",2:"open",4:"canceled",6:"closed"};return e in t?t[e]:e}parseOrder(e,t){let i=0===e.side?"buy":"sell",s=0===e.type?"limit":"market",r=void 0;if(void 0===t){let i=this.safeString(e,"code");i in this.markets_by_id&&(t=this.markets_by_id[i])}void 0!==t&&(r=t.symbol);let a=1e3*parseInt(e.date),o=e.initialQuantity,n=e.remainingQuantity,d=o-n,c=e.price,h=c*d,l=e.clOrderId,u=this.parseOrderStatus(this.safeString(e,"status")),p=void 0,m=void 0;if("closed"===u){let t=void 0,i=void 0;p=[];let s=this.safeValue(e,"trades"),r=void 0,a=void 0,o=void 0;if(void 0!==s&&Array.isArray(s)){for(let e=0;e<s.length;e++){let n=this.parseTrade(s[e]);void 0===t&&(t=0),void 0===i&&(i=0),t+=n.amount,i+=n.amount*n.price,"fee"in n&&(void 0!==n.fee.cost&&(void 0===r&&(r=0),r+=n.fee.cost),a=n.fee.currency,void 0!==n.fee.rate&&(void 0===o&&(o=0),o+=n.fee.rate)),p.push(n)}if(void 0!==t&&t>0&&(c=i/t),void 0!==o){let e=p.length;e>0&&(o/=e)}void 0!==r&&(m={cost:r,currency:a,rate:o})}}return{id:l,datetime:this.iso8601(a),timestamp:a,lastTradeTimestamp:void 0,status:u,symbol:r,type:s,side:i,price:c,amount:o,filled:d,remaining:n,cost:h,trades:p,fee:m,info:e}}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=await this.privateGetTradeOrders(),a=this.parseOrders(r.orders,void 0,t,i);return void 0!==e?this.filterBySymbol(a,e):a}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials();let e=this.nonce(),t=e.toString(),n="GET"===i?"":"application/json",d=i+o+n+t;d=d.toLowerCase();let c=this.hmac(this.encode(d),this.encode(this.secret),"sha256","base64");r={API_PUBLIC_KEY:this.apiKey,API_REQUEST_SIGNATURE:this.decode(c),API_REQUEST_DATE:t},"GET"!==i&&(r["Content-Type"]=n,a=this.json(this.extend({nonce:e},s)))}return{url:o,method:i,body:a,headers:r}}async withdraw(e,t,i,s,r={}){this.checkAddress(i),await this.loadMarkets();let a={DigiCurrency:this.currency(e).id,Address:i,Amount:t},o=await this.privatePostElectronicWalletWithdrawalsDigiCurrency(this.extend(a,r));return{info:o,id:this.safeString(o,"id")}}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i={DigiCurrency:this.currency(e).id},s=await this.privateGetElectronicWalletDepositWalletsDigiCurrency(this.extend(i,t)),r=s.addresses;if(r.length<1)throw new o(this.id+" privateGetElectronicWalletDepositWalletsDigiCurrency() returned no addresses");let a=this.safeString(r[0],"address");return this.checkAddress(a),{currency:e,address:a,info:s}}async createDepositAddress(e,t={}){await this.loadMarkets();let i={DigiCurrency:this.currency(e).id},s=await this.privatePostElectronicWalletDepositWalletsDigiCurrency(this.extend(i,t)),r=s.address;return this.checkAddress(r),{currency:e,address:r,info:s}}async createUserWallet(e,t,i,s,r={}){await this.loadMarkets();let a={DigiCurrency:this.currency(e).id,AddressName:i,Address:t,Password:s};return await this.privatePostElectronicWalletUserWalletsDigiCurrency(this.extend(a,r))}handleErrors(e,t,i,s,a,o){if("string"==typeof o&&!(o.length<2)){if(o.indexOf("You are not authorized")>=0)throw new h(o);if("{"===o[0]){let e=JSON.parse(o);if("responseStatus"in e){let t=this.safeString(e.responseStatus,"errorCode"),i=this.safeString(e.responseStatus,"message");const s=this.id+" "+o;if(void 0!==t){const e=this.exceptions;if(t in e)throw new e[t](s);throw new r(s)}if(void 0!==i&&"OK"!==i)throw new r(s)}}}}}},914:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,InvalidAddress:a,OrderNotFound:o,NotSupported:n,DDoSProtection:d,InsufficientFunds:c}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"gateio",name:"Gate.io",countries:["CN"],version:"2",rateLimit:1e3,has:{CORS:!1,createMarketOrder:!1,fetchTickers:!0,withdraw:!0,createDepositAddress:!0,fetchDepositAddress:!0,fetchClosedOrders:!0,fetchOpenOrders:!0,fetchOrders:!0,fetchOrder:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/31784029-0313c702-b509-11e7-9ccc-bc0da6a0e435.jpg",api:{public:"https://data.gate.io/api",private:"https://data.gate.io/api"},www:"https://gate.io/",doc:"https://gate.io/api2",fees:["https://gate.io/fee","https://support.gate.io/hc/en-us/articles/115003577673"]},api:{public:{get:["pairs","marketinfo","marketlist","tickers","ticker/{id}","orderBook/{id}","trade/{id}","tradeHistory/{id}","tradeHistory/{id}/{tid}"]},private:{post:["balances","depositAddress","newAddress","depositsWithdrawals","buy","sell","cancelOrder","cancelAllOrders","getOrder","openOrders","tradeHistory","withdraw"]}},fees:{trading:{tierBased:!0,percentage:!0,maker:.002,taker:.002}},exceptions:{4:d,7:n,8:n,9:n,15:d,16:o,17:o,21:c},errorCodeNames:{1:"Invalid request",2:"Invalid version",3:"Invalid request",4:"Too many attempts",5:"Invalid sign",6:"Invalid sign",7:"Currency is not supported",8:"Currency is not supported",9:"Currency is not supported",10:"Verified failed",11:"Obtaining address failed",12:"Empty params",13:"Internal error, please report to administrator",14:"Invalid user",15:"Cancel order too fast, please wait 1 min and try again",16:"Invalid order id or order is already closed",17:"Invalid orderid",18:"Invalid amount",19:"Not permitted or trade is disabled",20:"Your order size is too small",21:"You don't have enough fund"},options:{limits:{cost:{min:{BTC:1e-4,ETH:.001,USDT:1}}}}})}async fetchMarkets(){let e=await this.publicGetMarketinfo(),t=this.safeValue(e,"pairs");if(!t)throw new r(this.id+" fetchMarkets got an unrecognized response");let i=[];for(let s=0;s<t.length;s++){let e=t[s],r=Object.keys(e)[0],a=e[r],[o,n]=r.split("_");o=o.toUpperCase(),n=n.toUpperCase();let d=(o=this.commonCurrencyCode(o))+"/"+(n=this.commonCurrencyCode(n)),c={amount:8,price:a.decimal_places},h={min:a.min_amount,max:void 0},l={min:Math.pow(10,-a.decimal_places),max:void 0},u=h.min*l.min,p={amount:h,price:l,cost:{min:this.safeFloat(this.options.limits.cost.min,n,u),max:void 0}};i.push({id:r,symbol:d,base:o,quote:n,info:e,maker:a.fee/100,taker:a.fee/100,precision:c,limits:p})}return i}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostBalances(),i={info:t},s=Object.keys(this.currencies);for(let r=0;r<s.length;r++){let e=s[r],a=this.commonCurrencyCode(e),o=this.account();"available"in t&&e in t.available&&(o.free=parseFloat(t.available[e])),"locked"in t&&e in t.locked&&(o.used=parseFloat(t.locked[e])),o.total=this.sum(o.free,o.used),i[a]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetOrderBookId(this.extend({id:this.marketId(e)},i));return this.parseOrderBook(s)}parseTicker(e,t){let i=this.milliseconds(),s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"last"),a=this.safeFloat(e,"percentChange"),o=void 0,n=void 0,d=void 0;if(void 0!==r&&void 0!==a){let e=a/100;n=r-(o=r/this.sum(1,e)),d=this.sum(r,o)/2}return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high24hr"),low:this.safeFloat(e,"low24hr"),bid:this.safeFloat(e,"highestBid"),bidVolume:void 0,ask:this.safeFloat(e,"lowestAsk"),askVolume:void 0,vwap:void 0,open:o,close:r,last:r,previousClose:void 0,change:n,percentage:a,average:d,baseVolume:this.safeFloat(e,"quoteVolume"),quoteVolume:this.safeFloat(e,"baseVolume"),info:e}}handleErrors(e,t,i,s,r,a){if(a.length<=0)return;if("{"!==a[0])return;let o=JSON.parse(a);if("false"!==this.safeString(o,"result",""))return;let n=this.safeString(o,"code");if(void 0!==n){const e=this.exceptions,t=this.errorCodeNames;if(n in e){let i="";throw i=n in t?t[n]:this.safeString(o,"message","(unknown)"),new e[n](i)}}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers(t),s={},r=Object.keys(i);for(let a=0;a<r.length;a++){let e=r[a],[t,o]=e.split("_"),n=t.toUpperCase(),d=o.toUpperCase(),c=(n=this.commonCurrencyCode(n))+"/"+(d=this.commonCurrencyCode(d)),h=i[e],l=void 0;c in this.markets&&(l=this.markets[c]),e in this.markets_by_id&&(l=this.markets_by_id[e]),s[c]=this.parseTicker(h,l)}return s}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTickerId(this.extend({id:i.id},t));return this.parseTicker(s,i)}parseTrade(e,t){let i=this.safeInteger(e,"timestamp");void 0!==(i=this.safeInteger(e,"time_unix",i))&&(i*=1e3);let s=this.safeString(e,"tradeID");s=this.safeString(e,"id",s);let r=this.safeString(e,"orderid");void 0!==r&&(r=this.safeString(e,"orderNumber"));let a=this.safeFloat(e,"rate"),o=this.safeFloat(e,"amount"),n=void 0;return void 0!==a&&void 0!==o&&(n=a*o),{id:s,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:r,type:void 0,side:e.type,price:a,amount:o,cost:n,fee:void 0}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTradeHistoryId(this.extend({id:r.id},s));return this.parseTrades(a.data,r,t,i)}async fetchOrders(e,t,i,s={}){let r=await this.privatePostOpenOrders(s);return this.parseOrders(r.orders,void 0,t,i)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostGetOrder(this.extend({orderNumber:e,currencyPair:this.marketId(t)},i));return this.parseOrder(s.order)}parseOrderStatus(e){let t={cancelled:"canceled"};return e in t?t[e]:e}parseOrder(e,t){let i=this.safeString(e,"orderNumber"),s=void 0,r=this.safeString(e,"currencyPair");r in this.markets_by_id&&(t=this.markets_by_id[r]),void 0!==t&&(s=t.symbol);let a=void 0,o=this.safeInteger(e,"timestamp");void 0!==o&&(o*=1e3,a=this.iso8601(o));let n=this.safeString(e,"status");void 0!==n&&(n=this.parseOrderStatus(n));let d=this.safeString(e,"type"),c=this.safeFloat(e,"filledRate"),h=this.safeFloat(e,"initialAmount"),l=this.safeFloat(e,"filledAmount"),u=this.safeFloat(e,"leftAmount");void 0===u&&(u=this.safeFloat(e,"left"));let p=this.safeFloat(e,"feeValue"),m=this.safeString(e,"feeCurrency");return void 0!==m&&m in this.currencies_by_id&&(m=this.currencies_by_id[m].code),{id:i,datetime:a,timestamp:o,status:n,symbol:s,type:"limit",side:d,price:c,cost:void 0,amount:h,filled:l,remaining:u,trades:void 0,fee:{cost:p,currency:m},info:e}}async createOrder(e,t,i,s,a,o={}){if("market"===t)throw new r(this.id+" allows limit orders only");await this.loadMarkets();let n="privatePost"+this.capitalize(i),d=this.market(e),c={currencyPair:d.id,rate:a,amount:s},h=await this[n](this.extend(c,o));return this.parseOrder(this.extend({status:"open",type:i,initialAmount:s},h),d)}async cancelOrder(e,t,i={}){if(void 0===t)throw new r(this.id+" cancelOrder requires symbol argument");return await this.loadMarkets(),await this.privatePostCancelOrder({orderNumber:e,currencyPair:this.marketId(t)})}async queryDepositAddress(e,t,i={}){await this.loadMarkets();let s=this.currency(t);e="privatePost"+e+"Address";let r=await this[e](this.extend({currency:s.id},i)),o=this.safeString(r,"addr"),n=void 0;if(void 0!==o&&o.indexOf("address")>=0)throw new a(this.id+" queryDepositAddress "+o);if("XRP"===t){let e=o.split(" ");o=e[0],n=e[1]}return{currency:s,address:o,tag:n,info:r}}async createDepositAddress(e,t={}){return await this.queryDepositAddress("New",e,t)}async fetchDepositAddress(e,t={}){return await this.queryDepositAddress("Deposit",e,t)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=void 0;void 0!==e&&(r=this.market(e));let a=await this.privatePostOpenOrders();return this.parseOrders(a.orders,r,t,i)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new r(this.id+" fetchMyTrades requires symbol param");await this.loadMarkets();let a=this.market(e),o=a.id,n=await this.privatePostTradeHistory(this.extend({currencyPair:o},s));return this.parseTrades(n.trades,a,t,i)}async withdraw(e,t,i,s,r={}){return this.checkAddress(i),await this.loadMarkets(),{info:await this.privatePostWithdraw(this.extend({currency:e.toLowerCase(),amount:t,address:i},r)),id:void 0}}sign(e,t="public",i="GET",s={},r,a){let o="private"===t?t+"/":"",n=this.urls.api[t]+this.version+"/1/"+o+this.implodeParams(e,s),d=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(d).length&&(n+="?"+this.urlencode(d));else{this.checkRequiredCredentials();let e={nonce:this.nonce()};a=this.urlencode(this.extend(e,d));let t=this.hmac(this.encode(a),this.encode(this.secret),"sha512");r={Key:this.apiKey,Sign:t,"Content-Type":"application/x-www-form-urlencoded"}}return{url:n,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("result"in n){let e=n.result,t=this.id+" "+this.json(n);if(void 0===e)throw new r(t);if("string"==typeof e){if("true"!==e)throw new r(t)}else if(!e)throw new r(t)}return n}}},915:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"gemini",name:"Gemini",countries:["US"],rateLimit:1500,version:"v1",has:{fetchDepositAddress:!1,createDepositAddress:!0,CORS:!1,fetchBidsAsks:!1,fetchTickers:!1,fetchMyTrades:!0,fetchOrder:!0,fetchOrders:!1,fetchOpenOrders:!1,fetchClosedOrders:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27816857-ce7be644-6096-11e7-82d6-3c257263229c.jpg",api:"https://api.gemini.com",www:"https://gemini.com",doc:["https://docs.gemini.com/rest-api","https://docs.sandbox.gemini.com"],test:"https://api.sandbox.gemini.com",fees:["https://gemini.com/fee-schedule/","https://gemini.com/transfer-fees/"]},api:{public:{get:["symbols","pubticker/{symbol}","book/{symbol}","trades/{symbol}","auction/{symbol}","auction/{symbol}/history"]},private:{post:["order/new","order/cancel","order/cancel/session","order/cancel/all","order/status","orders","mytrades","tradevolume","balances","deposit/{currency}/newAddress","withdraw/{currency}","heartbeat","transfers"]}},fees:{trading:{taker:.0025,maker:.0025}}})}async fetchMarkets(){let e=await this.publicGetSymbols(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s,a=r.toUpperCase(),o=a.slice(0,3),n=a.slice(3,6),d=o+"/"+n;t.push({id:s,symbol:d,base:o,quote:n,info:r})}return t}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetBookSymbol(this.extend({symbol:this.marketId(e)},i));return this.parseOrderBook(s,void 0,"bids","asks","price","amount")}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetPubtickerSymbol(this.extend({symbol:i.id},t)),r=s.volume.timestamp,a=i.base,o=i.quote,n=this.safeFloat(s,"last");return{symbol:e,timestamp:r,datetime:this.iso8601(r),high:void 0,low:void 0,bid:this.safeFloat(s,"bid"),bidVolume:void 0,ask:this.safeFloat(s,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:parseFloat(s.volume[a]),quoteVolume:parseFloat(s.volume[o]),info:s}}parseTrade(e,t){let i=e.timestampms,s=void 0;"order_id"in e&&(s=e.order_id.toString());let r=this.safeFloat(e,"fee_amount");if(void 0!==r){let t=this.safeString(e,"fee_currency");void 0!==t&&(t in this.currencies_by_id&&(t=this.currencies_by_id[t].code),t=this.commonCurrencyCode(t)),r={cost:this.safeFloat(e,"fee_amount"),currency:t}}let a=this.safeFloat(e,"price"),o=this.safeFloat(e,"amount");return{id:e.tid.toString(),order:s,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:e.type,price:a,cost:a*o,amount:o,fee:r}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTradesSymbol(this.extend({symbol:r.id},s));return this.parseTrades(a,r,t,i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostBalances(),i={info:t};for(let s=0;s<t.length;s++){let e=t[s],r=e.currency,a={free:parseFloat(e.available),used:0,total:parseFloat(e.amount)};a.used=a.total-a.free,i[r]=a}return this.parseBalance(i)}parseOrder(e,t){let i=e.timestampms,s=this.safeFloat(e,"original_amount"),r=this.safeFloat(e,"remaining_amount"),a=this.safeFloat(e,"executed_amount"),o="closed";e.is_live&&(o="open"),e.is_canceled&&(o="canceled");let n=this.safeFloat(e,"price");n=this.safeFloat(e,"avg_execution_price",n);let d=void 0;void 0!==a&&void 0!==n&&(d=a*n);let c=this.safeString(e,"type");c="exchange limit"===c?"limit":"market buy"===c||"market sell"===c?"market":e.type;let h=void 0;if(void 0===t){let i=this.safeString(e,"symbol");i in this.markets_by_id&&(t=this.markets_by_id[i])}return void 0!==t&&(h=t.symbol),{id:e.order_id,info:e,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,status:o,symbol:h,type:c,side:e.side,price:n,cost:d,amount:s,filled:a,remaining:r,fee:void 0}}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostOrderStatus(this.extend({order_id:e},i));return this.parseOrder(s)}async createOrder(e,t,i,s,a,o={}){if(await this.loadMarkets(),"market"===t)throw new r(this.id+" allows limit orders only");let n={client_order_id:this.nonce().toString(),symbol:this.marketId(e),amount:s.toString(),price:a.toString(),side:i,type:"exchange limit"},d=await this.privatePostOrderNew(this.extend(n,o));return{info:d,id:d.order_id}}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privatePostOrderCancel({order_id:e})}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new r(this.id+" fetchMyTrades requires a symbol argument");await this.loadMarkets();let a=this.market(e),o={symbol:a.id};void 0!==i&&(o.limit_trades=i),void 0!==t&&(o.timestamp=parseInt(t/1e3));let n=await this.privatePostMytrades(this.extend(o,s));return this.parseTrades(n,a,t,i)}async withdraw(e,t,i,s,r={}){this.checkAddress(i),await this.loadMarkets();let a=this.currency(e),o=await this.privatePostWithdrawCurrency(this.extend({currency:a.id,amount:t,address:i},r));return{info:o,id:this.safeString(o,"txHash")}}sign(e,t="public",i="GET",s={},r,a){let o="/"+this.version+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials();let e=this.nonce(),t=this.extend({request:o,nonce:e},n),i=this.json(t);i=this.stringToBase64(this.encode(i));let s=this.hmac(i,this.encode(this.secret),"sha384");r={"Content-Type":"text/plain","X-GEMINI-APIKEY":this.apiKey,"X-GEMINI-PAYLOAD":this.decode(i),"X-GEMINI-SIGNATURE":s}}return{url:o=this.urls.api+o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("result"in n&&"error"===n.result)throw new r(this.id+" "+this.json(n));return n}async createDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privatePostDepositCurrencyNewAddress(this.extend({currency:i.id},t)),r=this.safeString(s,"address");return this.checkAddress(r),{currency:e,address:r,info:s}}}},916:function(e,t,i){"use strict";const s=i(809);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"getbtc",name:"GetBTC",countries:["VC","RU"],rateLimit:1e3,urls:{logo:"https://user-images.githubusercontent.com/1294454/33801902-03c43462-dd7b-11e7-992e-077e4cd015b9.jpg",api:"https://getbtc.org/api",www:"https://getbtc.org",doc:"https://getbtc.org/api-docs.php"},has:{fetchTrades:!1,fetchOHLCV:!1},fees:{trading:{taker:.002,maker:.002}},markets:{"BTC/USD":{lot:1e-8,symbol:"BTC/USD",quote:"USD",base:"BTC",precision:{amount:8,price:8},id:"USD",limits:{amount:{max:void 0,min:1e-8},price:{max:"undefined",min:1e-8}}},"BTC/EUR":{lot:1e-8,symbol:"BTC/EUR",quote:"EUR",base:"BTC",precision:{amount:8,price:8},id:"EUR",limits:{amount:{max:void 0,min:1e-8},price:{max:"undefined",min:1e-8}}},"BTC/RUB":{lot:1e-8,symbol:"BTC/RUB",quote:"RUB",base:"BTC",precision:{amount:8,price:8},id:"RUB",limits:{amount:{max:void 0,min:1e-8},price:{max:"undefined",min:1e-8}}}}})}}},917:function(e,t,i){"use strict";const s=i(794),{PermissionDenied:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"hadax",name:"HADAX",countries:["CN"],hostname:"api.hadax.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/38059952-4756c49e-32f1-11e8-90b9-45c1eccba9cd.jpg",api:"https://api.hadax.com",www:"https://www.hadax.com",doc:"https://github.com/huobiapi/API_Docs/wiki"},has:{fetchCurrencies:!1},api:{public:{get:["hadax/common/symbols","hadax/common/currencys","common/timestamp","hadax/settings/currencys"]},private:{get:["account/accounts","hadax/account/accounts/{id}/balance","order/orders/{id}","order/orders/{id}/matchresults","order/orders","order/matchresults","dw/withdraw-virtual/addresses","dw/deposit-virtual/addresses","query/deposit-withdraw","margin/loan-orders","margin/accounts/balance"],post:["hadax/order/orders/place","order/orders","order/orders/{id}/place","order/orders/{id}/submitcancel","order/orders/batchcancel","dw/balance/transfer","dw/withdraw/api/create","dw/withdraw-virtual/create","dw/withdraw-virtual/{id}/place","dw/withdraw-virtual/{id}/cancel","dw/transfer-in/margin","dw/transfer-out/margin","margin/orders","margin/orders/{id}/repay"]}},exceptions:{"not-allow-entry-hadax":r},options:{fetchMarketsMethod:"publicGetHadaxCommonSymbols",fetchBalanceMethod:"privateGetHadaxAccountAccountsIdBalance",createOrderMethod:"privatePostHadaxOrderOrdersPlace"},commonCurrencies:{FAIR:"FairGame",GET:"Themis"}})}}},918:function(e,t,i){"use strict";const s=i(816),{ExchangeError:r,ExchangeNotAvailable:a,OrderNotFound:o,InsufficientFunds:n,InvalidOrder:d}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"hitbtc2",name:"HitBTC v2",countries:["HK"],rateLimit:1500,version:"2",has:{createDepositAddress:!0,fetchDepositAddress:!0,CORS:!0,editOrder:!0,fetchCurrencies:!0,fetchOHLCV:!0,fetchTickers:!0,fetchOrder:!0,fetchOrders:!1,fetchOpenOrders:!0,fetchClosedOrders:!0,fetchMyTrades:!0,withdraw:!0},timeframes:{"1m":"M1","3m":"M3","5m":"M5","15m":"M15","30m":"M30","1h":"H1","4h":"H4","1d":"D1","1w":"D7","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766555-8eaec20e-5edc-11e7-9c5b-6dc69fc42f5e.jpg",api:"https://api.hitbtc.com",www:"https://hitbtc.com",referral:"https://hitbtc.com/?ref_id=5a5d39a65d466",doc:"https://api.hitbtc.com",fees:["https://hitbtc.com/fees-and-limits","https://support.hitbtc.com/hc/en-us/articles/115005148605-Fees-and-limits"]},api:{public:{get:["symbol","symbol/{symbol}","currency","currency/{currency}","ticker","ticker/{symbol}","trades/{symbol}","orderbook/{symbol}","candles/{symbol}"]},private:{get:["order","order/{clientOrderId}","trading/balance","trading/fee/{symbol}","history/trades","history/order","history/order/{id}/trades","account/balance","account/transactions","account/transactions/{id}","account/crypto/address/{currency}"],post:["order","account/crypto/withdraw","account/crypto/address/{currency}","account/transfer"],put:["order/{clientOrderId}","account/crypto/withdraw/{id}"],delete:["order","order/{clientOrderId}","account/crypto/withdraw/{id}"],patch:["order/{clientOrderId}"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:-1e-4,taker:.001},funding:{tierBased:!1,percentage:!1,withdraw:{BTC:.001,BCC:.0018,ETH:.00958,BCH:.0018,USDT:100,DASH:.03,BTG:5e-4,XRP:.509,LTC:.003,ZEC:1e-4,XMR:.09,"1ST":.84,ADX:5.7,AE:6.7,AEON:.01006,AIR:565,AMM:14,AMP:342,ANT:6.7,ARDR:1,ARN:18.5,ART:26,ATB:4e-4,ATL:27,ATM:504,ATS:860,AVT:1.9,BAS:113,BCN:.1,BET:124,BKB:46,BMC:32,BMT:100,BNT:2.57,BQX:4.7,BTCA:351.21,BTM:40,BTX:.04,BUS:.004,CAPP:97,CCT:6,CDT:100,CDX:30,CFI:61,CL:13.85,CLD:.88,CND:574,CNX:.04,COSS:65,CPAY:5.487,CSNO:16,CTR:15,CTX:146,CVC:8.46,DATA:12.949,DBIX:.0168,DCN:1280,DCT:.02,DDF:342,DENT:1e3,DGB:.4,DGD:.01,DICE:.32,DLT:.26,DNT:.21,DOGE:2,DOV:34,DRPU:24,DRT:240,DSH:.017,EBET:84,EBTC:20,EBTCOLD:6.6,ECAT:14,EDG:2,EDO:2.9,EKO:1136.36,ELE:.00172,ELM:.004,EMC:.03,MGO:14,ENJ:163,EOS:1.5,ERO:34,ETBS:15,ETC:.002,ETP:.004,EVX:5.4,EXN:456,FCN:5e-6,FRD:65,FUEL:123.00105,FUN:202.9598309,FYN:1.849,FYP:66.13,GAME:.004,GNO:.0034,GUP:4,GVT:1.2,HSR:.04,HAC:144,HDG:7,HGT:1082,HPC:.4,HVN:120,ICN:.55,ICO:34,ICOS:.35,IND:76,INDI:790,ITS:15.0012,IXT:11,KBR:143,KICK:112,KMD:4,LA:41,LEND:388,LAT:1.44,LIFE:13e3,LRC:27,LSK:.3,LOC:11.076,LUN:.34,MAID:5,MANA:143,MCAP:5.44,MIPS:43,MNE:1.33,MSP:121,MCO:.357,MTH:92,MYB:3.9,NDC:165,NEBL:.04,NET:3.96,NTO:998,NGC:2.368,NXC:13.39,NXT:3,OAX:15,ODN:.004,OMG:2,OPT:335,ORME:2.8,OTN:.57,PAY:3.1,PIX:96,PLBT:.33,PLR:114,PLU:.87,POE:784,POLL:3.5,PPT:2,PRE:32,PRG:39,PRO:41,PRS:60,PTOY:.5,QAU:63,QCN:.03,QTUM:.04,QVT:64,REP:.02,RKC:15,RLC:1.21,RVT:14,SC:30,SAN:2.24,SBD:.03,SCL:2.6,SISA:1640,SKIN:407,SWFTC:352.94,SMART:.4,SMS:.0375,SNC:36,SNGLS:4,SNM:48,SNT:233,STAR:.144,STORM:153.19,STEEM:.01,STRAT:.01,SPF:14.4,STU:14,STX:11,SUB:17,SUR:3,SWT:.51,TAAS:.91,TBT:2.37,TFL:15,TIME:.03,TIX:7.1,TKN:1,TGT:173,TKR:84,TNT:90,TRST:1.6,TRX:270,UET:480,UGT:15,UTT:3,VEN:14,VERI:.037,VIB:50,VIBE:145,VOISE:618,WEALTH:.0168,WINGS:2.4,WTC:.75,WRC:48,XAUR:3.23,XDN:.01,XEM:15,XUC:.9,YOYOW:140,ZAP:24,ZRX:23,ZSC:191},deposit:{BTC:6e-4,ETH:.003,BCH:0,USDT:0,BTG:0,LTC:0,ZEC:0,XMR:0,"1ST":0,ADX:0,AE:0,AEON:0,AIR:0,AMP:0,ANT:0,ARDR:0,ARN:0,ART:0,ATB:0,ATL:0,ATM:0,ATS:0,AVT:0,BAS:0,BCN:0,BET:0,BKB:0,BMC:0,BMT:0,BNT:0,BQX:0,BTM:0,BTX:0,BUS:0,CCT:0,CDT:0,CDX:0,CFI:0,CLD:0,CND:0,CNX:0,COSS:0,CSNO:0,CTR:0,CTX:0,CVC:0,DBIX:0,DCN:0,DCT:0,DDF:0,DENT:0,DGB:0,DGD:0,DICE:0,DLT:0,DNT:0,DOGE:0,DOV:0,DRPU:0,DRT:0,DSH:0,EBET:0,EBTC:0,EBTCOLD:0,ECAT:0,EDG:0,EDO:0,ELE:0,ELM:0,EMC:0,EMGO:0,ENJ:0,EOS:0,ERO:0,ETBS:0,ETC:0,ETP:0,EVX:0,EXN:0,FRD:0,FUEL:0,FUN:0,FYN:0,FYP:0,GNO:0,GUP:0,GVT:0,HAC:0,HDG:0,HGT:0,HPC:0,HVN:0,ICN:0,ICO:0,ICOS:0,IND:0,INDI:0,ITS:0,IXT:0,KBR:0,KICK:0,LA:0,LAT:0,LIFE:0,LRC:0,LSK:0,LUN:0,MAID:0,MANA:0,MCAP:0,MIPS:0,MNE:0,MSP:0,MTH:0,MYB:0,NDC:0,NEBL:0,NET:0,NTO:0,NXC:0,NXT:0,OAX:0,ODN:0,OMG:0,OPT:0,ORME:0,OTN:0,PAY:0,PIX:0,PLBT:0,PLR:0,PLU:0,POE:0,POLL:0,PPT:0,PRE:0,PRG:0,PRO:0,PRS:0,PTOY:0,QAU:0,QCN:0,QTUM:0,QVT:0,REP:0,RKC:0,RVT:0,SAN:0,SBD:0,SCL:0,SISA:0,SKIN:0,SMART:0,SMS:0,SNC:0,SNGLS:0,SNM:0,SNT:0,STEEM:0,STRAT:0,STU:0,STX:0,SUB:0,SUR:0,SWT:0,TAAS:0,TBT:0,TFL:0,TIME:0,TIX:0,TKN:0,TKR:0,TNT:0,TRST:0,TRX:0,UET:0,UGT:0,VEN:0,VERI:0,VIB:0,VIBE:0,VOISE:0,WEALTH:0,WINGS:0,WTC:0,XAUR:0,XDN:0,XEM:0,XUC:0,YOYOW:0,ZAP:0,ZRX:0,ZSC:0}}},options:{defaultTimeInForce:"FOK"},exceptions:{2010:d,2011:d,2020:d,20002:o,20001:n}})}feeToPrecision(e,t){return this.truncate(t,8)}async fetchMarkets(){let e=await this.publicGetSymbol(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.id,a=s.baseCurrency,o=s.quoteCurrency,n=this.commonCurrencyCode(a),d=this.commonCurrencyCode(o),c=n+"/"+d,h=this.safeFloat(s,"quantityIncrement"),l=this.safeFloat(s,"tickSize"),u={price:this.precisionFromString(s.tickSize),amount:-1*Math.log10(h)},p=this.safeFloat(s,"takeLiquidityRate"),m=this.safeFloat(s,"provideLiquidityRate");t.push(this.extend(this.fees.trading,{info:s,id:r,symbol:c,base:n,quote:d,baseId:a,quoteId:o,active:!0,taker:p,maker:m,precision:u,limits:{amount:{min:h,max:void 0},price:{min:l,max:void 0},cost:{min:h*l,max:void 0}}}))}return t}async fetchCurrencies(e={}){let t=await this.publicGetCurrency(e),i={};for(let s=0;s<t.length;s++){let e=t[s],r=e.id,a=8,o=this.commonCurrencyCode(r),n=this.safeValue(e,"payinEnabled"),d=this.safeValue(e,"payoutEnabled"),c=this.safeValue(e,"transferEnabled"),h=n&&d&&c;"disabled"in e&&e.disabled&&(h=!1);let l="fiat";"crypto"in e&&e.crypto&&(l="crypto"),i[o]={id:r,code:o,type:l,payin:n,payout:d,transfer:c,info:e,name:e.fullName,active:h,fee:this.safeFloat(e,"payoutFee"),precision:a,limits:{amount:{min:Math.pow(10,-a),max:Math.pow(10,a)},price:{min:Math.pow(10,-a),max:Math.pow(10,a)},cost:{min:void 0,max:void 0},withdraw:{min:void 0,max:Math.pow(10,a)}}}}return i}async fetchBalance(e={}){await this.loadMarkets();let t=this.safeString(e,"type","trading"),i="privateGet"+this.capitalize(t)+"Balance",s=await this[i](),r={info:s};for(let a=0;a<s.length;a++){let e=s[a],t=e.currency,i=this.commonCurrencyCode(t),o={free:parseFloat(e.available),used:parseFloat(e.reserved),total:0};o.total=this.sum(o.free,o.used),r[i]=o}return this.parseBalance(r)}parseOHLCV(e,t,i="1d",s,r){return[this.parse8601(e.timestamp),parseFloat(e.open),parseFloat(e.max),parseFloat(e.min),parseFloat(e.close),parseFloat(e.volume)]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),o={symbol:a.id,period:this.timeframes[t]};void 0!==s&&(o.limit=s);let n=await this.publicGetCandlesSymbol(this.extend(o,r));return this.parseOHLCVs(n,a,t,i,s)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={symbol:this.marketId(e)};void 0!==t&&(s.limit=t);let r=await this.publicGetOrderbookSymbol(this.extend(s,i));return this.parseOrderBook(r,void 0,"bid","ask","price","size")}parseTicker(e,t){let i=this.parse8601(e.timestamp),s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"volume"),a=this.safeFloat(e,"volumeQuote"),o=this.safeFloat(e,"open"),n=this.safeFloat(e,"last"),d=void 0,c=void 0,h=void 0;void 0!==n&&void 0!==o&&(d=n-o,h=this.sum(n,o)/2,o>0&&(c=d/o*100));let l=void 0;return void 0!==a&&void 0!==r&&r>0&&(l=a/r),{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"bid"),bidVolume:void 0,ask:this.safeFloat(e,"ask"),askVolume:void 0,vwap:l,open:o,close:n,last:n,previousClose:void 0,change:d,percentage:c,average:h,baseVolume:r,quoteVolume:a,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTicker(t),s={};for(let r=0;r<i.length;r++){let e=i[r],t=e.symbol,a=this.markets_by_id[t];s[a.symbol]=this.parseTicker(e,a)}return s}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTickerSymbol(this.extend({symbol:i.id},t));if("message"in s)throw new r(this.id+" "+s.message);return this.parseTicker(s,i)}parseTrade(e,t){let i=this.parse8601(e.timestamp),s=void 0;if(void 0!==t)s=t.symbol;else{let i=e.symbol;s=i in this.markets_by_id?(t=this.markets_by_id[i]).symbol:i}let r=void 0;if("fee"in e){let i=t?t.quote:void 0;r={cost:this.safeFloat(e,"fee"),currency:i}}let a=void 0;"clientOrderId"in e&&(a=e.clientOrderId);let o=this.safeFloat(e,"price"),n=this.safeFloat(e,"quantity"),d=o*n;return{info:e,id:e.id.toString(),order:a,timestamp:i,datetime:this.iso8601(i),symbol:s,type:void 0,side:e.side,price:o,amount:n,cost:d,fee:r}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);const a={symbol:r.id};void 0!==i&&(a.limit=i),void 0!==t&&(a.from=this.iso8601(t));let o=await this.publicGetTradesSymbol(this.extend(a,s));return this.parseTrades(o,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n=this.uuid().split("-").join("");n=n.slice(0,32),s=parseFloat(s);let d={clientOrderId:n,symbol:o.id,side:i,quantity:this.amountToPrecision(e,s),type:t};"limit"===t?d.price=this.priceToPrecision(e,r):d.timeInForce=this.options.defaultTimeInForce;let c=await this.privatePostOrder(this.extend(d,a)),h=this.parseOrder(c),l=h.id;return this.orders[l]=h,h}async editOrder(e,t,i,s,r,a,o={}){await this.loadMarkets();let n=this.uuid().split("-").join(""),d={clientOrderId:e,requestClientId:n=n.slice(0,32)};void 0!==r&&(d.quantity=this.amountToPrecision(t,parseFloat(r))),void 0!==a&&(d.price=this.priceToPrecision(t,a));let c=await this.privatePatchOrderClientOrderId(this.extend(d,o)),h=this.parseOrder(c);return this.orders[h.id]=h,h}async cancelOrder(e,t,i={}){await this.loadMarkets();const s=await this.privateDeleteOrderClientOrderId(this.extend({clientOrderId:e},i));return this.parseOrder(s)}parseOrder(e,t){let i=void 0;"createdAt"in e&&(i=this.parse8601(e.createdAt));let s=void 0;"updatedAt"in e&&(s=this.parse8601(e.updatedAt)),t||(t=this.markets_by_id[e.symbol]);let r=t.symbol,a=this.safeFloat(e,"quantity"),o=this.safeFloat(e,"cumQuantity"),n=e.status;"new"===n?n="open":"suspended"===n?n="open":"partiallyFilled"===n?n="open":"filled"===n&&(n="closed");let d=e.clientOrderId.toString(),c=this.safeFloat(e,"price");void 0===c&&d in this.orders&&(c=this.orders[d].price);let h=void 0,l=void 0;return void 0!==a&&void 0!==o&&(h=a-o,void 0!==c&&(l=o*c)),{id:d,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:s,status:n,symbol:r,type:e.type,side:e.side,price:c,amount:a,cost:l,filled:o,remaining:h,fee:void 0,info:e}}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetHistoryOrder(this.extend({clientOrderId:e},i));if(s.length>0)return this.parseOrder(s[0]);throw new o(this.id+" order "+e+" not found")}async fetchOpenOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrderClientOrderId(this.extend({clientOrderId:e},i));return this.parseOrder(s)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=void 0,a={};void 0!==e&&(r=this.market(e),a.symbol=r.id);let o=await this.privateGetOrder(this.extend(a,s));return this.parseOrders(o,r,t,i)}async fetchClosedOrders(e,t,i,s={}){await this.loadMarkets();let r=void 0,a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==i&&(a.limit=i),void 0!==t&&(a.from=this.iso8601(t));let o=await this.privateGetHistoryOrder(this.extend(a,s)),n=this.parseOrders(o,r);return n=this.filterBy(n,"status","closed"),this.filterBySinceLimit(n,t,i)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r={},a=void 0;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==t&&(r.from=this.iso8601(t)),void 0!==i&&(r.limit=i);let o=await this.privateGetHistoryTrades(this.extend(r,s));return this.parseTrades(o,a,t,i)}async fetchOrderTrades(e,t,i,s,r={}){await this.loadMarkets();let a=void 0;void 0!==t&&(a=this.market(t));let n=await this.privateGetHistoryOrderIdTrades(this.extend({id:e},r));if(n.length>0)return this.parseTrades(n,a,i,s);throw new o(this.id+" order "+e+" not found, "+this.id+'.fetchOrderTrades() requires an exchange-specific order id, you need to grab it from order["info"]["id"]')}async createDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privatePostAccountCryptoAddressCurrency({currency:i.id}),r=s.address;return this.checkAddress(r),{currency:i,address:r,tag:this.safeString(s,"paymentId"),info:s}}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privateGetAccountCryptoAddressCurrency({currency:i.id}),r=s.address;this.checkAddress(r);let a=this.safeString(s,"paymentId");return{currency:i.code,address:r,tag:a,info:s}}async withdraw(e,t,i,s,r={}){await this.loadMarkets(),this.checkAddress(i);let a={currency:this.currency(e).id,amount:parseFloat(t),address:i};s&&(a.paymentId=s);let o=await this.privatePostAccountCryptoWithdraw(this.extend(a,r));return{info:o,id:o.id}}sign(e,t="public",i="GET",s={},r,a){let o="/api/"+this.version+"/",n=this.omit(s,this.extractParams(e));if("public"===t)o+=t+"/"+this.implodeParams(e,s),Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials(),o+=this.implodeParams(e,s),"GET"===i?Object.keys(n).length&&(o+="?"+this.urlencode(n)):Object.keys(n).length&&(a=this.json(n));let t=this.encode(this.apiKey+":"+this.secret),d=this.stringToBase64(t);r={Authorization:"Basic "+this.decode(d),"Content-Type":"application/json"}}return{url:o=this.urls.api+o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,o,n){if("string"==typeof n&&e>=400){const t=this.id+" "+n;if(503===e||504===e)throw new a(t);if("{"===n[0]){const e=JSON.parse(n);if("error"in e){const i=this.safeString(e.error,"code"),s=this.exceptions;if(i in s)throw new s[i](t);if("Duplicate clientOrderId"===this.safeString(e.error,"message"))throw new d(t)}}throw new r(t)}}}},919:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"huobi",name:"Huobi",countries:["CN"],rateLimit:2e3,version:"v3",has:{CORS:!1,fetchOHLCV:!0},timeframes:{"1m":"001","5m":"005","15m":"015","30m":"030","1h":"060","1d":"100","1w":"200","1M":"300","1y":"400"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766569-15aa7b9a-5edd-11e7-9e7f-44791f4ee49c.jpg",api:"http://api.huobi.com",www:"https://www.huobi.com",doc:"https://github.com/huobiapi/API_Docs_en/wiki"},api:{staticmarket:{get:["{id}_kline_{period}","ticker_{id}","depth_{id}","depth_{id}_{length}","detail_{id}"]},usdmarket:{get:["{id}_kline_{period}","ticker_{id}","depth_{id}","depth_{id}_{length}","detail_{id}"]},trade:{post:["get_account_info","get_orders","order_info","buy","sell","buy_market","sell_market","cancel_order","get_new_deal_orders","get_order_id_by_trade_id","withdraw_coin","cancel_withdraw_coin","get_withdraw_coin_result","transfer","loan","repayment","get_loan_available","get_loans"]}},markets:{"BTC/CNY":{id:"btc",symbol:"BTC/CNY",base:"BTC",quote:"CNY",type:"staticmarket",coinType:1},"LTC/CNY":{id:"ltc",symbol:"LTC/CNY",base:"LTC",quote:"CNY",type:"staticmarket",coinType:2}}})}async fetchBalance(e={}){let t=await this.tradePostGetAccountInfo(),i={info:t},s=Object.keys(this.currencies);for(let r=0;r<s.length;r++){let e=s[r],a=e.toLowerCase(),o=this.account(),n="available_"+a+"_display",d="frozen_"+a+"_display",c="loan_"+a+"_display";n in t&&(o.free=parseFloat(t[n])),d in t&&(o.used=parseFloat(t[d])),c in t&&(o.used=this.sum(o.used,parseFloat(t[c]))),o.total=this.sum(o.free,o.used),i[e]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){let s=this.market(e),r=s.type+"GetDepthId",a=await this[r](this.extend({id:s.id},i));return this.parseOrderBook(a)}async fetchTicker(e,t={}){let i=this.market(e),s=i.type+"GetTickerId",r=await this[s](this.extend({id:i.id},t)),a=r.ticker,o=1e3*parseInt(r.time);return{symbol:e,timestamp:o,datetime:this.iso8601(o),high:this.safeFloat(a,"high"),low:this.safeFloat(a,"low"),bid:this.safeFloat(a,"buy"),ask:this.safeFloat(a,"sell"),vwap:void 0,open:this.safeFloat(a,"open"),close:void 0,first:void 0,last:this.safeFloat(a,"last"),change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:this.safeFloat(a,"vol"),info:a}}parseTrade(e,t){let i=e.ts;return{info:e,id:e.id.toString(),order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:e.direction,price:e.price,amount:e.amount}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=r.type+"GetDetailId",o=await this[a](this.extend({id:r.id},s));return this.parseTrades(o.trades,r,t,i)}parseOHLCV(e,t,i="1m",s,r){return[e[0],e[1],e[2],e[3],e[4],e[6]]}async fetchOHLCV(e,t="1m",i,s,r={}){let a=this.market(e),o=a.type+"GetIdKlinePeriod";return await this[o](this.extend({id:a.id,period:this.timeframes[t]},r))}async createOrder(e,t,i,s,r,a={}){let o=this.market(e),n="tradePost"+this.capitalize(i),d={coin_type:o.coinType,amount:s,market:o.quote.toLowerCase()};"limit"===t?d.price=r:n+=this.capitalize(t);let c=this[n](this.extend(d,a));return{info:c,id:c.id}}async cancelOrder(e,t,i={}){return await this.tradePostCancelOrder({id:e})}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api;if("trade"===t){this.checkRequiredCredentials(),o+="/api"+this.version;let t=this.keysort(this.extend({method:e,access_key:this.apiKey,created:this.nonce()},s)),i=this.urlencode(this.omit(t,"market"));i+="&secret_key="+this.secret,t.sign=this.hash(this.encode(i)),a=this.urlencode(t),r={"Content-Type":"application/x-www-form-urlencoded"}}else{o+="/"+t+"/"+this.implodeParams(e,s)+"_json.js";let i=this.omit(s,this.extractParams(e));Object.keys(i).length&&(o+="?"+this.urlencode(i))}return{url:o,method:i,body:a,headers:r}}async request(e,t="trade",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("status"in n&&"error"===n.status)throw new r(this.id+" "+this.json(n));if("code"in n)throw new r(this.id+" "+this.json(n));return n}}},920:function(e,t,i){"use strict";const s=i(794);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"huobicny",name:"Huobi CNY",hostname:"be.huobi.com",has:{CORS:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766569-15aa7b9a-5edd-11e7-9e7f-44791f4ee49c.jpg",api:"https://be.huobi.com",www:"https://www.huobi.com",doc:"https://github.com/huobiapi/API_Docs/wiki/REST_api_reference"}})}}},921:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,AuthenticationError:a}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"ice3x",name:"ICE3X",countries:["ZA"],rateLimit:1e3,has:{fetchCurrencies:!0,fetchTickers:!0,fetchOrder:!0,fetchOpenOrders:!0,fetchMyTrades:!0,fetchDepositAddress:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/38012176-11616c32-3269-11e8-9f05-e65cf885bb15.jpg",api:"https://ice3x.com/api/v1",www:["https://ice3x.com","https://ice3x.co.za"],doc:"https://ice3x.co.za/ice-cubed-bitcoin-exchange-api-documentation-1-june-2017",fees:["https://help.ice3.com/support/solutions/articles/11000033293-trading-fees","https://help.ice3.com/support/solutions/articles/11000033288-fees-explained","https://help.ice3.com/support/solutions/articles/11000008131-what-are-your-fiat-deposit-and-withdrawal-fees-","https://help.ice3.com/support/solutions/articles/11000033289-deposit-fees"]},api:{public:{get:["currency/list","currency/info","pair/list","pair/info","stats/marketdepthfull","stats/marketdepthbtcav","stats/marketdepth","orderbook/info","trade/list","trade/info"]},private:{post:["balance/list","balance/info","order/new","order/cancel","order/list","order/info","trade/list","trade/info","transaction/list","transaction/info","invoice/list","invoice/info","invoice/pdf"]}},fees:{trading:{maker:.01,taker:.01}},precision:{amount:8,price:8}})}async fetchCurrencies(e={}){let t=(await this.publicGetCurrencyList(e)).response.entities,i=this.precision.amount,s={};for(let r=0;r<t.length;r++){let e=t[r],a=e.currency_id,o=this.commonCurrencyCode(e.iso.toUpperCase());s[o]={id:a,code:o,name:e.name,active:!0,precision:i,limits:{amount:{min:void 0,max:Math.pow(10,i)},price:{min:Math.pow(10,-i),max:Math.pow(10,i)},cost:{min:void 0,max:void 0}},info:e}}return s}async fetchMarkets(){Object.keys(this.currencies).length||(this.currencies=await this.fetchCurrencies()),this.currencies_by_id=this.indexBy(this.currencies,"id");let e=(await this.publicGetPairList()).response.entities,t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.pair_id,a=s.currency_id_from.toString(),o=s.currency_id_to.toString(),n=this.currencies_by_id[a],d=this.currencies_by_id[o],c=this.commonCurrencyCode(n.code),h=this.commonCurrencyCode(d.code),l=c+"/"+h;t.push({id:r,symbol:l,base:c,quote:h,baseId:a,quoteId:o,active:!0,lot:void 0,info:s})}return t}parseTicker(e,t){let i=this.milliseconds(),s=t.symbol,r=this.safeFloat(e,"last_price");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"max"),low:this.safeFloat(e,"min"),bid:this.safeFloat(e,"max_bid"),bidVolume:void 0,ask:this.safeFloat(e,"min_ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeFloat(e,"avg"),baseVolume:void 0,quoteVolume:this.safeFloat(e,"vol"),info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetStatsMarketdepthfull(this.extend({pair_id:i.id},t));return this.parseTicker(s.response.entity,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=(await this.publicGetStatsMarketdepthfull(t)).response.entities,s={};for(let r=0;r<i.length;r++){let e=i[r],t=this.marketsById[e.pair_id];s[t.symbol]=this.parseTicker(e,t)}return s}async fetchOrderBook(e,t={}){await this.loadMarkets();let i=(await this.publicGetOrderbookInfo(this.extend({pair_id:this.marketId(e)},t))).response.entities;return this.parseOrderBook(i,void 0,"bids","asks","price","amount")}parseTrade(e,t){let i=1e3*parseInt(e.created),s=this.safeFloat(e,"price"),r=this.safeFloat(e,"volume"),a=t.symbol,o=parseFloat(this.costToPrecision(a,s*r)),n=this.safeFloat(e,"fee");return n&&(n={cost:n,currency:t.quote}),{timestamp:i,datetime:this.iso8601(i),symbol:a,id:this.safeString(e,"trade_id"),order:void 0,type:"limit",side:e.type,price:s,amount:r,cost:o,fee:n,info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=(await this.publicGetTradeList(this.extend({pair_id:r.id},s))).response.entities;return this.parseTrades(a,r,t,i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostBalanceList(e),i={info:t},s=t.response.entities;for(let r=0;r<s.length;r++){let e=s[r],t=e.currency_id;if(t in this.currencies_by_id){i[this.currencies_by_id[t].code]={free:0,used:0,total:parseFloat(e.balance)}}}return this.parseBalance(i)}parseOrder(e,t){let i=this.safeInteger(e,"pair_id"),s=void 0;i&&!t&&i in this.marketsById&&(s=(t=this.marketsById[i]).symbol);let r=1e3*this.safeInteger(e,"created"),a=this.safeFloat(e,"price"),o=this.safeFloat(e,"volume"),n=this.safeInteger(e,"active"),d=this.safeFloat(e,"remaining"),c=void 0;1===n?n="open":(n="closed",d=0,c=o);let h=this.safeFloat(e,"fee");return h&&(h={cost:h},t&&(h.currency=t.quote)),{id:this.safeString(e,"order_id"),datetime:this.iso8601(r),timestamp:r,lastTradeTimestamp:void 0,status:n,symbol:s,type:"limit",side:e.type,price:a,cost:void 0,amount:o,filled:c,remaining:d,trades:void 0,fee:h,info:e}}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n=await this.privatePostOrderNew(this.extend({pair_id:o.id,type:i,amount:s,price:r},a)),d=this.parseOrder({order_id:n.response.entity.order_id,created:this.seconds(),active:1,type:i,price:r,volume:s,remaining:s,info:n},o),c=d.id;return this.orders[c]=d,d}async cancelOrder(e,t,i={}){return await this.privatePostOrderCancel(this.extend({order_id:e},i))}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostOrderInfo(this.extend({"order _id":e},i));return this.parseOrder(s.response.entity)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=(await this.privatePostOrderList()).response.entities;return this.parseOrders(r,void 0,t,i)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pair_id:r.id};void 0!==i&&(a.items_per_page=i),void 0!==t&&(a.date_from=parseInt(t/1e3));let o=(await this.privatePostTradeList(this.extend(a,s))).response.entities;return this.parseTrades(o,r,t,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privatePostBalanceInfo(this.extend({currency_id:i.id},t)),r=s.response.entity,a=this.safeString(r,"address");return{currency:e,address:a,tag:void 0,status:a?"ok":"none",info:s}}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+e;return"public"===t?Object.keys(s).length&&(o+="?"+this.urlencode(s)):(this.checkRequiredCredentials(),a=this.urlencode(this.extend({nonce:this.nonce()},s)),r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.hmac(this.encode(a),this.encode(this.secret),"sha512")}),{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},o,n){let d=await this.fetch2(e,t,i,s,o,n),c=this.safeValue(d,"errors"),h=this.safeValue(d,"response");if(c||!h){let e=["Key","user_id","Sign"];for(let t=0;t<e.length;t++){let i=e[t],s=this.safeString(c,i);if(s&&!("user_id"===i&&s.indexOf("authorization")<0))throw new a(s)}throw new r(this.json(c))}return d}}},922:function(e,t,i){"use strict";const s=i(788);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"independentreserve",name:"Independent Reserve",countries:["AU","NZ"],rateLimit:1e3,has:{CORS:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/30521662-cf3f477c-9bcb-11e7-89bc-d1ac85012eda.jpg",api:{public:"https://api.independentreserve.com/Public",private:"https://api.independentreserve.com/Private"},www:"https://www.independentreserve.com",doc:"https://www.independentreserve.com/API"},api:{public:{get:["GetValidPrimaryCurrencyCodes","GetValidSecondaryCurrencyCodes","GetValidLimitOrderTypes","GetValidMarketOrderTypes","GetValidOrderTypes","GetValidTransactionTypes","GetMarketSummary","GetOrderBook","GetTradeHistorySummary","GetRecentTrades","GetFxRates"]},private:{post:["PlaceLimitOrder","PlaceMarketOrder","CancelOrder","GetOpenOrders","GetClosedOrders","GetClosedFilledOrders","GetOrderDetails","GetAccounts","GetTransactions","GetDigitalCurrencyDepositAddress","GetDigitalCurrencyDepositAddresses","SynchDigitalCurrencyDepositAddressWithBlockchain","WithdrawDigitalCurrency","RequestFiatWithdrawal","GetTrades"]}},fees:{trading:{taker:.005,maker:.005,percentage:!0,tierBased:!1}}})}async fetchMarkets(){let e=await this.publicGetGetValidPrimaryCurrencyCodes(),t=await this.publicGetGetValidSecondaryCurrencyCodes(),i=[];for(let s=0;s<e.length;s++){let r=e[s],a=r.toUpperCase(),o=this.commonCurrencyCode(a);for(let e=0;e<t.length;e++){let s=t[e],a=s.toUpperCase(),n=this.commonCurrencyCode(a),d=r+"/"+s,c=o+"/"+n;i.push({id:d,symbol:c,base:o,quote:n,baseId:r,quoteId:s,info:d})}}return i}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostGetAccounts(),i={info:t};for(let s=0;s<t.length;s++){let e=t[s],r=e.CurrencyCode.toUpperCase(),a=this.commonCurrencyCode(r),o=this.account();o.free=e.AvailableBalance,o.total=e.TotalBalance,o.used=o.total-o.free,i[a]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=await this.publicGetGetOrderBook(this.extend({primaryCurrencyCode:s.baseId,secondaryCurrencyCode:s.quoteId},i)),a=this.parse8601(r.CreatedTimestampUtc);return this.parseOrderBook(r,a,"BuyOrders","SellOrders","Price","Volume")}parseTicker(e,t){let i=this.parse8601(e.CreatedTimestampUtc),s=void 0;t&&(s=t.symbol);let r=e.LastPrice;return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:e.DayHighestPrice,low:e.DayLowestPrice,bid:e.CurrentHighestBidPrice,bidVolume:void 0,ask:e.CurrentLowestOfferPrice,askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:e.DayAvgPrice,baseVolume:e.DayVolumeXbtInSecondaryCurrrency,quoteVolume:void 0,info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetGetMarketSummary(this.extend({primaryCurrencyCode:i.baseId,secondaryCurrencyCode:i.quoteId},t));return this.parseTicker(s,i)}parseOrder(e,t){let i=void 0;void 0===t?i=t.symbol:t=this.findMarket(e.PrimaryCurrencyCode+"/"+e.SecondaryCurrencyCode);let s=this.safeValue(e,"Type");s.indexOf("Market")>=0?s="market":s.indexOf("Limit")>=0&&(s="limit");let r=void 0;s.indexOf("Bid")>=0?r="buy":s.indexOf("Offer")>=0&&(r="sell");let a=this.parse8601(e.CreatedTimestampUtc),o=this.safeFloat(e,"VolumeOrdered");void 0===o&&(o=this.safeFloat(e,"Volume"));let n=this.safeFloat(e,"VolumeFilled"),d=void 0,c=this.safeFloat(e,"FeePercent"),h=void 0;void 0!==o&&void 0!==n&&(d=o-n,void 0!==c&&(h=c*n));let l=void 0;void 0!==t&&(i=t.symbol,l=t.base);let u={rate:c,cost:h,currency:l},p=e.OrderGuid,m=this.parseOrderStatus(e.Status),f=this.safeFloat(e,"Value"),y=this.safeFloat(e,"AvgPrice"),b=this.safeFloat(e,"Price",y);return{info:e,id:p,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,symbol:i,type:s,side:r,price:b,cost:f,average:y,amount:o,filled:n,remaining:d,status:m,fee:u}}parseOrderStatus(e){let t={Open:"open",PartiallyFilled:"open",Filled:"closed",PartiallyFilledAndCancelled:"canceled",Cancelled:"canceled",PartiallyFilledAndExpired:"canceled",Expired:"canceled"};return e in t?t[e]:e}async fetchOrder(e,t,i={}){await this.loadMarkets();const s=await this.privatePostGetOrderDetails(this.extend({orderGuid:e},i));let r=void 0;return void 0!==t&&(r=this.market(t)),this.parseOrder(s,r)}async fetchMyTrades(e,t,i=50,s={}){await this.loadMarkets();let r=this.safeInteger(s,"pageIndex",1);const a=this.ordered({pageIndex:r,pageSize:i}),o=await this.privatePostGetTrades(this.extend(a,s));let n=void 0;return void 0!==e&&(n=this.market(e)),this.parseTrades(o.Data,n,t,i)}parseTrade(e,t){let i=this.parse8601(e.TradeTimestampUtc),s=this.safeString(e,"TradeGuid"),r=this.safeString(e,"OrderGuid"),a=this.safeFloat(e,"Price");void 0===a&&(a=this.safeFloat(e,"SecondaryCurrencyTradePrice"));let o=this.safeFloat(e,"VolumeTraded");void 0===o&&(o=this.safeFloat(e,"PrimaryCurrencyAmount"));let n=void 0;void 0!==t&&(n=t.symbol);let d=this.safeString(e,"OrderType");return void 0!==d&&(d.indexOf("Bid")>=0?d="buy":d.indexOf("Offer")>=0&&(d="sell")),{id:s,info:e,timestamp:i,datetime:this.iso8601(i),symbol:n,order:r,type:void 0,side:d,price:a,amount:o,fee:void 0}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetGetRecentTrades(this.extend({primaryCurrencyCode:r.baseId,secondaryCurrencyCode:r.quoteId,numberOfRecentTradesToRetrieve:50},s));return this.parseTrades(a.Trades,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n=this.capitalize(t),d="privatePostPlace"+n+"Order",c=n;c+="sell"===i?"Offer":"Bid";let h=this.ordered({primaryCurrencyCode:o.baseId,secondaryCurrencyCode:o.quoteId,orderType:c});"limit"===t&&(h.price=r),h.volume=s;let l=await this[d](this.extend(h,a));return{info:l,id:l.OrderGuid}}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privatePostCancelOrder({orderGuid:e})}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t]+"/"+e;if("public"===t)Object.keys(s).length&&(o+="?"+this.urlencode(s));else{this.checkRequiredCredentials();let e=this.nonce(),t=[o,"apiKey="+this.apiKey,"nonce="+e.toString()],i=Object.keys(s),n=[];for(let r=0;r<i.length;r++){let e=i[r];n.push(e+"="+s[e])}let d=(t=this.arrayConcat(t,n)).join(","),c=this.hmac(this.encode(d),this.encode(this.secret));a=this.json({apiKey:this.apiKey,nonce:e,signature:c}),r={"Content-Type":"application/json"}}return{url:o,method:i,body:a,headers:r}}}},923:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,InsufficientFunds:a,InvalidOrder:o,OrderNotFound:n,AuthenticationError:d}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"indodax",name:"INDODAX",countries:["ID"],has:{CORS:!1,createMarketOrder:!1,fetchTickers:!1,fetchOrder:!0,fetchOrders:!1,fetchClosedOrders:!0,fetchOpenOrders:!0,fetchMyTrades:!1,fetchCurrencies:!1,withdraw:!0},version:"1.8",urls:{logo:"https://user-images.githubusercontent.com/1294454/37443283-2fddd0e4-281c-11e8-9741-b4f1419001b5.jpg",api:{public:"https://indodax.com/api",private:"https://indodax.com/tapi"},www:"https://www.indodax.com",doc:"https://indodax.com/downloads/BITCOINCOID-API-DOCUMENTATION.pdf"},api:{public:{get:["{pair}/ticker","{pair}/trades","{pair}/depth"]},private:{post:["getInfo","transHistory","trade","tradeHistory","getOrder","openOrders","cancelOrder","orderHistory","withdrawCoin"]}},markets:{"BTC/IDR":{id:"btc_idr",symbol:"BTC/IDR",base:"BTC",quote:"IDR",baseId:"btc",quoteId:"idr",precision:{amount:8,price:0},limits:{amount:{min:1e-4,max:void 0}}},"ACT/IDR":{id:"act_idr",symbol:"ACT/IDR",base:"ACT",quote:"IDR",baseId:"act",quoteId:"idr",precision:{amount:8,price:0},limits:{amount:{min:void 0,max:void 0}}},"ADA/IDR":{id:"ada_idr",symbol:"ADA/IDR",base:"ADA",quote:"IDR",baseId:"ada",quoteId:"idr",precision:{amount:8,price:0},limits:{amount:{min:void 0,max:void 0}}},"BCD/IDR":{id:"bcd_idr",symbol:"BCD/IDR",base:"BCD",quote:"IDR",baseId:"bcd",quoteId:"idr",precision:{amount:8,price:0},limits:{amount:{min:void 0,max:void 0}}},"BCH/IDR":{id:"bch_idr",symbol:"BCH/IDR",base:"BCH",quote:"IDR",baseId:"bch",quoteId:"idr",precision:{amount:8,price:0},limits:{amount:{min:.001,max:void 0}}},"BTG/IDR":{id:"btg_idr",symbol:"BTG/IDR",base:"BTG",quote:"IDR",baseId:"btg",quoteId:"idr",precision:{amount:8,price:0},limits:{amount:{min:.01,max:void 0}}},"ETH/IDR":{id:"eth_idr",symbol:"ETH/IDR",base:"ETH",quote:"IDR",baseId:"eth",quoteId:"idr",precision:{amount:8,price:0},limits:{amount:{min:.01,max:void 0}}},"ETC/IDR":{id:"etc_idr",symbol:"ETC/IDR",base:"ETC",quote:"IDR",baseId:"etc",quoteId:"idr",precision:{amount:8,price:0},limits:{amount:{min:.1,max:void 0}}},"IGNIS/IDR":{id:"ignis_idr",symbol:"IGNIS/IDR",base:"IGNIS",quote:"IDR",baseId:"ignis",quoteId:"idr",precision:{amount:8,price:0},limits:{amount:{min:1,max:void 0}}},"LTC/IDR":{id:"ltc_idr",symbol:"LTC/IDR",base:"LTC",quote:"IDR",baseId:"ltc",quoteId:"idr",precision:{amount:8,price:0},limits:{amount:{min:.01,max:void 0}}},"STQ/IDR":{id:"stq_idr",symbol:"STQ/IDR",base:"STQ",quote:"IDR",baseId:"stq",quoteId:"idr",precision:{amount:8,price:0},limits:{amount:{min:void 0,max:void 0}}},"NXT/IDR":{id:"nxt_idr",symbol:"NXT/IDR",base:"NXT",quote:"IDR",baseId:"nxt",quoteId:"idr",precision:{amount:8,price:0},limits:{amount:{min:5,max:void 0}}},"TEN/IDR":{id:"ten_idr",symbol:"TEN/IDR",base:"TEN",quote:"IDR",baseId:"ten",quoteId:"idr",precision:{amount:8,price:0},limits:{amount:{min:5,max:void 0}}},"TRX/IDR":{id:"trx_idr",symbol:"TRX/IDR",base:"TRX",quote:"IDR",baseId:"trx",quoteId:"idr",precision:{amount:8,price:0},limits:{amount:{min:void 0,max:void 0}}},"WAVES/IDR":{id:"waves_idr",symbol:"WAVES/IDR",base:"WAVES",quote:"IDR",baseId:"waves",quoteId:"idr",precision:{amount:8,price:0},limits:{amount:{min:.1,max:void 0}}},"XLM/IDR":{id:"str_idr",symbol:"XLM/IDR",base:"XLM",quote:"IDR",baseId:"str",quoteId:"idr",precision:{amount:8,price:0},limits:{amount:{min:20,max:void 0}}},"XRP/IDR":{id:"xrp_idr",symbol:"XRP/IDR",base:"XRP",quote:"IDR",baseId:"xrp",quoteId:"idr",precision:{amount:8,price:0},limits:{amount:{min:10,max:void 0}}},"XZC/IDR":{id:"xzc_idr",symbol:"XZC/IDR",base:"XZC",quote:"IDR",baseId:"xzc",quoteId:"idr",precision:{amount:8,price:0},limits:{amount:{min:.1,max:void 0}}},"BTS/BTC":{id:"bts_btc",symbol:"BTS/BTC",base:"BTS",quote:"BTC",baseId:"bts",quoteId:"btc",precision:{amount:8,price:8},limits:{amount:{min:.01,max:void 0}}},"DASH/BTC":{id:"drk_btc",symbol:"DASH/BTC",base:"DASH",quote:"BTC",baseId:"drk",quoteId:"btc",precision:{amount:8,price:6},limits:{amount:{min:.01,max:void 0}}},"DOGE/BTC":{id:"doge_btc",symbol:"DOGE/BTC",base:"DOGE",quote:"BTC",baseId:"doge",quoteId:"btc",precision:{amount:8,price:8},limits:{amount:{min:1,max:void 0}}},"ETH/BTC":{id:"eth_btc",symbol:"ETH/BTC",base:"ETH",quote:"BTC",baseId:"eth",quoteId:"btc",precision:{amount:8,price:5},limits:{amount:{min:.001,max:void 0}}},"LTC/BTC":{id:"ltc_btc",symbol:"LTC/BTC",base:"LTC",quote:"BTC",baseId:"ltc",quoteId:"btc",precision:{amount:8,price:6},limits:{amount:{min:.01,max:void 0}}},"NXT/BTC":{id:"nxt_btc",symbol:"NXT/BTC",base:"NXT",quote:"BTC",baseId:"nxt",quoteId:"btc",precision:{amount:8,price:8},limits:{amount:{min:.01,max:void 0}}},"TEN/BTC":{id:"ten_btc",symbol:"TEN/BTC",base:"TEN",quote:"BTC",baseId:"ten",quoteId:"btc",precision:{amount:8,price:8},limits:{amount:{min:.01,max:void 0}}},"XEM/BTC":{id:"nem_btc",symbol:"XEM/BTC",base:"XEM",quote:"BTC",baseId:"nem",quoteId:"btc",precision:{amount:8,price:8},limits:{amount:{min:1,max:void 0}}},"XLM/BTC":{id:"str_btc",symbol:"XLM/BTC",base:"XLM",quote:"BTC",baseId:"str",quoteId:"btc",precision:{amount:8,price:8},limits:{amount:{min:.01,max:void 0}}},"XRP/BTC":{id:"xrp_btc",symbol:"XRP/BTC",base:"XRP",quote:"BTC",baseId:"xrp",quoteId:"btc",precision:{amount:8,price:8},limits:{amount:{min:.01,max:void 0}}}},fees:{trading:{tierBased:!1,percentage:!0,maker:0,taker:.003}}})}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privatePostGetInfo()).return,i={info:t},s=Object.keys(this.currencies);for(let r=0;r<s.length;r++){let e=s[r],a=this.currencies[e].id,o=this.account();o.free=this.safeFloat(t.balance,a,0),o.used=this.safeFloat(t.balance_hold,a,0),o.total=this.sum(o.free,o.used),i[e]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetPairDepth(this.extend({pair:this.marketId(e)},i));return this.parseOrderBook(s,void 0,"buy","sell")}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=(await this.publicGetPairTicker(this.extend({pair:i.id},t))).ticker,r=1e3*this.safeFloat(s,"server_time"),a="vol_"+i.baseId.toLowerCase(),o="vol_"+i.quoteId.toLowerCase(),n=this.safeFloat(s,"last");return{symbol:e,timestamp:r,datetime:this.iso8601(r),high:this.safeFloat(s,"high"),low:this.safeFloat(s,"low"),bid:this.safeFloat(s,"buy"),bidVolume:void 0,ask:this.safeFloat(s,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:parseFloat(s[a]),quoteVolume:parseFloat(s[o]),info:s}}parseTrade(e,t){let i=1e3*parseInt(e.date);return{id:e.tid,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:e.type,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"amount")}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetPairTrades(this.extend({pair:r.id},s));return this.parseTrades(a,r,t,i)}parseOrder(e,t){let i=void 0;"type"in e&&(i=e.type);let s=this.safeString(e,"status","open");"filled"===s?s="closed":"calcelled"===s&&(s="canceled");let r=void 0,a=void 0,o=this.safeFloat(e,"price"),n=void 0,d=void 0,c=void 0;if(void 0!==t){r=t.symbol;let i=t.quoteId,s=t.baseId;if("idr"===t.quoteId&&"order_rp"in e&&(i="rp"),"idr"===t.baseId&&"remain_rp"in e&&(s="rp"),a=this.safeFloat(e,"order_"+i)){n=a/o;let t=this.safeFloat(e,"remain_"+i);void 0!==t&&(c=n-(d=t/o))}else a=o*(n=this.safeFloat(e,"order_"+s)),c=n-(d=this.safeFloat(e,"remain_"+s))}let h=void 0;c&&(h=a/c);let l=parseInt(e.submit_time);return{info:e,id:e.order_id,timestamp:l,datetime:this.iso8601(l),lastTradeTimestamp:void 0,symbol:r,type:"limit",side:i,price:o,cost:a,average:h,amount:n,filled:c,remaining:d,status:s,fee:void 0}}async fetchOrder(e,t,i={}){if(void 0===t)throw new r(this.id+" fetchOrder requires a symbol");await this.loadMarkets();let s=this.market(t),a=await this.privatePostGetOrder(this.extend({pair:s.id,order_id:e},i)),o=a.return,n=this.parseOrder(this.extend({id:e},o.order),s);return this.extend({info:a},n)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=void 0,a={};void 0!==e&&(r=this.market(e),a.pair=r.id);let o=(await this.privatePostOpenOrders(this.extend(a,s))).return.orders;if(!o)return[];if(void 0!==e)return this.parseOrders(o,r,t,i);let n=Object.keys(o),d=[];for(let c=0;c<n.length;c++){let e=n[c],s=o[e];r=this.markets_by_id[e];let a=this.parseOrders(s,r,t,i);d=this.arrayConcat(d,a)}return d}async fetchClosedOrders(e,t,i,s={}){if(void 0===e)throw new r(this.id+" fetchOrders requires a symbol");await this.loadMarkets();let a={},o=void 0;void 0!==e&&(o=this.market(e),a.pair=o.id);let n=await this.privatePostOrderHistory(this.extend(a,s)),d=this.parseOrders(n.return.orders,o,t,i);return d=this.filterBy(d,"status","closed"),void 0!==e?this.filterBySymbol(d,e):d}async createOrder(e,t,i,s,a,o={}){if("limit"!==t)throw new r(this.id+" allows limit orders only");await this.loadMarkets();let n=this.market(e),d={pair:n.id,type:i,price:a},c=n.baseId;"buy"===i?d[n.quoteId]=s*a:d[n.baseId]=s,d[c]=s;let h=await this.privatePostTrade(this.extend(d,o));return{info:h,id:h.return.order_id.toString()}}async cancelOrder(e,t,i={}){if(void 0===t)throw new r(this.id+" cancelOrder requires a symbol argument");if(void 0===this.safeValue(i,"side"))throw new r(this.id+' cancelOrder requires an extra "side" param');await this.loadMarkets();let s=this.market(t);return await this.privatePostCancelOrder(this.extend({order_id:e,pair:s.id,type:i.side},i))}async withdraw(e,t,i,s,r={}){this.checkAddress(i),await this.loadMarkets();let a=this.currency(e),o=this.milliseconds(),n={currency:a.id,withdraw_amount:t,withdraw_address:i,request_id:o.toString()};s&&(n.withdraw_memo=s);let d=await this.privatePostWithdrawCoin(this.extend(n,r)),c=void 0;return"txid"in d&&d.txid.length>0&&(c=d.txid),{info:d,id:c}}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t];return"public"===t?o+="/"+this.implodeParams(e,s):(this.checkRequiredCredentials(),a=this.urlencode(this.extend({method:e,nonce:this.nonce()},s)),r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.hmac(this.encode(a),this.encode(this.secret),"sha512")}),{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,c,h,l){if("string"!=typeof h)return;if(void 0===l&&("{"!==h[0]&&"["!==h[0]||(l=JSON.parse(h))),Array.isArray(l))return;if(!("success"in l))return;if(1===l.success){if("return"in l)return;throw new r(this.id+": malformed response: "+this.json(l))}let u=l.error,p=this.id+" "+this.json(l);if("Insufficient balance."===u)throw new a(p);if("invalid order."===u)throw new n(p);if(u.indexOf("Minimum price ")>=0)throw new o(p);if(u.indexOf("Minimum order ")>=0)throw new o(p);if("Invalid credentials. API not found or session has expired."===u)throw new d(p);if("Invalid credentials. Bad sign."===u)throw new d(p);throw new r(this.id+": unknown error: "+this.json(l))}}},924:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787),{AuthenticationError:a}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"itbit",name:"itBit",countries:["US"],rateLimit:2e3,version:"v1",has:{CORS:!0,createMarketOrder:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/27822159-66153620-60ad-11e7-89e7-005f6d7f3de0.jpg",api:"https://api.itbit.com",www:"https://www.itbit.com",doc:["https://api.itbit.com/docs","https://www.itbit.com/api"]},api:{public:{get:["markets/{symbol}/ticker","markets/{symbol}/order_book","markets/{symbol}/trades"]},private:{get:["wallets","wallets/{walletId}","wallets/{walletId}/balances/{currencyCode}","wallets/{walletId}/funding_history","wallets/{walletId}/trades","wallets/{walletId}/orders","wallets/{walletId}/orders/{id}"],post:["wallet_transfers","wallets","wallets/{walletId}/cryptocurrency_deposits","wallets/{walletId}/cryptocurrency_withdrawals","wallets/{walletId}/orders","wire_withdrawal"],delete:["wallets/{walletId}/orders/{id}"]}},markets:{"BTC/USD":{id:"XBTUSD",symbol:"BTC/USD",base:"BTC",quote:"USD"},"BTC/SGD":{id:"XBTSGD",symbol:"BTC/SGD",base:"BTC",quote:"SGD"},"BTC/EUR":{id:"XBTEUR",symbol:"BTC/EUR",base:"BTC",quote:"EUR"}},fees:{trading:{maker:0,taker:.002}}})}async fetchOrderBook(e,t,i={}){let s=await this.publicGetMarketsSymbolOrderBook(this.extend({symbol:this.marketId(e)},i));return this.parseOrderBook(s)}async fetchTicker(e,t={}){let i=await this.publicGetMarketsSymbolTicker(this.extend({symbol:this.marketId(e)},t));if(!("serverTimeUTC"in i))throw new r(this.id+" fetchTicker returned a bad response: "+this.json(i));let s=this.parse8601(i.serverTimeUTC),a=this.safeFloat(i,"vwap24h"),o=this.safeFloat(i,"volume24h"),n=void 0;void 0!==o&&void 0!==a&&(n=o*a);let d=this.safeFloat(i,"lastPrice");return{symbol:e,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(i,"high24h"),low:this.safeFloat(i,"low24h"),bid:this.safeFloat(i,"bid"),bidVolume:void 0,ask:this.safeFloat(i,"ask"),askVolume:void 0,vwap:a,open:this.safeFloat(i,"openToday"),close:d,last:d,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:o,quoteVolume:n,info:i}}parseTrade(e,t){let i=this.parse8601(e.timestamp),s=e.matchNumber.toString();return{info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,id:s,order:s,type:void 0,side:void 0,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"amount")}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetMarketsSymbolTrades(this.extend({symbol:r.id},s));return this.parseTrades(a.recentTrades,r,t,i)}async fetchBalance(e={}){let t=await this.fetchWallets(),i=t[0].balances,s={info:t};for(let r=0;r<i.length;r++){let e=i[r],t=e.currency,a={free:parseFloat(e.availableBalance),used:0,total:parseFloat(e.totalBalance)};a.used=a.total-a.free,s[t]=a}return this.parseBalance(s)}async fetchWallets(e={}){if(!this.userId)throw new a(this.id+" fetchWallets requires userId in API settings");let t={userId:this.userId};return this.privateGetWallets(this.extend(t,e))}async fetchWallet(e,t={}){let i={walletId:e};return this.privateGetWalletsWalletId(this.extend(i,t))}async fetchOpenOrders(e,t,i,s={}){return this.fetchOrders(e,t,i,this.extend({status:"open"},s))}async fetchClosedOrders(e,t,i,s={}){return this.fetchOrders(e,t,i,this.extend({status:"filled"},s))}async fetchOrders(e,t,i,s={}){if(!("walletId"in s))throw new r(this.id+" fetchOrders requires a walletId parameter");let a=s.walletId,o=await this.privateGetWalletsWalletIdOrders(this.extend({walletId:a},s));return this.parseOrders(o,void 0,t,i)}parseOrder(e,t){let i=e.side,s=e.type,r=this.markets_by_id[e.instrument].symbol,a=this.parse8601(e.createdTime),o=this.safeFloat(e,"amount"),n=this.safeFloat(e,"amountFilled"),d=o-n,c=this.safeFloat(e,"price"),h=c*this.safeFloat(e,"volumeWeightedAveragePrice");return{id:e.id,info:e,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,status:e.status,symbol:r,type:s,side:i,price:c,cost:h,amount:o,filled:n,remaining:d,fee:void 0}}nonce(){return this.milliseconds()}async createOrder(e,t,i,s,a,o={}){if("market"===t)throw new r(this.id+" allows limit orders only");if(!("walletId"in o))throw new r(this.id+" createOrder requires a walletId parameter");s=s.toString(),a=a.toString();let n=this.market(e),d={side:i,type:t,currency:n.id.replace(n.quote,""),amount:s,display:s,price:a,instrument:n.id},c=await this.privatePostWalletsWalletIdOrders(this.extend(d,o));return{info:c,id:c.id}}async fetchOrder(e,t,i={}){if(!("walletId"in i))throw new r(this.id+" fetchOrder requires a walletId parameter");return await this.privateGetWalletsWalletIdOrdersId(this.extend({id:e},i))}async cancelOrder(e,t,i={}){if(!("walletId"in i))throw new r(this.id+" cancelOrder requires a walletId parameter");return await this.privateDeleteWalletsWalletIdOrdersId(this.extend({id:e},i))}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.version+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));if("GET"===i&&Object.keys(n).length&&(o+="?"+this.urlencode(n)),a="POST"===i&&Object.keys(n).length?this.json(n):"","private"===t){this.checkRequiredCredentials();let e=this.nonce().toString(),t=e,s=[i,o,a,e,t],n=e+this.json(s).replace("\\/","/"),d=this.hash(this.encode(n),"sha256","binary"),c=this.binaryConcat(o,d),h=this.hmac(c,this.encode(this.secret),"sha512","base64");r={Authorization:this.apiKey+":"+h,"Content-Type":"application/json","X-Auth-Timestamp":t,"X-Auth-Nonce":e}}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("code"in n)throw new r(this.id+" "+this.json(n));return n}}},925:function(e,t,i){"use strict";const s=i(812);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"jubi",name:"jubi.com",countries:["CN"],rateLimit:1500,version:"v1",has:{CORS:!1,fetchTickers:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766581-9d397d9a-5edd-11e7-8fb9-5d8236c0e692.jpg",api:"https://www.jubi.com/api",www:"https://www.jubi.com",doc:"https://www.jubi.com/help/api.html"}})}async fetchMarkets(){let e=await this.publicGetAllticker(),t=Object.keys(e),i=[];for(let s=0;s<t.length;s++){let e=t[s],r=e.toUpperCase(),a="CNY",o=r+"/"+a;r=this.commonCurrencyCode(r),a=this.commonCurrencyCode(a),i.push({id:e,symbol:o,base:r,quote:a,info:e})}return i}}},926:function(e,t,i){"use strict";const s=i(788),{ExchangeNotAvailable:r,ExchangeError:a,OrderNotFound:o,DDoSProtection:n,InvalidNonce:d,InsufficientFunds:c,CancelPending:h,InvalidOrder:l,InvalidAddress:u}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"kraken",name:"Kraken",countries:["US"],version:"0",rateLimit:3e3,has:{createDepositAddress:!0,fetchDepositAddress:!0,fetchTradingFees:!0,CORS:!1,fetchCurrencies:!0,fetchTickers:!0,fetchOHLCV:!0,fetchOrder:!0,fetchOpenOrders:!0,fetchClosedOrders:!0,fetchMyTrades:!0,withdraw:!0},marketsByAltname:{},timeframes:{"1m":"1","5m":"5","15m":"15","30m":"30","1h":"60","4h":"240","1d":"1440","1w":"10080","2w":"21600"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766599-22709304-5ede-11e7-9de1-9f33732e1509.jpg",api:{public:"https://api.kraken.com",private:"https://api.kraken.com",zendesk:"https://support.kraken.com/hc/en-us/articles"},www:"https://www.kraken.com",doc:["https://www.kraken.com/en-us/help/api","https://github.com/nothingisdead/npm-kraken-api"],fees:"https://www.kraken.com/en-us/help/fees"},fees:{trading:{tierBased:!0,percentage:!0,taker:.0026,maker:.0016,tiers:{taker:[[0,.0026],[5e4,.0024],[1e5,.0022],[25e4,.002],[5e5,.0018],[1e6,.0016],[25e5,.0014],[5e6,.0012],[1e7,1e-4]],maker:[[0,.0016],[5e4,.0014],[1e5,.0012],[25e4,.001],[5e5,8e-4],[1e6,6e-4],[25e5,4e-4],[5e6,2e-4],[1e7,0]]}},funding:{tierBased:!1,percentage:!1,withdraw:{BTC:.001,ETH:.005,XRP:.02,XLM:2e-5,LTC:.02,DOGE:2,ZEC:1e-4,ICN:.02,REP:.01,ETC:.005,MLN:.003,XMR:.05,DASH:.005,GNO:.01,EOS:.5,BCH:.001,USD:5,EUR:5,CAD:10,JPY:300},deposit:{BTC:0,ETH:0,XRP:0,XLM:0,LTC:0,DOGE:0,ZEC:0,ICN:0,REP:0,ETC:0,MLN:0,XMR:0,DASH:0,GNO:0,EOS:0,BCH:0,USD:5,EUR:0,CAD:5,JPY:0}}},api:{zendesk:{get:["205893708-What-is-the-minimum-order-size-","201396777-What-are-the-deposit-fees-","201893608-What-are-the-withdrawal-fees-"]},public:{get:["Assets","AssetPairs","Depth","OHLC","Spread","Ticker","Time","Trades"]},private:{post:["AddOrder","Balance","CancelOrder","ClosedOrders","DepositAddresses","DepositMethods","DepositStatus","Ledgers","OpenOrders","OpenPositions","QueryLedgers","QueryOrders","QueryTrades","TradeBalance","TradesHistory","TradeVolume","Withdraw","WithdrawCancel","WithdrawInfo","WithdrawStatus"]}},options:{cacheDepositMethodsOnFetchDepositAddress:!0,depositMethods:{}},exceptions:{"EFunding:Unknown withdraw key":a,"EFunding:Invalid amount":c,"EService:Unavailable":r,"EDatabase:Internal error":r,"EService:Busy":r,"EAPI:Rate limit exceeded":n,"EQuery:Unknown asset":a,"EGeneral:Internal error":r}})}costToPrecision(e,t){return this.truncate(parseFloat(t),this.markets[e].precision.price)}feeToPrecision(e,t){return this.truncate(parseFloat(t),this.markets[e].precision.amount)}async fetchMinOrderSizes(){let e=void 0;try{this.parseJsonResponse=!1,e=await this.zendeskGet205893708WhatIsTheMinimumOrderSize(),this.parseJsonResponse=!0}catch(e){throw this.parseJsonResponse=!0,e}let t=e.split("ul>")[1].split("</li"),i={};for(let s=0;s<t.length;s++){let e=t[s].split("): ");if(e.length>1){let t=parseFloat(e[1]);i[(e=e[0].split("("))[1]]=t}}return i}async fetchMarkets(){let e=await this.publicGetAssetPairs(),t=await this.fetchMinOrderSizes(),i=Object.keys(e.result),s=[];for(let r=0;r<i.length;r++){let a=i[r],o=e.result[a],n=o.base,d=o.quote,c=n,h=d;"X"!==c[0]&&"Z"!==c[0]||(c=c.slice(1)),"X"!==h[0]&&"Z"!==h[0]||(h=h.slice(1)),c=this.commonCurrencyCode(c),h=this.commonCurrencyCode(h);let l=a.indexOf(".d")>=0,u=l?o.altname:c+"/"+h,p=void 0;"fees_maker"in o&&(p=parseFloat(o.fees_maker[0][1])/100);let m={amount:o.lot_decimals,price:o.pair_decimals},f=Math.pow(10,-m.amount);c in t&&(f=t[c]),s.push({id:a,symbol:u,base:c,quote:h,baseId:n,quoteId:d,darkpool:l,info:o,altname:o.altname,maker:p,taker:parseFloat(o.fees[0][1])/100,active:!0,precision:m,limits:{amount:{min:f,max:Math.pow(10,m.amount)},price:{min:Math.pow(10,-m.price),max:void 0},cost:{min:0,max:void 0}}})}return s=this.appendInactiveMarkets(s),this.marketsByAltname=this.indexBy(s,"altname"),s}appendInactiveMarkets(e){let t={amount:8,price:8},i={min:0,max:void 0},s={min:Math.pow(10,-t.price),max:void 0},r={darkpool:!1,info:void 0,maker:void 0,taker:void 0,active:!1,precision:t,limits:{amount:{min:Math.pow(10,-t.amount),max:Math.pow(10,t.amount)},price:s,cost:i}},a=[];for(let o=0;o<a.length;o++)e.push(this.extend(r,a[o]));return e}async fetchCurrencies(e={}){let t=(await this.publicGetAssets(e)).result,i=Object.keys(t),s={};for(let r=0;r<i.length;r++){let e=i[r],a=t[e],o=this.commonCurrencyCode(a.altname),n=a.decimals;s[o]={id:e,code:o,info:a,name:o,active:!0,fee:void 0,precision:n,limits:{amount:{min:Math.pow(10,-n),max:Math.pow(10,n)},price:{min:Math.pow(10,-n),max:Math.pow(10,n)},cost:{min:void 0,max:void 0},withdraw:{min:void 0,max:Math.pow(10,n)}}}}return s}async fetchTradingFees(e={}){await this.loadMarkets(),this.checkRequiredCredentials();let t=await this.privatePostTradeVolume(e),i=this.safeFloat(t.result,"volume"),s=this.fees.trading.tiers,r=s.taker[1],a=s.maker[1];for(let o=0;o<s.taker.length;o++)i>=s.taker[o][0]&&(r=s.taker[o][1]);for(let o=0;o<s.maker.length;o++)i>=s.maker[o][0]&&(a=s.maker[o][1]);return{info:t,maker:a,taker:r}}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e);if(s.darkpool)throw new a(this.id+" does not provide an order book for darkpool symbol "+e);let r={pair:s.id};void 0!==t&&(r.count=t);let o=(await this.publicGetDepth(this.extend(r,i))).result[s.id];return this.parseOrderBook(o)}parseTicker(e,t){let i=this.milliseconds(),s=void 0;t&&(s=t.symbol);let r=parseFloat(e.v[1]),a=parseFloat(e.p[1]),o=r*a,n=parseFloat(e.c[0]);return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:parseFloat(e.h[1]),low:parseFloat(e.l[1]),bid:parseFloat(e.b[0]),bidVolume:void 0,ask:parseFloat(e.a[0]),askVolume:void 0,vwap:a,open:this.safeFloat(e,"o"),close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:r,quoteVolume:o,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=[];for(let n=0;n<this.symbols.length;n++){let e=this.symbols[n],t=this.markets[e];t.active&&(t.darkpool||i.push(t.id))}let s=i.join(","),r=(await this.publicGetTicker(this.extend({pair:s},t))).result,a=Object.keys(r),o={};for(let n=0;n<a.length;n++){let e=a[n],t=this.markets_by_id[e],i=t.symbol,s=r[e];o[i]=this.parseTicker(s,t)}return o}async fetchTicker(e,t={}){if(await this.loadMarkets(),e.indexOf(".d")>=0)throw new a(this.id+" does not provide a ticker for darkpool symbol "+e);let i=this.market(e),s=(await this.publicGetTicker(this.extend({pair:i.id},t))).result[i.id];return this.parseTicker(s,i)}parseOHLCV(e,t,i="1m",s,r){return[1e3*e[0],parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3]),parseFloat(e[4]),parseFloat(e[6])]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),o={pair:a.id,interval:this.timeframes[t]};void 0!==i&&(o.since=parseInt(i/1e3));let n=(await this.publicGetOHLC(this.extend(o,r))).result[a.id];return this.parseOHLCVs(n,a,t,i,s)}parseTrade(e,t){let i=void 0,s=void 0,r=void 0,a=void 0,o=void 0,n=void 0,d=void 0,c=void 0;if(t||(t=this.findMarketByAltnameOrId(e.pair)),"ordertxid"in e){if(d=e.ordertxid,n=e.id,i=parseInt(1e3*e.time),s=e.type,r=e.ordertype,a=this.safeFloat(e,"price"),o=this.safeFloat(e,"vol"),"fee"in e){let i=void 0;t&&(i=t.quote),c={cost:this.safeFloat(e,"fee"),currency:i}}}else{i=parseInt(1e3*e[2]),s="s"===e[3]?"sell":"buy",r="l"===e[4]?"limit":"market",a=parseFloat(e[0]),o=parseFloat(e[1]),e.length>6&&(n=e[6])}let h=t?t.symbol:void 0;return{id:n,order:d,info:e,timestamp:i,datetime:this.iso8601(i),symbol:h,type:r,side:s,price:a,amount:o,cost:a*o,fee:c}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=r.id,o=(await this.publicGetTrades(this.extend({pair:a},s))).result,n=o[a],d=n.length;if(d<=0)return[];let c=n[d-1],h=this.safeString(o,"last");return c.push(h),this.parseTrades(n,r,t,i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostBalance(),i=this.safeValue(t,"result");if(void 0===i)throw new r(this.id+" fetchBalance failed due to a malformed response "+this.json(t));let s={info:i},a=Object.keys(i);for(let r=0;r<a.length;r++){let e=a[r],t=e;t in this.currencies_by_id?t=this.currencies_by_id[t].code:("X"===t[0]?t=t.slice(1):"Z"===t[0]&&(t=t.slice(1)),t=this.commonCurrencyCode(t));let o=parseFloat(i[e]),n={free:o,used:0,total:o};s[t]=n}return this.parseBalance(s)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o={pair:this.market(e).id,type:i,ordertype:t,volume:this.amountToPrecision(e,s)};("limit"===t||!("market"===t)&&void 0!==r)&&(o.price=this.priceToPrecision(e,r));let n=await this.privatePostAddOrder(this.extend(o,a)),d=this.safeValue(n.result,"txid");if(void 0!==d&&Array.isArray(d)){d=d.length>1?d:d[0]}return{info:n,id:d}}findMarketByAltnameOrId(e){return e in this.marketsByAltname?this.marketsByAltname[e]:e in this.markets_by_id?this.markets_by_id[e]:void 0}parseOrder(e,t){let i=e.descr,s=i.type,r=i.ordertype,a=void 0;void 0===t&&(t=this.findMarketByAltnameOrId(i.pair));let o=parseInt(1e3*e.opentm),n=this.safeFloat(e,"vol"),d=this.safeFloat(e,"vol_exec"),c=n-d,h=void 0,l=this.safeFloat(e,"cost"),u=this.safeFloat(i,"price");if(u||(u=this.safeFloat(e,"price")),void 0!==t&&(a=t.symbol,"fee"in e)){let i=e.oflags;h={cost:this.safeFloat(e,"fee"),rate:void 0},i.indexOf("fciq")>=0?h.currency=t.quote:i.indexOf("fcib")>=0&&(h.currency=t.base)}return{id:e.id,info:e,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:void 0,status:e.status,symbol:a,type:r,side:s,price:u,cost:l,amount:n,filled:d,remaining:c,fee:h}}parseOrders(e,t,i,s){let r=[],a=Object.keys(e);for(let o=0;o<a.length;o++){let i=a[o],s=this.extend({id:i},e[i]);r.push(this.parseOrder(s,t))}return this.filterBySinceLimit(r,i,s)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostQueryOrders(this.extend({trades:!0,txid:e},i)),r=s.result,a=this.parseOrder(this.extend({id:e},r[e]));return this.extend({info:s},a)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r={};void 0!==t&&(r.start=parseInt(t/1e3));let a=(await this.privatePostTradesHistory(this.extend(r,s))).result.trades,o=Object.keys(a);for(let d=0;d<o.length;d++)a[o[d]].id=o[d];let n=this.parseTrades(a,void 0,t,i);return void 0===e?n:this.filterBySymbol(n,e)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=void 0;try{s=await this.privatePostCancelOrder(this.extend({txid:e},i))}catch(e){if(this.last_http_response&&this.last_http_response.indexOf("EOrder:Unknown order")>=0)throw new o(this.id+" cancelOrder() error "+this.last_http_response);throw e}return s}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r={};void 0!==t&&(r.start=parseInt(t/1e3));let a=await this.privatePostOpenOrders(this.extend(r,s)),o=this.parseOrders(a.result.open,void 0,t,i);return void 0===e?o:this.filterBySymbol(o,e)}async fetchClosedOrders(e,t,i,s={}){await this.loadMarkets();let r={};void 0!==t&&(r.start=parseInt(t/1e3));let a=await this.privatePostClosedOrders(this.extend(r,s)),o=this.parseOrders(a.result.closed,void 0,t,i);return void 0===e?o:this.filterBySymbol(o,e)}async fetchDepositMethods(e,t={}){await this.loadMarkets();let i=this.currency(e);return(await this.privatePostDepositMethods(this.extend({asset:i.id},t))).result}async createDepositAddress(e,t={}){let i=await this.fetchDepositAddress(e,this.extend({new:"true"},t)),s=this.safeString(i,"address");return this.checkAddress(s),{currency:e,address:s,info:i}}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=this.safeString(t,"method");if(void 0===s){if(!this.options.cacheDepositMethodsOnFetchDepositAddress)throw new a(this.id+' fetchDepositAddress() requires an extra `method` parameter. Use fetchDepositMethods ("'+e+'") to get a list of available deposit methods or enable the exchange property .options["cacheDepositMethodsOnFetchDepositAddress"] = true');e in this.options.depositMethods||(this.options.depositMethods[e]=await this.fetchDepositMethods(e)),s=this.options.depositMethods[e][0].method}let r={asset:i.id,method:s},o=await this.privatePostDepositAddresses(this.extend(r,t)),n=o.result;if(n.length<1)throw new u(this.id+" privatePostDepositAddresses() returned no addresses");let d=this.safeString(n[0],"address");return this.checkAddress(d),{currency:e,address:d,info:o}}async withdraw(e,t,i,s,r={}){if(this.checkAddress(i),"key"in r){await this.loadMarkets();let i=await this.privatePostWithdraw(this.extend({asset:e,amount:t},r));return{info:i,id:i.result}}throw new a(this.id+" withdraw requires a 'key' parameter (withdrawal key name, as set up on your account)")}sign(e,t="public",i="GET",s={},r,a){let o="/"+this.version+"/"+t+"/"+e;if("public"===t)Object.keys(s).length&&(o+="?"+this.urlencode(s));else if("private"===t){this.checkRequiredCredentials();let e=this.nonce().toString();a=this.urlencode(this.extend({nonce:e},s));let t=this.encode(e+a),i=this.hash(t,"sha256","binary"),n=this.stringToBinary(this.encode(o)),d=this.binaryConcat(n,i),c=this.base64ToBinary(this.secret),h=this.hmac(d,c,"sha512","base64");r={"API-Key":this.apiKey,"API-Sign":this.decode(h),"Content-Type":"application/x-www-form-urlencoded"}}else o="/"+e;return{url:o=this.urls.api[t]+o,method:i,body:a,headers:r}}nonce(){return this.milliseconds()}handleErrors(e,t,i,s,r,o){if(o.indexOf("Invalid order")>=0)throw new l(this.id+" "+o);if(o.indexOf("Invalid nonce")>=0)throw new d(this.id+" "+o);if(o.indexOf("Insufficient funds")>=0)throw new c(this.id+" "+o);if(o.indexOf("Cancel pending")>=0)throw new h(this.id+" "+o);if(o.indexOf("Invalid arguments:volume")>=0)throw new l(this.id+" "+o);if("{"===o[0]){let e=JSON.parse(o);if("string"!=typeof e&&"error"in e){if(e.error.length){let t=this.id+" "+this.json(e);for(let i=0;i<e.error.length;i++)if(e.error[i]in this.exceptions)throw new this.exceptions[e.error[i]](t);throw new a(t)}}}}}},927:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,InvalidNonce:a,InvalidOrder:o,AuthenticationError:n,InsufficientFunds:d,OrderNotFound:c}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"kucoin",name:"Kucoin",countries:["HK"],version:"v1",rateLimit:2e3,userAgent:this.userAgents.chrome,has:{CORS:!1,cancelOrders:!0,createMarketOrder:!1,fetchDepositAddress:!0,fetchTickers:!0,fetchOHLCV:!0,fetchOrder:!0,fetchOrders:!1,fetchClosedOrders:!0,fetchOpenOrders:!0,fetchMyTrades:"emulated",fetchCurrencies:!0,withdraw:!0},timeframes:{"1m":1,"5m":5,"15m":15,"30m":30,"1h":60,"8h":480,"1d":"D","1w":"W"},urls:{logo:"https://user-images.githubusercontent.com/1294454/33795655-b3c46e48-dcf6-11e7-8abe-dc4588ba7901.jpg",api:{public:"https://api.kucoin.com",private:"https://api.kucoin.com",kitchen:"https://kitchen.kucoin.com","kitchen-2":"https://kitchen-2.kucoin.com"},www:"https://www.kucoin.com",referral:"https://www.kucoin.com/?r=E5wkqe",doc:"https://kucoinapidocs.docs.apiary.io",fees:"https://news.kucoin.com/en/fee"},api:{kitchen:{get:["open/chart/history"]},public:{get:["open/chart/config","open/chart/history","open/chart/symbol","open/currencies","open/deal-orders","open/kline","open/lang-list","open/orders","open/orders-buy","open/orders-sell","open/tick","market/open/coin-info","market/open/coins","market/open/coins-trending","market/open/symbols"]},private:{get:["account/balance","account/{coin}/wallet/address","account/{coin}/wallet/records","account/{coin}/balance","account/promotion/info","account/promotion/sum","deal-orders","order/active","order/active-map","order/dealt","order/detail","referrer/descendant/count","user/info"],post:["account/{coin}/withdraw/apply","account/{coin}/withdraw/cancel","account/promotion/draw","cancel-order","order","order/cancel-all","user/change-lang"]}},fees:{trading:{maker:.001,taker:.001},funding:{tierBased:!1,percentage:!1,withdraw:{KCS:2,BTC:5e-4,USDT:10,ETH:.01,LTC:.001,NEO:0,GAS:0,KNC:.5,BTM:5,QTUM:.1,EOS:.5,CVC:3,OMG:.1,PAY:.5,SNT:20,BHC:1,HSR:.01,WTC:.1,VEN:2,MTH:10,RPX:1,REQ:20,EVX:.5,MOD:.5,NEBL:.1,DGB:.5,CAG:2,CFD:.5,RDN:.5,UKG:5,BCPT:5,PPT:.1,BCH:5e-4,STX:2,NULS:1,GVT:.1,HST:2,PURA:.5,SUB:2,QSP:5,POWR:1,FLIXX:10,LEND:20,AMB:3,RHOC:2,R:2,DENT:50,DRGN:1,ACT:.1},deposit:{}}},options:{fetchOrderBookWarning:!0,timeDifference:0,adjustForTimeDifference:!1,limits:{amount:{min:{BTC:1e-5,ETH:1e-5,BCH:1e-5,GAS:.1,NEO:.01,KCS:1,TMT:1,TFD:1,LALA:1,CS:1,DOCK:1,ETN:1,IHT:1,KICK:1,WAN:1,ACT:1,APH:1,BAX:1,DATX:1,DEB:1,ELEC:1,GO:1,HSR:1,IOTX:1,LOOM:1,LYM:1,MOBI:1,OMX:1,ONT:1,OPEN:1,QKC:1,SHL:1,SOUL:1,SPHTX:1,SRN:1,TKY:1,TOMO:1,TRAC:1,COV:1,DADI:1,ELF:1,LTC:1,MAN:1,PRL:1,STK:1,ZIL:1,ZPT:1,BPT:1,CAPP:1,POLY:1,TNC:1,XRB:.1,AXP:1,COFI:1,CXO:1,DRGN:1,DTA:1,ING:1,MTN:1,OCN:10,PARETO:1,SNC:1,TEL:10,WAX:1,ADB:1,BOS:1,HAT:1,HKN:1,HPB:1,IOST:1,ARY:1,DBC:1,KEY:1,GAT:1,RPX:1,ACAT:1,CV:10,QLC:1,R:1,TIO:1,ITC:1,AGI:10,EXY:1,MWAT:1,DENT:1,J8T:1,LOCI:1,CAT:1,ARN:1,CAN:1,EOS:.1,ETC:.1,JNT:1,PLAY:1,CHP:1,DASH:.01,DNA:1,EBTC:1,FOTA:1,PURA:.1,UTK:1,CAG:1,GLA:1,HAV:1,SPF:1,TIME:1,ABT:1,BNTY:1,ELIX:1,ENJ:1,AIX:1,VEN:1,AION:1,DAT:1,QTUM:.1,WTC:.1,DGB:1,SNOV:1,BRD:1,AMB:1,BTM:1,MANA:1,RHOC:1,XLR:1,XAS:.1,CHSB:1,UKG:1,POLL:1,FLIXX:.1,INS:1,OMG:.1,TFL:1,WPR:1,LEND:1,KNC:.001,BCD:.001,LA:1,ONION:1,POWR:.1,SNM:1,BTG:.001,PBL:1,MOD:.1,PPT:.1,BCPT:1,GVT:.1,HST:.1,SNT:.1,SUB:.1,NEBL:.1,CVC:.1,MTH:1,NULS:.1,PAY:.1,RDN:1,REQ:1,QSP:.1}}}},commonCurrencies:{CAN:"CanYa",XRB:"NANO"}})}nonce(){return this.milliseconds()-this.options.timeDifference}async loadTimeDifference(){const e=await this.publicGetOpenTick(),t=this.milliseconds();return this.options.timeDifference=parseInt(t-e.timestamp),this.options.timeDifference}calculateFee(e,t,i,s,r,a="taker",o={}){let n=this.markets[e],d="quote",c=n[a],h=parseFloat(this.costToPrecision(e,s*c));return"sell"===i?h*=r:d="base",{type:a,currency:n[d],rate:c,cost:parseFloat(this.feeToPrecision(e,h))}}async fetchMarkets(){let e=await this.publicGetMarketOpenSymbols();this.options.adjustForTimeDifference&&await this.loadTimeDifference();let t=e.data,i=[];for(let s=0;s<t.length;s++){let e=t[s],r=e.symbol,a=e.coinType,o=e.coinTypePair,n=this.commonCurrencyCode(a),d=this.commonCurrencyCode(o),c=n+"/"+d,h={amount:8,price:8},l=Math.pow(10,-h.amount),u=this.safeFloat(this.options.limits.amount.min,n,l),p=e.trading;i.push({id:r,symbol:c,base:n,quote:d,baseId:a,quoteId:o,active:p,taker:this.safeFloat(e,"feeRate"),maker:this.safeFloat(e,"feeRate"),info:e,lot:Math.pow(10,-h.amount),precision:h,limits:{amount:{min:u,max:void 0},price:{min:void 0,max:void 0}}})}return i}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privateGetAccountCoinWalletAddress(this.extend({coin:i.id},t)),r=s.data,a=this.safeString(r,"address");return this.checkAddress(a),{currency:e,address:a,tag:this.safeString(r,"userOid"),info:s}}async fetchCurrencies(e={}){let t=(await this.publicGetMarketOpenCoins(e)).data,i={};for(let s=0;s<t.length;s++){let e=t[s],r=e.coin,a=this.commonCurrencyCode(r),o=e.tradePrecision,n=e.enableDeposit,d=e.enableWithdraw,c=n&&d,h=Math.pow(10,-o),l=this.safeFloat(this.options.limits.amount.min,a,h);i[a]={id:r,code:a,info:e,name:e.name,active:c,fee:e.withdrawMinFee,precision:o,limits:{amount:{min:l,max:Math.pow(10,o)},price:{min:Math.pow(10,-o),max:Math.pow(10,o)},cost:{min:void 0,max:void 0},withdraw:{min:e.withdrawMinAmount,max:Math.pow(10,o)}}}}return i}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privateGetAccountBalance(this.extend({},e))).data,i={info:t},s=this.indexBy(t,"coinType"),r=Object.keys(s);for(let a=0;a<r.length;a++){let e=r[a],t=this.commonCurrencyCode(e),o=this.account(),n=s[e],d=parseFloat(n.freezeBalance),c=parseFloat(n.balance),h=this.sum(c,d);o.free=c,o.used=d,o.total=h,i[t]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={symbol:this.market(e).id};void 0!==t&&(s.limit=t);let a=await this.publicGetOpenOrders(this.extend(s,i)),o=void 0,n=void 0;if("data"in a&&a.data)o=a.data,n=this.safeInteger(a,"timestamp"),n=this.safeInteger(a.data,"timestamp",n);else{if(this.options.fetchOrderBookWarning)throw new r(this.id+" fetchOrderBook returned an null reply. Set exchange.options['fetchOrderBookWarning'] = false to silence this warning");o={BUY:[],SELL:[]}}return this.parseOrderBook(o,n,"BUY","SELL")}parseOrder(e,t){let i=this.safeValue(e,"direction");void 0===i&&(i=e.type),void 0!==i&&(i=i.toLowerCase());let s=this.safeString(e,"orderOid");void 0===s&&(s=this.safeString(e,"oid"));let r=void 0;if("dealOrders"in e&&(r=this.safeValue(e.dealOrders,"datas")),void 0!==r){r=this.parseTrades(r,t);for(let e=0;e<r.length;e++)r[e].side=i,r[e].order=s}let a=void 0;a=void 0!==t?t.symbol:e.coinType+"/"+e.coinTypePair;let o=this.safeValue(e,"createdAt"),n=this.safeFloat(e,"pendingAmount"),d=void 0;d=this.safeValue(e,"isActive",!0)?"open":"closed";let c=this.safeFloat(e,"dealAmount"),h=this.safeFloat(e,"amount"),l=this.safeFloat(e,"dealValue");if(void 0===l&&(l=this.safeFloat(e,"dealValueTotal")),void 0===d&&void 0!==n&&(d=n>0?"open":"closed"),void 0===c)void 0!==d&&"closed"===d&&(c=this.safeFloat(e,"amount"));else if(0===c&&void 0!==r){l=0;for(let e=0;e<r.length;e++)c+=r[e].amount,l+=r[e].cost}let u=void 0;void 0!==c&&(c>0?(void 0===(u=this.safeFloat(e,"price"))&&(u=this.safeFloat(e,"dealPrice")),void 0===u&&(u=this.safeFloat(e,"dealPriceAverage"))):void 0===(u=this.safeFloat(e,"orderPrice"))&&(u=this.safeFloat(e,"price")),void 0!==u&&void 0===l&&(l=u*c),void 0===h?void 0!==n&&(h=this.sum(c,n)):void 0===n&&(n=h-c)),"open"===d&&(void 0!==l&&0!==l||void 0!==u&&void 0!==h&&(l=h*u));let p=void 0;if(void 0!==t)p="sell"===i?t.quote:t.base;else{let t="sell"===i?"coinTypePair":"coinType",s=this.safeString(e,t);void 0!==s&&s in this.currencies_by_id&&(s=this.currencies_by_id[s].code)}let m=this.safeFloat(e,"fee"),f={cost:this.safeFloat(e,"feeTotal",m),rate:this.safeFloat(e,"feeRate"),currency:p};return{info:e,id:s,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:void 0,symbol:a,type:"limit",side:i,price:u,amount:h,cost:l,filled:c,remaining:n,status:d,fee:f,trades:r}}async fetchOrder(e,t,i={}){if(void 0===t)throw new r(this.id+" fetchOrder requires a symbol argument");let s=this.safeValue(i,"type");if(void 0===s)throw new r(this.id+' fetchOrder requires a type parameter ("BUY" or "SELL")');await this.loadMarkets();let a=this.market(t),o={symbol:a.id,type:s,orderOid:e},n=await this.privateGetOrderDetail(this.extend(o,i));if(!n.data)throw new c(this.id+" "+this.json(n));return this.parseOrder(n.data,a)}parseOrdersByStatus(e,t,i,s,r){let a=[];for(let n=0;n<e.length;n++){let i=this.parseOrder(this.extend(e[n],{status:r}),t);a.push(i)}let o=void 0!==t?t.symbol:void 0;return this.filterBySymbolSinceLimit(a,o,i,s)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=void 0,a=void 0,o={symbol:r=void 0!==e?(a=this.market(e)).id:""},n=await this.privateGetOrderActiveMap(this.extend(o,s)),d=this.safeValue(n.data,"SELL");void 0===d&&(d=[]);let c=this.safeValue(n.data,"BUY");void 0===c&&(c=[]);let h=this.arrayConcat(d,c);return this.parseOrdersByStatus(h,a,t,i,"open")}async fetchClosedOrders(e,t,i=20,s={}){let r={};await this.loadMarkets();let a=void 0;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==t&&(r.since=t),void 0!==i&&(r.limit=i);let o=(await this.privateGetOrderDealt(this.extend(r,s))).data.datas;return this.parseOrdersByStatus(o,a,t,i,"closed")}async createOrder(e,t,i,s,a,o={}){if("limit"!==t)throw new r(this.id+" allows limit orders only");await this.loadMarkets();let n=this.market(e),d=n.quote,c=n.base,h={symbol:n.id,type:i.toUpperCase(),price:this.truncate(a,this.currencies[d].precision),amount:this.truncate(s,this.currencies[c].precision)},l=(a=parseFloat(a))*(s=parseFloat(s)),u=await this.privatePostOrder(this.extend(h,o)),p=this.safeString(u.data,"orderOid"),m=this.safeInteger(u,"timestamp"),f=void 0;void 0!==m&&(f=this.iso8601(m));let y={info:u,id:p,timestamp:m,datetime:f,lastTradeTimestamp:void 0,symbol:n.symbol,type:t,side:i,amount:s,filled:void 0,remaining:void 0,price:a,cost:l,status:"open",fee:void 0,trades:void 0};return this.orders[p]=y,y}async cancelOrders(e,t={}){let i={};if(void 0!==e){await this.loadMarkets();let t=this.market(e);i.symbol=t.id}return"type"in t&&(i.type=t.type.toUpperCase(),t=this.omit(t,"type")),await this.privatePostOrderCancelAll(this.extend(i,t))}async cancelOrder(e,t,i={}){if(void 0===t)throw new r(this.id+" cancelOrder requires a symbol");await this.loadMarkets();let s={symbol:this.market(t).id,orderOid:e};if(!("type"in i))throw new r(this.id+' cancelOrder requires parameter type=["BUY"|"SELL"]');return s.type=i.type.toUpperCase(),i=this.omit(i,"type"),await this.privatePostCancelOrder(this.extend(s,i))}parseTicker(e,t){let i=e.datetime,s=void 0;if(void 0===t){let i=e.coinType+"-"+e.coinTypePair;i in this.markets_by_id&&(t=this.markets_by_id[i])}let r=this.safeFloat(e,"change"),a=this.safeFloat(e,"lastDealPrice"),o=void 0;void 0!==a&&void 0!==r&&(o=a-r);let n=this.safeFloat(e,"changeRate");return void 0!==t&&(s=t.symbol),{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:o,close:a,last:a,previousClose:void 0,change:r,percentage:n,average:void 0,baseVolume:this.safeFloat(e,"vol"),quoteVolume:this.safeFloat(e,"volValue"),info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=(await this.publicGetMarketOpenSymbols(t)).data,s={};for(let r=0;r<i.length;r++){let e=this.parseTicker(i[r]);s[e.symbol]=e}return s}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=(await this.publicGetOpenTick(this.extend({symbol:i.id},t))).data;return this.parseTicker(s,i)}parseTrade(e,t){let i=void 0,s=void 0,r=e,a=void 0,o=void 0,n=void 0,d=void 0,c=void 0,h=void 0,l=void 0;if(Array.isArray(e))a=e[0],o="limit","BUY"===e[1]?n="buy":"SELL"===e[1]&&(n="sell"),d=e[2],h=e[3];else{a=this.safeValue(e,"createdAt"),s=this.safeString(e,"orderOid"),i=this.safeString(e,"oid"),void 0!==(n=this.safeString(e,"direction"))&&(n=n.toLowerCase()),d=this.safeFloat(e,"dealPrice"),h=this.safeFloat(e,"amount"),c=this.safeFloat(e,"dealValue");let r=void 0;if(void 0!==t)r="sell"===n?t.quote:t.base;else{let e="sell"===n?"coinTypePair":"coinType",t=this.safeString(s,e);void 0!==t&&t in this.currencies_by_id&&(t=this.currencies_by_id[t].code)}l={cost:this.safeFloat(e,"fee"),currency:r}}let u=void 0;return void 0!==t&&(u=t.symbol),{id:i,order:s,info:r,timestamp:a,datetime:this.iso8601(a),symbol:u,type:o,side:n,price:d,cost:c,amount:h,fee:l}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetOpenDealOrders(this.extend({symbol:r.id,limit:i},s));return this.parseTrades(a.data,r,t,i)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new r(this.id+" fetchMyTrades is deprecated and requires a symbol argument");await this.loadMarkets();let a=this.market(e),o={symbol:a.id};void 0!==i&&(o.limit=i);let n=await this.privateGetDealOrders(this.extend(o,s));return this.parseTrades(n.data.datas,a,t,i)}parseTradingViewOHLCV(e,t,i="1m",s,r){let a=this.convertTradingViewToOHLCV(e);return this.parseOHLCVs(a,t,i,s,r)}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e),o=this.seconds(),n=this.timeframes[t],d=n;"D"===d?(void 0===s&&(s=30),d=1440):"W"===d?(void 0===s&&(s=52),d=10080):void 0===s&&(s=1440);let c=o-s*d*60;void 0!==i&&(c=parseInt(i/1e3),o=Math.min(o,this.sum(c,s*d*60)));let h={symbol:a.id,resolution:n,from:c,to:o},l=await this.publicGetOpenChartHistory(this.extend(h,r));return this.parseTradingViewOHLCV(l,a,t,i,s)}async withdraw(e,t,i,s,r={}){this.checkAddress(i),await this.loadMarkets();let a=this.currency(e);return this.checkAddress(i),{info:await this.privatePostAccountCoinWithdrawApply(this.extend({coin:a.id,amount:t,address:i},r)),id:void 0}}sign(e,t="public",i="GET",s={},r,a){let o="/"+this.version+"/"+this.implodeParams(e,s),n=this.urls.api[t]+o,d=this.omit(s,this.extractParams(e));if("private"===t){this.checkRequiredCredentials();let e=this.nonce(),t="";e=e.toString(),Object.keys(d).length&&(n+="?"+(t=this.rawencode(this.keysort(d))),"GET"!==i&&(a=t));let s=o+"/"+e+"/"+t,c=this.stringToBase64(this.encode(s)),h=this.hmac(c,this.encode(this.secret),"sha256");r={"KC-API-KEY":this.apiKey,"KC-API-NONCE":e,"KC-API-SIGNATURE":h}}else Object.keys(d).length&&(n+="?"+this.urlencode(d));return{url:n,method:i,body:a,headers:r}}throwExceptionOnError(e){if(!("success"in e))return;if(!0===e.success)return;if(!("code"in e&&"msg"in e))throw new r(this.id+": malformed response: "+this.json(e));const t=this.safeString(e,"code"),i=this.safeString(e,"msg"),s=this.id+" "+this.json(e);if("UNAUTH"===t){if("Invalid nonce"===i)throw new a(s);throw new n(s)}if("ERROR"===t){if(i.indexOf("The precision of amount")>=0)throw new o(s);if(i.indexOf("Min amount each order")>=0)throw new o(s);if(i.indexOf("Min price:")>=0)throw new o(s);if(i.indexOf("Max price:")>=0)throw new o(s);if(i.indexOf("The precision of price")>=0)throw new o(s)}else if("NO_BALANCE"===t&&i.indexOf("Insufficient balance")>=0)throw new d(s);throw new r(this.id+": unknown response: "+this.json(e))}handleErrors(e,t,i,s,r,a,o){void 0!==o?this.throwExceptionOnError(o):a&&"{"===a[0]&&this.throwExceptionOnError(JSON.parse(a))}}},928:function(e,t,i){"use strict";const s=i(797),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"kuna",name:"Kuna",countries:["UA"],rateLimit:1e3,version:"v2",has:{CORS:!1,fetchTickers:!0,fetchOpenOrders:!0,fetchMyTrades:!0,withdraw:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/31697638-912824fa-b3c1-11e7-8c36-cf9606eb94ac.jpg",api:"https://kuna.io",www:"https://kuna.io",doc:"https://kuna.io/documents/api",fees:"https://kuna.io/documents/api"},fees:{trading:{taker:.0025,maker:.0025},funding:{withdraw:{UAH:"1%",BTC:.001,BCH:.001,ETH:.01,WAVES:.01,GOL:0,GBG:0},deposit:{}}}})}async fetchMarkets(){let e=[{id:"btcuah",symbol:"BTC/UAH",base:"BTC",quote:"UAH",baseId:"btc",quoteId:"uah",precision:{amount:6,price:0},lot:1e-6,limits:{amount:{min:1e-6,max:void 0},price:{min:1,max:void 0},cost:{min:1e-6,max:void 0}}},{id:"ethuah",symbol:"ETH/UAH",base:"ETH",quote:"UAH",baseId:"eth",quoteId:"uah",precision:{amount:6,price:0},lot:1e-6,limits:{amount:{min:1e-6,max:void 0},price:{min:1,max:void 0},cost:{min:1e-6,max:void 0}}},{id:"gbguah",symbol:"GBG/UAH",base:"GBG",quote:"UAH",baseId:"gbg",quoteId:"uah",precision:{amount:3,price:2},lot:.001,limits:{amount:{min:1e-6,max:void 0},price:{min:.01,max:void 0},cost:{min:1e-6,max:void 0}}},{id:"kunbtc",symbol:"KUN/BTC",base:"KUN",quote:"BTC",baseId:"kun",quoteId:"btc",precision:{amount:6,price:6},lot:1e-6,limits:{amount:{min:1e-6,max:void 0},price:{min:1e-6,max:void 0},cost:{min:1e-6,max:void 0}}},{id:"bchbtc",symbol:"BCH/BTC",base:"BCH",quote:"BTC",baseId:"bch",quoteId:"btc",precision:{amount:6,price:6},lot:1e-6,limits:{amount:{min:1e-6,max:void 0},price:{min:1e-6,max:void 0},cost:{min:1e-6,max:void 0}}},{id:"bchuah",symbol:"BCH/UAH",base:"BCH",quote:"UAH",baseId:"bch",quoteId:"uah",precision:{amount:6,price:0},lot:1e-6,limits:{amount:{min:1e-6,max:void 0},price:{min:1,max:void 0},cost:{min:1e-6,max:void 0}}},{id:"wavesuah",symbol:"WAVES/UAH",base:"WAVES",quote:"UAH",baseId:"waves",quoteId:"uah",precision:{amount:6,price:0},lot:1e-6,limits:{amount:{min:1e-6,max:void 0},price:{min:1,max:void 0},cost:{min:1e-6,max:void 0}}},{id:"arnbtc",symbol:"ARN/BTC",base:"ARN",quote:"BTC",baseId:"arn",quoteId:"btc"},{id:"b2bbtc",symbol:"B2B/BTC",base:"B2B",quote:"BTC",baseId:"b2b",quoteId:"btc"},{id:"evrbtc",symbol:"EVR/BTC",base:"EVR",quote:"BTC",baseId:"evr",quoteId:"btc"},{id:"golgbg",symbol:"GOL/GBG",base:"GOL",quote:"GBG",baseId:"gol",quoteId:"gbg"},{id:"rbtc",symbol:"R/BTC",base:"R",quote:"BTC",baseId:"r",quoteId:"btc"},{id:"rmcbtc",symbol:"RMC/BTC",base:"RMC",quote:"BTC",baseId:"rmc",quoteId:"btc"}],t=[],i=await this.publicGetTickers();for(let a=0;a<e.length;a++){let s=e[a];s.id in i&&t.push(s)}let s=this.indexBy(t,"id"),r=Object.keys(i);for(let a=0;a<r.length;a++){let e=r[a];if(!(e in s)){let i=e.replace("btc","");if((i=(i=i.replace("uah","")).replace("gbg","")).length>0){let s=i.length-0,r=e.slice(s),a=i.toUpperCase(),o=r.toUpperCase(),n=(a=this.commonCurrencyCode(a))+"/"+(o=this.commonCurrencyCode(o));t.push({id:e,symbol:n,base:a,quote:o,baseId:i,quoteId:r})}}}return t}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=await this.publicGetOrderBook(this.extend({market:s.id},i));return this.parseOrderBook(r,void 0,"bids","asks","price","remaining_volume")}async fetchL3OrderBook(e,t,i={}){return this.fetchOrderBook(e,t,i)}async fetchOpenOrders(e,t,i,s={}){if(void 0===e)throw new r(this.id+" fetchOpenOrders requires a symbol argument");await this.loadMarkets();let a=this.market(e),o=await this.privateGetOrders(this.extend({market:a.id},s));return this.parseOrders(o,a,t,i)}parseTrade(e,t){let i=this.parse8601(e.created_at),s=void 0;t&&(s=t.symbol);let r=this.safeString(e,"side");r={ask:"sell",bid:"buy"}[r];let a=this.safeFloat(e,"funds"),o=this.safeString(e,"order_id");return{id:e.id.toString(),timestamp:i,datetime:this.iso8601(i),symbol:s,type:void 0,side:r,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"volume"),cost:a,order:o,info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTrades(this.extend({market:r.id},s));return this.parseTrades(a,r,t,i)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new r(this.id+" fetchOpenOrders requires a symbol argument");await this.loadMarkets();let a=this.market(e),o=await this.privateGetTradesMy({market:a.id});return this.parseTrades(o,a,t,i)}}},929:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"lakebtc",name:"LakeBTC",countries:["US"],version:"api_v2",has:{CORS:!0,createMarketOrder:!1,fetchTickers:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/28074120-72b7c38a-6660-11e7-92d9-d9027502281d.jpg",api:"https://api.lakebtc.com",www:"https://www.lakebtc.com",doc:["https://www.lakebtc.com/s/api_v2","https://www.lakebtc.com/s/api"]},api:{public:{get:["bcorderbook","bctrades","ticker"]},private:{post:["buyOrder","cancelOrders","getAccountInfo","getExternalAccounts","getOrders","getTrades","openOrders","sellOrder"]}},fees:{trading:{maker:.0015,taker:.002}}})}async fetchMarkets(){let e=await this.publicGetTicker(),t=[],i=Object.keys(e);for(let s=0;s<i.length;s++){let r=i[s],a=e[r],o=r.slice(0,3),n=r.slice(3,6),d=o.toUpperCase(),c=n.toUpperCase(),h=d+"/"+c;t.push({id:r,symbol:h,base:d,quote:c,baseId:o,quoteId:n,info:a})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostGetAccountInfo(),i=t.balance,s={info:t},r=Object.keys(i);for(let a=0;a<r.length;a++){let e=r[a],t=e;if(e in this.currencies_by_id){t=this.currencies_by_id[e].code}let o=parseFloat(i[e]),n={free:o,used:0,total:o};s[t]=n}return this.parseBalance(s)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetBcorderbook(this.extend({symbol:this.marketId(e)},i));return this.parseOrderBook(s)}parseTicker(e,t){let i=this.milliseconds(),s=void 0;void 0!==t&&(s=t.symbol);let r=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"bid"),bidVolume:void 0,ask:this.safeFloat(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"volume"),quoteVolume:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTicker(t),s=Object.keys(i),r={};for(let a=0;a<s.length;a++){let e=s[a],t=i[e],o=void 0;e in this.markets_by_id&&(e=(o=this.markets_by_id[e]).symbol),r[e]=this.parseTicker(t,o)}return r}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTicker(t);return this.parseTicker(s[i.id],i)}parseTrade(e,t){let i=1e3*e.date;return{info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,id:e.tid.toString(),order:void 0,type:void 0,side:void 0,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"amount")}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetBctrades(this.extend({symbol:r.id},s));return this.parseTrades(a,r,t,i)}async createOrder(e,t,i,s,a,o={}){if(await this.loadMarkets(),"market"===t)throw new r(this.id+" allows limit orders only");let n="privatePost"+this.capitalize(i)+"Order",d={params:[a,s,this.market(e).id]},c=await this[n](this.extend(d,o));return{info:c,id:c.id.toString()}}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privatePostCancelOrder({params:[e]})}nonce(){return this.microseconds()}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.version;if("public"===t)o+="/"+e,Object.keys(s).length&&(o+="?"+this.urlencode(s));else{this.checkRequiredCredentials();let t=this.nonce(),o="";if("params"in s){o=s.params.join(",")}let n=this.urlencode({tonce:t,accesskey:this.apiKey,requestmethod:i.toLowerCase(),id:t,method:e,params:o});a=this.json({method:e,params:o,id:t});let d=this.hmac(this.encode(n),this.encode(this.secret),"sha1"),c=this.encode(this.apiKey+":"+d);r={"Json-Rpc-Tonce":t.toString(),Authorization:"Basic "+this.decode(this.stringToBase64(c)),"Content-Type":"application/json"}}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("error"in n)throw new r(this.id+" "+this.json(n));return n}}},930:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,DDoSProtection:a,AuthenticationError:o,InvalidOrder:n}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"lbank",name:"LBank",countries:["CN"],version:"v1",has:{fetchTickers:!0,fetchOHLCV:!0,fetchOrder:!0,fetchOrders:!0,fetchOpenOrders:!1,fetchClosedOrders:!0},timeframes:{"1m":"minute1","5m":"minute5","15m":"minute15","30m":"minute30","1h":"hour1","2h":"hour2","4h":"hour4","6h":"hour6","8h":"hour8","12h":"hour12","1d":"day1","1w":"week1"},urls:{logo:"https://user-images.githubusercontent.com/1294454/38063602-9605e28a-3302-11e8-81be-64b1e53c4cfb.jpg",api:"https://api.lbank.info",www:"https://www.lbank.info",doc:"https://github.com/LBank-exchange/lbank-official-api-docs",fees:"https://lbankinfo.zendesk.com/hc/zh-cn/articles/115002295114--%E8%B4%B9%E7%8E%87%E8%AF%B4%E6%98%8E"},api:{public:{get:["currencyPairs","ticker","depth","trades","kline","accuracy"]},private:{post:["user_info","create_order","cancel_order","orders_info","orders_info_history"]}},fees:{trading:{maker:.001,taker:.001},funding:{withdraw:{BTC:void 0,ZEC:.01,ETH:.01,ETC:.01,VEN:10,BCH:2e-4,SC:50,BTM:20,NAS:1,EOS:1,XWC:5,BTS:1,INK:10,BOT:3,YOYOW:15,TGC:10,NEO:0,CMT:20,SEER:2e3,FIL:void 0,BTG:void 0}}},commonCurrencies:{VET_ERC20:"VEN"}})}async fetchMarkets(){let e=await this.publicGetAccuracy(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.symbol,a=r.split("_"),o=void 0,n=void 0;a.length>2?(o=a[0]+"_"+a[1],n=a[2]):(o=a[0],n=a[1]);let d=this.commonCurrencyCode(o.toUpperCase()),c=this.commonCurrencyCode(n.toUpperCase()),h=d+"/"+c,l={amount:s.quantityAccuracy,price:s.priceAccuracy};t.push({id:r,symbol:h,base:d,quote:c,baseId:o,quoteId:n,active:!0,precision:l,limits:{amount:{min:Math.pow(10,-l.amount),max:void 0},price:{min:Math.pow(10,-l.price),max:Math.pow(10,l.price)},cost:{min:void 0,max:void 0}},info:r})}return t}parseTicker(e,t){let i=void 0;if(void 0===t){let t=this.safeString(e,"symbol");if(t in this.markets_by_id){i=this.marketsById[t].symbol}else{let e=t.split("_"),s=void 0,r=void 0;e.length>2?(s=e[0]+"_"+e[1],r=e[2]):(s=e[0],r=e[1]),i=this.commonCurrencyCode(s.toUpperCase())+"/"+this.commonCurrencyCode(r.toUpperCase())}}let s=this.safeInteger(e,"timestamp"),r=e;e=r.ticker;let a=this.safeFloat(e,"latest"),o=this.safeFloat(e,"change"),n=o/100,d=a/this.sum(1,n),c=a-d,h=this.sum(a,d)/2;return void 0!==t&&(i=t.symbol),{symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:c,percentage:o,average:h,baseVolume:this.safeFloat(e,"vol"),quoteVolume:this.safeFloat(e,"turnover"),info:r}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTicker(this.extend({symbol:i.id},t));return this.parseTicker(s,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTicker(this.extend({symbol:"all"},t)),s={};for(let r=0;r<i.length;r++){let e=this.parseTicker(i[r]);s[e.symbol]=e}return s}async fetchOrderBook(e,t=60,i={}){await this.loadMarkets();let s=await this.publicGetDepth(this.extend({symbol:this.marketId(e),size:Math.min(t,60)},i));return this.parseOrderBook(s)}parseTrade(e,t){let i=t.symbol,s=parseInt(e.date_ms),r=this.safeFloat(e,"price"),a=this.safeFloat(e,"amount"),o=this.costToPrecision(i,r*a);return{timestamp:s,datetime:this.iso8601(s),symbol:i,id:this.safeString(e,"tid"),order:void 0,type:void 0,side:e.type,price:r,amount:a,cost:parseFloat(o),fee:void 0,info:this.safeValue(e,"info",e)}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={symbol:r.id,size:100};void 0!==t&&(a.time=parseInt(t/1e3)),void 0!==i&&(a.size=i);let o=await this.publicGetTrades(this.extend(a,s));return this.parseTrades(o,r,t,i)}parseOHLCV(e,t,i="1m",s,r){return[1e3*e[0],e[1],e[2],e[3],e[4],e[5]]}async fetchOHLCV(e,t="5m",i,s=1e3,a={}){await this.loadMarkets();let o=this.market(e);if(void 0===i)throw new r(this.id+" fetchOHLCV requires a since argument");if(void 0===s)throw new r(this.id+" fetchOHLCV requires a limit argument");let n={symbol:o.id,type:this.timeframes[t],size:s,time:parseInt(i/1e3)},d=await this.publicGetKline(this.extend(n,a));return this.parseOHLCVs(d,o,t,i,s)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostUserInfo(e),i={info:t},s=Object.keys(this.extend(t.info.free,t.info.freeze));for(let r=0;r<s.length;r++){let e=s[r],a=e;e in this.currencies_by_id&&(a=this.currencies_by_id[e].code);let o={free:this.safeFloat(t.info.free,e,0),used:this.safeFloat(t.info.freeze,e,0),total:0};o.total=this.sum(o.free,o.used),i[a]=o}return this.parseBalance(i)}parseOrderStatus(e){return this.safeString({"-1":"cancelled",0:"open",1:"open",2:"closed",4:"closed"},e)}parseOrder(e,t){let i=void 0,s=this.safeValue(this.marketsById,e.symbol);void 0!==s?i=s.symbol:void 0!==t&&(i=t.symbol);let r=this.safeInteger(e,"create_time"),a=this.safeFloat(e,"price"),o=this.safeFloat(e,"amount",0),n=this.safeFloat(e,"deal_amount",0),d=this.safeFloat(e,"avg_price"),c=void 0;void 0!==d&&(c=n*d);let h=this.parseOrderStatus(this.safeString(e,"status"));return{id:this.safeString(e,"order_id"),datetime:this.iso8601(r),timestamp:r,lastTradeTimestamp:void 0,status:h,symbol:i,type:this.safeString(e,"order_type"),side:e.type,price:a,cost:c,amount:o,filled:n,remaining:o-n,trades:void 0,fee:void 0,info:this.safeValue(e,"info",e)}}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n={symbol:o.id,type:i,amount:s};"market"===t?n.type+="_market":n.price=r;let d=await this.privatePostCreateOrder(this.extend(n,a));(n=this.omit(n,"type")).order_id=d.order_id,n.type=i,n.order_type=t,n.create_time=this.milliseconds(),n.info=d;let c=(n=this.parseOrder(n,o)).id;return this.orders[c]=n,n}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t);return await this.privatePostCancelOrder(this.extend({symbol:s.id,order_id:e},i))}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=this.market(t),r=await this.privatePostOrdersInfo(this.extend({symbol:s.id,order_id:e},i)),a=this.parseOrders(r.orders,s);return 1===a.length?a[0]:a}async fetchOrders(e,t,i,s={}){await this.loadMarkets(),void 0===i&&(i=100);let r=this.market(e),a=await this.privatePostOrdersInfoHistory(this.extend({symbol:r.id,current_page:1,page_length:i},s));return this.parseOrders(a.orders,void 0,t,i)}async fetchClosedOrders(e,t,i,s={}){let r=await this.fetchOrders(e,t,i,s);return this.filterBy(r,"status","closed")+this.filterBy(r,"status","cancelled")}sign(e,t="public",i="GET",s={},r,a){let o=this.omit(s,this.extractParams(e)),n=this.urls.api+"/"+this.version+"/"+this.implodeParams(e,s);if(n+=".do","public"===t)Object.keys(o).length&&(n+="?"+this.urlencode(o));else{this.checkRequiredCredentials();let e=this.keysort(this.extend({api_key:this.apiKey},s)),t=this.rawencode(e)+"&secret_key="+this.secret;e.sign=this.hash(this.encode(t)).toUpperCase(),a=this.urlencode(e),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:n,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},d,c){let h=await this.fetch2(e,t,i,s,d,c);if("false"===this.safeString(h,"result")){let e=this.safeString(h,"error_code"),t=this.safeString({10000:"Internal error",10001:"The required parameters can not be empty",10002:"verification failed",10003:"Illegal parameters",10004:"User requests are too frequent",10005:"Key does not exist",10006:"user does not exist",10007:"Invalid signature",10008:"This currency pair is not supported",10009:"Limit orders can not be missing orders and the number of orders",10010:"Order price or order quantity must be greater than 0",10011:"Market orders can not be missing the amount of the order",10012:"market sell orders can not be missing orders",10013:"is less than the minimum trading position 0.001",10014:"Account number is not enough",10015:"The order type is wrong",10016:"Account balance is not enough",10017:"Abnormal server",10018:"order inquiry can not be more than 50 less than one",10019:"withdrawal orders can not be more than 3 less than one",10020:"less than the minimum amount of the transaction limit of 0.001"},e,this.json(h));throw new(this.safeValue({10002:o,10004:a,10005:o,10006:o,10007:o,10009:n,10010:n,10011:n,10012:n,10013:n,10014:n,10015:n,10016:n},e,r))(t)}return h}}},931:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,AuthenticationError:a,NotSupported:o,InvalidOrder:n,OrderNotFound:d,ExchangeNotAvailable:c,DDoSProtection:h,InsufficientFunds:l}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"livecoin",name:"LiveCoin",countries:["US","UK","RU"],rateLimit:1e3,userAgent:this.userAgents.chrome,has:{fetchDepositAddress:!0,CORS:!1,fetchTickers:!0,fetchCurrencies:!0,fetchTradingFees:!0,fetchOrders:!0,fetchOrder:!0,fetchOpenOrders:!0,fetchClosedOrders:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27980768-f22fc424-638a-11e7-89c9-6010a54ff9be.jpg",api:"https://api.livecoin.net",www:"https://www.livecoin.net",doc:"https://www.livecoin.net/api?lang=en"},api:{public:{get:["exchange/all/order_book","exchange/last_trades","exchange/maxbid_minask","exchange/order_book","exchange/restrictions","exchange/ticker","info/coinInfo"]},private:{get:["exchange/client_orders","exchange/order","exchange/trades","exchange/commission","exchange/commissionCommonInfo","payment/balances","payment/balance","payment/get/address","payment/history/size","payment/history/transactions"],post:["exchange/buylimit","exchange/buymarket","exchange/cancellimit","exchange/selllimit","exchange/sellmarket","payment/out/capitalist","payment/out/card","payment/out/coin","payment/out/okpay","payment/out/payeer","payment/out/perfectmoney","payment/voucher/amount","payment/voucher/make","payment/voucher/redeem"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:.0018,taker:.0018}},commonCurrencies:{BTCH:"Bithash",CPC:"CapriCoin",CRC:"CryCash",EDR:"E-Dinar Coin",eETT:"EETT",FirstBlood:"1ST",FORTYTWO:"42",ORE:"Orectic",RUR:"RUB",SCT:"SpaceCoin",TPI:"ThaneCoin",wETT:"WETT",XBT:"Bricktox"},exceptions:{1:r,10:a,100:r,101:a,102:a,103:n,104:n,105:n,11:a,12:a,2:a,20:a,30:a,31:o,32:r,429:h,503:c}})}async fetchMarkets(){let e=await this.publicGetExchangeTicker(),t=await this.publicGetExchangeRestrictions(),i=this.indexBy(t.restrictions,"currencyPair"),s=[];for(let r=0;r<e.length;r++){let t=e[r],a=t.symbol,o=a,[n,d]=o.split("/"),c=this.commonCurrencyCode(n),h=this.commonCurrencyCode(d),l=this.safeValue(i,o),u={price:5,amount:8,cost:8},p={amount:{min:Math.pow(10,-u.amount),max:Math.pow(10,u.amount)}};l&&(u.price=this.safeInteger(l,"priceScale",5),p.amount.min=this.safeFloat(l,"minLimitQuantity",p.amount.min)),p.price={min:Math.pow(10,-u.price),max:Math.pow(10,u.price)},s.push({id:a,symbol:o,base:c,quote:h,baseId:n,quoteId:d,active:!0,precision:u,limits:p,info:t})}return s}async fetchCurrencies(e={}){let t=(await this.publicGetInfoCoinInfo(e)).info,i={};for(let s=0;s<t.length;s++){let e=t[s],r=e.symbol,a=this.commonCurrencyCode(r),o=8,n="normal"===e.walletStatus;i[a]={id:r,code:a,info:e,name:e.name,active:n,fee:e.withdrawFee,precision:o,limits:{amount:{min:e.minOrderAmount,max:Math.pow(10,o)},price:{min:Math.pow(10,-o),max:Math.pow(10,o)},cost:{min:e.minOrderAmount,max:void 0},withdraw:{min:e.minWithdrawAmount,max:Math.pow(10,o)},deposit:{min:e.minDepositAmount,max:void 0}}}}return i=this.appendFiatCurrencies(i)}appendFiatCurrencies(e){let t={info:void 0,active:!0,fee:void 0,precision:8,limits:{withdraw:{min:void 0,max:void 0},deposit:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},cost:{min:void 0,max:void 0},price:{min:Math.pow(10,-8),max:Math.pow(10,8)}}},i=[{id:"USD",code:"USD",name:"US Dollar"},{id:"EUR",code:"EUR",name:"Euro"}];i.push({id:"RUR",code:this.commonCurrencyCode("RUR"),name:"Russian ruble"});for(let s=0;s<i.length;s++){let r=i[s];e[r.code]=this.extend(t,r)}return e}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetPaymentBalances(),i={info:t};for(let s=0;s<t.length;s++){let e=t[s],r=e.currency,a=void 0;a=r in i?i[r]:this.account(),"total"===e.type&&(a.total=parseFloat(e.value)),"available"===e.type&&(a.free=parseFloat(e.value)),"trade"===e.type&&(a.used=parseFloat(e.value)),i[r]=a}return this.parseBalance(i)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privateGetExchangeCommissionCommonInfo(e);const i=this.safeFloat(t,"commission");return{info:t,maker:i,taker:i}}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={currencyPair:this.marketId(e),groupByPrice:"false"};void 0!==t&&(s.depth=t);let r=await this.publicGetExchangeOrderBook(this.extend(s,i)),a=r.timestamp;return this.parseOrderBook(r,a)}parseTicker(e,t){let i=this.milliseconds(),s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"vwap"),a=this.safeFloat(e,"volume"),o=a*r,n=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"best_bid"),bidVolume:void 0,ask:this.safeFloat(e,"best_ask"),askVolume:void 0,vwap:this.safeFloat(e,"vwap"),open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:o,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetExchangeTicker(t),s=this.indexBy(i,"symbol"),r=Object.keys(s),a={};for(let o=0;o<r.length;o++){let e=r[o],t=this.markets_by_id[e],i=t.symbol,n=s[e];a[i]=this.parseTicker(n,t)}return a}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetExchangeTicker(this.extend({currencyPair:i.id},t));return this.parseTicker(s,i)}parseTrade(e,t){let i=1e3*e.time;return{info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,id:e.id.toString(),order:void 0,type:void 0,side:e.type.toLowerCase(),price:e.price,amount:e.quantity}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetExchangeLastTrades(this.extend({currencyPair:r.id},s));return this.parseTrades(a,r,t,i)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s={orderId:e},r=await this.privateGetExchangeOrder(this.extend(s,i));return this.parseOrder(r)}parseOrderStatus(e){const t={OPEN:"open",PARTIALLY_FILLED:"open",EXECUTED:"closed",CANCELLED:"canceled",PARTIALLY_FILLED_AND_CANCELLED:"canceled"};return e in t?t[e]:e}parseOrder(e,t){let i=void 0,s=void 0;"lastModificationTime"in e&&void 0!==(i=this.safeString(e,"lastModificationTime"))&&(i=i.indexOf("T")>=0?this.parse8601(i):this.safeInteger(e,"lastModificationTime")),i&&(s=this.iso8601(i));let r=this.safeString(e,"status");r=this.safeString(e,"orderStatus",r),r=this.parseOrderStatus(r);let a=void 0;if(void 0===t){let i=this.safeString(e,"currencyPair");(i=this.safeString(e,"symbol",i))in this.markets_by_id&&(t=this.markets_by_id[i])}let o=void 0,n=void 0;if("type"in e){let t=e.type.toLowerCase().split("_");o=t[0],n=t[1]}let d=this.safeFloat(e,"price"),c=this.safeFloat(e,"remainingQuantity");c=this.safeFloat(e,"remaining_quantity",c);let h=this.safeFloat(e,"quantity",c),l=void 0;void 0!==c&&(l=h-c);let u=void 0;void 0!==l&&void 0!==d&&(u=l*d);const p=this.safeFloat(e,"commission_rate");let m=void 0;void 0!==u&&void 0!==p&&(m=u*p);let f=void 0;return void 0!==t&&(a=t.symbol,f=t.quote),{info:e,id:e.id,timestamp:i,datetime:s,lastTradeTimestamp:void 0,status:r,symbol:a,type:o,side:n,price:d,amount:h,cost:u,filled:l,remaining:c,trades:void 0,fee:{cost:m,currency:f,rate:p}}}async fetchOrders(e,t,i,s={}){await this.loadMarkets();let r=void 0,a={};void 0!==e&&(r=this.market(e),a.currencyPair=r.id),void 0!==t&&(a.issuedFrom=parseInt(t)),void 0!==i&&(a.endRow=i-1);let o=await this.privateGetExchangeClientOrders(this.extend(a,s)),n=[],d=[];o.data&&(d=o.data);for(let c=0;c<d.length;c++){let e=d[c];n.push(this.parseOrder(e,r))}return n}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({openClosed:"OPEN"},s))}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({openClosed:"CLOSED"},s))}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o="privatePostExchange"+this.capitalize(i)+t,n=this.market(e),d={quantity:this.amountToPrecision(e,s),currencyPair:n.id};"limit"===t&&(d.price=this.priceToPrecision(e,r));let c=await this[o](this.extend(d,a));const h={info:c,id:c.orderId.toString()};return this.safeValue(c,"success")&&(h.status="open"),h}async cancelOrder(e,t,i={}){if(void 0===t)throw new r(this.id+" cancelOrder requires a symbol argument");await this.loadMarkets();let s=this.market(t).id,a=await this.privatePostExchangeCancellimit(this.extend({orderId:e,currencyPair:s},i)),o=this.safeString(a,"message",this.json(a));if("success"in a){if(!a.success)throw new n(o);if("cancelled"in a){if(a.cancelled)return{status:"canceled",info:a};throw new d(o)}}throw new r(this.id+" cancelOrder() failed: "+this.json(a))}async withdraw(e,t,i,s,r={}){await this.loadMarkets(),this.checkAddress(i);let a=i;void 0!==s&&(a+="::"+s);let o={amount:this.truncate(t,this.currencies[e].precision),currency:this.commonCurrencyCode(e),wallet:a},n=await this.privatePostPaymentOutCoin(this.extend(o,r)),d=this.safeInteger(n,"id");if(void 0===d)throw new l(this.id+" insufficient funds to cover requested withdrawal amount post fees "+this.json(n));return{info:n,id:d}}async fetchDepositAddress(e,t={}){let i={currency:e},s=await this.privateGetPaymentGetAddress(this.extend(i,t)),r=this.safeString(s,"wallet"),a=void 0;if(r.indexOf(":")>=0){let e=r.split(":");r=e[0],a=e[2]}return this.checkAddress(r),{currency:e,address:r,tag:a,info:s}}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+e,n=this.urlencode(this.keysort(s));if("GET"===i&&Object.keys(s).length&&(o+="?"+n),"private"===t){this.checkRequiredCredentials(),"POST"===i&&(a=n);let e=this.hmac(this.encode(n),this.encode(this.secret),"sha256");r={"Api-Key":this.apiKey,Sign:e.toUpperCase(),"Content-Type":"application/x-www-form-urlencoded"}}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if("string"==typeof o&&"{"===o[0]){let t=JSON.parse(o);if(e>=300){let e=this.safeString(t,"errorCode");if(e in this.exceptions){throw new(0,this.exceptions[e])(this.id+" "+o)}throw new r(this.id+" "+o)}if(!this.safeValue(t,"success",!0)){const e=this.safeString(t,"message");if(void 0!==e&&e.indexOf("Cannot find order")>=0)throw new d(this.id+" "+o);const i=this.safeString(t,"exception");if(void 0!==i&&i.indexOf("Minimal amount is")>=0)throw new n(this.id+" "+o);throw new r(this.id+" "+o)}}}}},932:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"luno",name:"luno",countries:["GB","SG","ZA"],rateLimit:1e4,version:"1",has:{CORS:!1,fetchTickers:!0,fetchOrder:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766607-8c1a69d8-5ede-11e7-930c-540b5eb9be24.jpg",api:"https://api.mybitx.com/api",www:"https://www.luno.com",doc:["https://www.luno.com/en/api","https://npmjs.org/package/bitx","https://github.com/bausmeier/node-bitx"]},api:{public:{get:["orderbook","ticker","tickers","trades"]},private:{get:["accounts/{id}/pending","accounts/{id}/transactions","balance","fee_info","funding_address","listorders","listtrades","orders/{id}","quotes/{id}","withdrawals","withdrawals/{id}"],post:["accounts","postorder","marketorder","stoporder","funding_address","withdrawals","send","quotes","oauth2/grant"],put:["quotes/{id}"],delete:["quotes/{id}","withdrawals/{id}"]}}})}async fetchMarkets(){let e=await this.publicGetTickers(),t=[];for(let i=0;i<e.tickers.length;i++){let s=e.tickers[i],r=s.pair,a=r.slice(0,3),o=r.slice(3,6),n=(a=this.commonCurrencyCode(a))+"/"+(o=this.commonCurrencyCode(o));t.push({id:r,symbol:n,base:a,quote:o,info:s})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetBalance(),i=t.balance,s={info:t};for(let r=0;r<i.length;r++){let e=i[r],t=this.commonCurrencyCode(e.asset),a=parseFloat(e.reserved),o=parseFloat(e.unconfirmed),n={free:0,used:this.sum(a,o),total:parseFloat(e.balance)};n.free=n.total-n.used,s[t]=n}return this.parseBalance(s)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetOrderbook(this.extend({pair:this.marketId(e)},i)),r=s.timestamp;return this.parseOrderBook(s,r,"bids","asks","price","volume")}parseOrder(e,t){let i=e.creation_timestamp,s="PENDING"===e.state?"open":"closed",r="ASK"===e.type?"sell":"buy",a=void 0;t&&(a=t.symbol);let o=this.safeFloat(e,"limit_price"),n=this.safeFloat(e,"limit_volume"),d=this.safeFloat(e,"fee_counter"),c=this.safeFloat(e,"fee_base"),h={currency:void 0};return d?(h.side="quote",h.cost=d):(h.side="base",h.cost=c),{id:e.order_id,datetime:this.iso8601(i),timestamp:i,lastTradeTimestamp:void 0,status:s,symbol:a,type:void 0,side:r,price:o,amount:n,filled:void 0,remaining:void 0,trades:void 0,fee:h,info:e}}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrdersId(this.extend({id:e},i));return this.parseOrder(s)}parseTicker(e,t){let i=e.timestamp,s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"last_trade");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:void 0,low:void 0,bid:this.safeFloat(e,"bid"),bidVolume:void 0,ask:this.safeFloat(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"rolling_24_hour_volume"),quoteVolume:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers(t),s=this.indexBy(i.tickers,"pair"),r=Object.keys(s),a={};for(let o=0;o<r.length;o++){let e=r[o],t=this.markets_by_id[e],i=t.symbol,n=s[e];a[i]=this.parseTicker(n,t)}return a}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTicker(this.extend({pair:i.id},t));return this.parseTicker(s,i)}parseTrade(e,t){let i=e.is_buy?"buy":"sell";return{info:e,id:void 0,order:void 0,timestamp:e.timestamp,datetime:this.iso8601(e.timestamp),symbol:t.symbol,type:void 0,side:i,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"volume")}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pair:r.id};void 0!==t&&(a.since=t);let o=await this.publicGetTrades(this.extend(a,s));return this.parseTrades(o.trades,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o="privatePost",n={pair:this.marketId(e)};"market"===t?(o+="Marketorder",n.type=i.toUpperCase(),"buy"===i?n.counter_volume=s:n.base_volume=s):(o+="Postorder",n.volume=s,n.price=r,n.type="buy"===i?"BID":"ASK");let d=await this[o](this.extend(n,a));return{info:d,id:d.order_id}}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privatePostStoporder({order_id:e})}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.version+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));if(Object.keys(n).length&&(o+="?"+this.urlencode(n)),"private"===t){this.checkRequiredCredentials();let e=this.encode(this.apiKey+":"+this.secret);e=this.stringToBase64(e),r={Authorization:"Basic "+this.decode(e)}}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("error"in n)throw new r(this.id+" "+this.json(n));return n}}},933:function(e,t,i){"use strict";const s=i(788);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"lykke",name:"Lykke",countries:["CH"],version:"v1",rateLimit:200,has:{CORS:!1,fetchOHLCV:!1,fetchTrades:!1,fetchOpenOrders:!0,fetchClosedOrders:!0,fetchOrder:!0,fetchOrders:!0},requiredCredentials:{apiKey:!0,secret:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/34487620-3139a7b0-efe6-11e7-90f5-e520cef74451.jpg",api:{mobile:"https://public-api.lykke.com/api",public:"https://hft-api.lykke.com/api",private:"https://hft-api.lykke.com/api",test:{mobile:"https://public-api.lykke.com/api",public:"https://hft-service-dev.lykkex.net/api",private:"https://hft-service-dev.lykkex.net/api"}},www:"https://www.lykke.com",doc:["https://hft-api.lykke.com/swagger/ui/","https://www.lykke.com/lykke_api"],fees:"https://www.lykke.com/trading-conditions"},api:{mobile:{get:["Market/{market}"]},public:{get:["AssetPairs","AssetPairs/{id}","IsAlive","OrderBooks","OrderBooks/{AssetPairId}"]},private:{get:["Orders","Orders/{id}","Wallets"],post:["Orders/limit","Orders/market","Orders/{id}/Cancel"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:0,taker:0},funding:{tierBased:!1,percentage:!1,withdraw:{BTC:.001},deposit:{BTC:0}}}})}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetWallets(),i={info:t};for(let s=0;s<t.length;s++){let e=t[s],r=e.AssetId,a=e.Balance,o=e.Reserved,n=a-o;i[r]={free:n,used:o,total:a}}return this.parseBalance(i)}async cancelOrder(e,t,i={}){return await this.privatePostOrdersIdCancel({id:e})}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n={AssetPairId:o.id,OrderAction:this.capitalize(i),Volume:s};"market"===t?n.Asset="buy"===i?o.base:o.quote:"limit"===t&&(n.Price=r);let d="privatePostOrders"+this.capitalize(t);return{id:void 0,info:await this[d](this.extend(n,a))}}async fetchMarkets(){let e=await this.publicGetAssetPairs(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.Id,a=s.BaseAssetId,o=s.QuotingAssetId;a=this.commonCurrencyCode(a),o=this.commonCurrencyCode(o);let n=s.Name,d={amount:s.Accuracy,price:s.InvertedAccuracy};t.push({id:r,symbol:n,base:a,quote:o,active:!0,info:s,lot:Math.pow(10,-d.amount),precision:d,limits:{amount:{min:Math.pow(10,-d.amount),max:Math.pow(10,d.amount)},price:{min:Math.pow(10,-d.price),max:Math.pow(10,d.price)}}})}return t}parseTicker(e,t){let i=this.milliseconds(),s=void 0;t&&(s=t.symbol);let r=parseFloat(e.lastPrice);return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:void 0,low:void 0,bid:parseFloat(e.bid),bidVolume:void 0,ask:parseFloat(e.ask),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:parseFloat(e.volume24H),info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.mobileGetMarketMarket(this.extend({market:i.id},t));return this.parseTicker(s,i)}parseOrderStatus(e){return"Pending"===e?"open":"InOrderBook"===e?"open":"Processing"===e?"open":"Matched"===e?"closed":"Cancelled"===e?"canceled":"NotEnoughFunds"===e?"NotEnoughFunds":"NoLiquidity"===e?"NoLiquidity":"UnknownAsset"===e?"UnknownAsset":"LeadToNegativeSpread"===e?"LeadToNegativeSpread":e}parseOrder(e,t){let i=this.parseOrderStatus(e.Status),s=void 0;void 0===t&&"AssetPairId"in e&&e.AssetPairId in this.markets_by_id&&(t=this.markets_by_id[e.AssetPairId]),t&&(s=t.symbol);let r=void 0;"LastMatchTime"in e&&e.LastMatchTime?r=this.parse8601(e.LastMatchTime):"Registered"in e&&e.Registered?r=this.parse8601(e.Registered):"CreatedAt"in e&&e.CreatedAt&&(r=this.parse8601(e.CreatedAt));let a=this.safeFloat(e,"Price"),o=this.safeFloat(e,"Volume"),n=this.safeFloat(e,"RemainingVolume"),d=o-n,c=d*a;return{info:e,id:e.Id,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,symbol:s,type:void 0,side:void 0,price:a,cost:c,average:void 0,amount:o,filled:d,remaining:n,status:i,fee:void 0}}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetOrdersId(this.extend({id:e},i));return this.parseOrder(s)}async fetchOrders(e,t,i,s={}){await this.loadMarkets();let r=await this.privateGetOrders();return this.parseOrders(r,void 0,t,i)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=await this.privateGetOrders(this.extend({status:"InOrderBook"},s));return this.parseOrders(r,void 0,t,i)}async fetchClosedOrders(e,t,i,s={}){await this.loadMarkets();let r=await this.privateGetOrders(this.extend({status:"Matched"},s));return this.parseOrders(r,void 0,t,i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetOrderBooksAssetPairId(this.extend({AssetPairId:this.marketId(e)},i)),r={timestamp:void 0,bids:[],asks:[]},a=void 0;for(let o=0;o<s.length;o++){let e=s[o];e.IsBuy?r.bids=this.arrayConcat(r.bids,e.Prices):r.asks=this.arrayConcat(r.asks,e.Prices);let t=this.parse8601(e.Timestamp);a=void 0===a?t:Math.max(a,t)}return this.parseOrderBook(r,a,"bids","asks","Price","Volume")}parseBidAsk(e,t=0,i=1){let s=parseFloat(e[t]),r=parseFloat(e[i]);return r<0&&(r=-r),[s,r]}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t]+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));return"public"===t?Object.keys(n).length&&(o+="?"+this.urlencode(n)):"private"===t&&("GET"===i&&Object.keys(n).length&&(o+="?"+this.urlencode(n)),this.checkRequiredCredentials(),r={"api-key":this.apiKey,Accept:"application/json","Content-Type":"application/json"},"POST"===i&&Object.keys(s).length&&(a=this.json(s))),{url:o,method:i,body:a,headers:r}}}},934:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"mercado",name:"Mercado Bitcoin",countries:["BR"],rateLimit:1e3,version:"v3",has:{CORS:!0,createMarketOrder:!1,fetchOrder:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27837060-e7c58714-60ea-11e7-9192-f05e86adb83f.jpg",api:{public:"https://www.mercadobitcoin.net/api",private:"https://www.mercadobitcoin.net/tapi"},www:"https://www.mercadobitcoin.com.br",doc:["https://www.mercadobitcoin.com.br/api-doc","https://www.mercadobitcoin.com.br/trade-api"]},api:{public:{get:["{coin}/orderbook/","{coin}/ticker/","{coin}/trades/","{coin}/trades/{from}/","{coin}/trades/{from}/{to}","{coin}/day-summary/{year}/{month}/{day}/"]},private:{post:["cancel_order","get_account_info","get_order","get_withdrawal","list_system_messages","list_orders","list_orderbook","place_buy_order","place_sell_order","withdraw_coin"]}},markets:{"BTC/BRL":{id:"BRLBTC",symbol:"BTC/BRL",base:"BTC",quote:"BRL",suffix:"Bitcoin"},"LTC/BRL":{id:"BRLLTC",symbol:"LTC/BRL",base:"LTC",quote:"BRL",suffix:"Litecoin"},"BCH/BRL":{id:"BRLBCH",symbol:"BCH/BRL",base:"BCH",quote:"BRL",suffix:"BCash"}},fees:{trading:{maker:.003,taker:.7/100}}})}async fetchOrderBook(e,t,i={}){let s=this.market(e),r=await this.publicGetCoinOrderbook(this.extend({coin:s.base},i));return this.parseOrderBook(r)}async fetchTicker(e,t={}){let i=this.market(e),s=(await this.publicGetCoinTicker(this.extend({coin:i.base},t))).ticker,r=1e3*parseInt(s.date),a=this.safeFloat(s,"last");return{symbol:e,timestamp:r,datetime:this.iso8601(r),high:this.safeFloat(s,"high"),low:this.safeFloat(s,"low"),bid:this.safeFloat(s,"buy"),bidVolume:void 0,ask:this.safeFloat(s,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(s,"vol"),quoteVolume:void 0,info:s}}parseTrade(e,t){let i=1e3*e.date;return{info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,id:e.tid.toString(),order:void 0,type:void 0,side:e.type,price:e.price,amount:e.amount}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a="publicGetCoinTrades",o={coin:r.base};void 0!==t&&(a+="From",o.from=parseInt(t/1e3)),void 0!==this.safeInteger(s,"to")&&(a+="To");let n=await this[a](this.extend(o,s));return this.parseTrades(n,r,t,i)}async fetchBalance(e={}){let t=await this.privatePostGetAccountInfo(),i=t.response_data.balance,s={info:t},r=Object.keys(this.currencies);for(let a=0;a<r.length;a++){let e=r[a],t=e.toLowerCase(),o=this.account();t in i&&(o.free=parseFloat(i[t].available),o.total=parseFloat(i[t].total),o.used=o.total-o.free),s[e]=o}return this.parseBalance(s)}async createOrder(e,t,i,s,a,o={}){if("market"===t)throw new r(this.id+" allows limit orders only");let n="privatePostPlace"+this.capitalize(i)+"Order",d={coin_pair:this.marketId(e),quantity:s,limit_price:a},c=await this[n](this.extend(d,o));return{info:c,id:c.response_data.order.order_id.toString()}}async cancelOrder(e,t,i={}){if(void 0===t)throw new r(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let s=this.market(t);return await this.privatePostCancelOrder(this.extend({coin_pair:s.id,order_id:e},i))}parseOrder(e,t){let i=void 0;"order_type"in e&&(i=1===e.order_type?"buy":"sell");let s=e.status,r=void 0;void 0===t&&"coin_pair"in e&&e.coin_pair in this.markets_by_id&&(t=this.markets_by_id[e.coin_pair]),t&&(r=t.symbol);let a=void 0;"created_timestamp"in e&&(a=1e3*parseInt(e.created_timestamp)),"updated_timestamp"in e&&(a=1e3*parseInt(e.updated_timestamp));let o={cost:this.safeFloat(e,"fee"),currency:t.quote},n=this.safeFloat(e,"limit_price"),d=this.safeFloat(e,"executed_price_avg"),c=this.safeFloat(e,"quantity"),h=this.safeFloat(e,"executed_quantity"),l=c-h,u=c*d;return{info:e,id:e.order_id.toString(),timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,symbol:r,type:"limit",side:i,price:n,cost:u,average:d,amount:c,filled:h,remaining:l,status:s,fee:o}}async fetchOrder(e,t,i={}){if(void 0===t)throw new r(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();let s=this.market(t),a=void 0;return a=await this.privatePostGetOrder(this.extend({coin_pair:s.id,order_id:parseInt(e)},i)),this.parseOrder(a.response_data.order)}async withdraw(e,t,i,s,a={}){this.checkAddress(i),await this.loadMarkets();let o={coin:e,quantity:t.toFixed(10),address:i};if("BRL"===e){if(!("account_ref"in a))throw new r(this.id+" requires account_ref parameter to withdraw "+e)}else if("LTC"!==e){if(!("tx_fee"in a))throw new r(this.id+" requires tx_fee parameter to withdraw "+e)}let n=await this.privatePostWithdrawCoin(this.extend(o,a));return{info:n,id:n.response_data.withdrawal.id}}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t]+"/",n=this.omit(s,this.extractParams(e));if("public"===t)o+=this.implodeParams(e,s),Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials(),o+=this.version+"/";let t=this.nonce();a=this.urlencode(this.extend({tapi_method:e,tapi_nonce:t},s));let i="/tapi/"+this.version+"/?"+a;r={"Content-Type":"application/x-www-form-urlencoded","TAPI-ID":this.apiKey,"TAPI-MAC":this.hmac(this.encode(i),this.encode(this.secret),"sha512")}}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("error_message"in n)throw new r(this.id+" "+this.json(n));return n}}},935:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"mixcoins",name:"MixCoins",countries:["GB","HK"],rateLimit:1500,version:"v1",has:{CORS:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/30237212-ed29303c-9535-11e7-8af8-fcd381cfa20c.jpg",api:"https://mixcoins.com/api",www:"https://mixcoins.com",doc:"https://mixcoins.com/help/api/"},api:{public:{get:["ticker","trades","depth"]},private:{post:["cancel","info","orders","order","transactions","trade"]}},markets:{"BTC/USD":{id:"btc_usd",symbol:"BTC/USD",base:"BTC",quote:"USD",maker:.0015,taker:.0025},"ETH/BTC":{id:"eth_btc",symbol:"ETH/BTC",base:"ETH",quote:"BTC",maker:.001,taker:.0015},"BCH/BTC":{id:"bch_btc",symbol:"BCH/BTC",base:"BCH",quote:"BTC",maker:.001,taker:.0015},"LSK/BTC":{id:"lsk_btc",symbol:"LSK/BTC",base:"LSK",quote:"BTC",maker:.0015,taker:.0025},"BCH/USD":{id:"bch_usd",symbol:"BCH/USD",base:"BCH",quote:"USD",maker:.001,taker:.0015},"ETH/USD":{id:"eth_usd",symbol:"ETH/USD",base:"ETH",quote:"USD",maker:.001,taker:.0015}}})}async fetchBalance(e={}){let t=(await this.privatePostInfo()).result.wallet,i={info:t},s=Object.keys(this.currencies);for(let r=0;r<s.length;r++){let e=s[r],a=e.toLowerCase(),o=this.account();a in t&&(o.free=parseFloat(t[a].avail),o.used=parseFloat(t[a].lock),o.total=this.sum(o.free,o.used)),i[e]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){let s=await this.publicGetDepth(this.extend({market:this.marketId(e)},i));return this.parseOrderBook(s.result)}async fetchTicker(e,t={}){let i=(await this.publicGetTicker(this.extend({market:this.marketId(e)},t))).result,s=this.milliseconds(),r=this.safeFloat(i,"last");return{symbol:e,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(i,"high"),low:this.safeFloat(i,"low"),bid:this.safeFloat(i,"buy"),bidVolume:void 0,ask:this.safeFloat(i,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(i,"vol"),quoteVolume:void 0,info:i}}parseTrade(e,t){let i=1e3*parseInt(e.date);return{id:e.id.toString(),info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:void 0,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"amount")}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetTrades(this.extend({market:r.id},s));return this.parseTrades(a.result,r,t,i)}async createOrder(e,t,i,s,r,a={}){let o={market:this.marketId(e),op:i,amount:s};"market"===t?(o.order_type=1,o.price=r):o.order_type=0;let n=await this.privatePostTrade(this.extend(o,a));return{info:n,id:n.result.id.toString()}}async cancelOrder(e,t,i={}){return await this.privatePostCancel({id:e})}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.version+"/"+e;if("public"===t)Object.keys(s).length&&(o+="?"+this.urlencode(s));else{this.checkRequiredCredentials();let e=this.nonce();a=this.urlencode(this.extend({nonce:e},s)),r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.hmac(this.encode(a),this.secret,"sha512")}}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("status"in n&&200===n.status)return n;throw new r(this.id+" "+this.json(n))}}},936:function(e,t,i){"use strict";const s=i(788);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"negociecoins",name:"NegocieCoins",countries:["BR"],rateLimit:1e3,version:"v3",has:{fetchOrder:!0,fetchOrders:!0,fetchOpenOrders:!0,fetchClosedOrders:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/38008571-25a6246e-3258-11e8-969b-aeb691049245.jpg",api:{public:"https://broker.negociecoins.com.br/api/v3",private:"https://broker.negociecoins.com.br/tradeapi/v1"},www:"https://www.negociecoins.com.br",doc:["https://www.negociecoins.com.br/documentacao-tradeapi","https://www.negociecoins.com.br/documentacao-api"],fees:"https://www.negociecoins.com.br/comissoes"},api:{public:{get:["{PAR}/ticker","{PAR}/orderbook","{PAR}/trades","{PAR}/trades/{timestamp_inicial}","{PAR}/trades/{timestamp_inicial}/{timestamp_final}"]},private:{get:["user/balance","user/order/{orderId}"],post:["user/order","user/orders"],delete:["user/order/{orderId}"]}},markets:{"B2X/BRL":{id:"b2xbrl",symbol:"B2X/BRL",base:"B2X",quote:"BRL"},"BCH/BRL":{id:"bchbrl",symbol:"BCH/BRL",base:"BCH",quote:"BRL"},"BTC/BRL":{id:"btcbrl",symbol:"BTC/BRL",base:"BTC",quote:"BRL"},"BTG/BRL":{id:"btgbrl",symbol:"BTG/BRL",base:"BTG",quote:"BRL"},"DASH/BRL":{id:"dashbrl",symbol:"DASH/BRL",base:"DASH",quote:"BRL"},"LTC/BRL":{id:"ltcbrl",symbol:"LTC/BRL",base:"LTC",quote:"BRL"}},fees:{trading:{maker:.003,taker:.004},funding:{withdraw:{BTC:.001,BCH:3e-5,BTG:9e-5,LTC:.005}}},limits:{amount:{min:.001,max:void 0}},precision:{amount:8,price:8}})}parseTicker(e,t){let i=1e3*e.date,s=void 0!==t?t.symbol:void 0,r=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),bidVolume:void 0,ask:this.safeFloat(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"vol"),quoteVolume:void 0,info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetPARTicker(this.extend({PAR:i.id},t));return this.parseTicker(s,i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetPAROrderbook(this.extend({PAR:this.marketId(e)},i));return this.parseOrderBook(s,void 0,"bid","ask","price","quantity")}parseTrade(e,t){let i=1e3*e.date,s=this.safeFloat(e,"price"),r=this.safeFloat(e,"amount"),a=t.symbol,o=parseFloat(this.costToPrecision(a,s*r));return{timestamp:i,datetime:this.iso8601(i),symbol:a,id:this.safeString(e,"tid"),order:void 0,type:"limit",side:e.type.toLowerCase(),price:s,amount:r,cost:o,fee:void 0,info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e);void 0===t&&(t=0);let a={PAR:r.id,timestamp_inicial:parseInt(t/1e3)},o=await this.publicGetPARTradesTimestampInicial(this.extend(a,s));return this.parseTrades(o,r,t,i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetUserBalance(e),i={info:t},s=Object.keys(t);for(let r=0;r<s.length;r++){let e=s[r],a=t[e],o=this.commonCurrencyCode(e),n={free:parseFloat(a.total),used:0,total:parseFloat(a.available)};n.used=n.total-n.free,i[o]=n}return this.parseBalance(i)}parseOrder(e,t){let i=void 0;void 0===t&&(t=this.safeValue(this.marketsById,e.pair))&&(i=t.symbol);let s=this.parse8601(e.created),r=this.safeFloat(e,"price"),a=this.safeFloat(e,"quantity"),o=this.safeFloat(e,"total"),n=this.safeFloat(e,"pending_quantity"),d=this.safeFloat(e,"executed_quantity"),c=e.status;c="filled"===c?"closed":"cancelled"===c?"canceled":"open";return{id:e.id.toString(),datetime:this.iso8601(s),timestamp:s,lastTradeTimestamp:void 0,status:c,symbol:i,type:"limit",side:e.type,price:r,cost:o,amount:a,filled:d,remaining:n,trades:void 0,fee:{currency:t.quote,cost:this.safeFloat(e,"fee")},info:e}}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n=await this.privatePostUserOrder(this.extend({pair:o.id,price:this.priceToPrecision(e,r),volume:this.amountToPrecision(e,s),type:i},a)),d=this.parseOrder(n[0],o),c=d.id;return this.orders[c]=d,d}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=this.markets[t],r=await this.privateDeleteUserOrderOrderId(this.extend({orderId:e},i));return this.parseOrder(r[0],s)}async fetchOrder(e,t,i={}){await this.loadMarkets();let s=await this.privateGetUserOrderOrderId(this.extend({orderId:e},i));return this.parseOrder(s[0])}async fetchOrders(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={pair:r.id};void 0!==t&&(a.startDate=this.ymd(t)),void 0!==i&&(a.pageSize=i);let o=await this.privatePostUserOrders(this.extend(a,s));return this.parseOrders(o,r)}async fetchOpenOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"pending"},s))}async fetchClosedOrders(e,t,i,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"filled"},s))}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t]+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e)),d=this.urlencode(n);if("public"===t)d.length&&(o+="?"+d);else{this.checkRequiredCredentials();let e=this.seconds().toString(),t=this.nonce().toString(),s="";d.length?(a=this.json(n),s=this.hash(this.encode(a),"md5","base64")):a="";let c=this.encodeURIComponent(o).toLowerCase(),h=[this.apiKey,i,c,e,t,s].join(""),l=this.base64ToBinary(this.secret),u=this.hmac(this.encode(h),this.encode(l),"sha256","base64");u=this.binaryToString(u),r={Authorization:"amx "+[this.apiKey,u,t,e].join(":")},"POST"===i?(r["Content-Type"]="application/json; charset=UTF-8",r["Content-Length"]=a.length):d.length&&(o+="?"+d,a=void 0)}return{url:o,method:i,body:a,headers:r}}}},937:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"nova",name:"Novaexchange",countries:["TZ"],rateLimit:2e3,version:"v2",has:{CORS:!1,createMarketOrder:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/30518571-78ca0bca-9b8a-11e7-8840-64b83a4a94b2.jpg",api:"https://novaexchange.com/remote",www:"https://novaexchange.com",doc:"https://novaexchange.com/remote/faq"},api:{public:{get:["markets/","markets/{basecurrency}/","market/info/{pair}/","market/orderhistory/{pair}/","market/openorders/{pair}/buy/","market/openorders/{pair}/sell/","market/openorders/{pair}/both/","market/openorders/{pair}/{ordertype}/"]},private:{post:["getbalances/","getbalance/{currency}/","getdeposits/","getwithdrawals/","getnewdepositaddress/{currency}/","getdepositaddress/{currency}/","myopenorders/","myopenorders_market/{pair}/","cancelorder/{orderid}/","withdraw/{currency}/","trade/{pair}/","tradehistory/","getdeposithistory/","getwithdrawalhistory/","walletstatus/","walletstatus/{currency}/"]}}})}async fetchMarkets(){let e=(await this.publicGetMarkets()).markets,t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.marketname,[a,o]=r.split("_"),n=o+"/"+a,d=!0;s.disabled&&(d=!1),t.push({id:r,symbol:n,base:o,quote:a,active:d,info:s})}return t}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetMarketOpenordersPairBoth(this.extend({pair:this.marketId(e)},i));return this.parseOrderBook(s,void 0,"buyorders","sellorders","price","amount")}async fetchTicker(e,t={}){await this.loadMarkets();let i=(await this.publicGetMarketInfoPair(this.extend({pair:this.marketId(e)},t))).markets[0],s=this.milliseconds(),r=this.safeFloat(i,"last_price");return{symbol:e,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(i,"high24h"),low:this.safeFloat(i,"low24h"),bid:this.safeFloat(i,"bid"),bidVolume:void 0,ask:this.safeFloat(i,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:this.safeFloat(i,"change24h"),percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:this.safeFloat(i,"volume24h"),info:i}}parseTrade(e,t){let i=1e3*e.unix_t_datestamp;return{info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,id:void 0,order:void 0,type:void 0,side:e.tradetype.toLowerCase(),price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"amount")}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetMarketOrderhistoryPair(this.extend({pair:r.id},s));return this.parseTrades(a.items,r,t,i)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostGetbalances(),i=t.balances,s={info:t};for(let r=0;r<i.length;r++){let e=i[r],t=e.currency,a=parseFloat(e.amount_lockbox),o=parseFloat(e.amount_trades),n={free:parseFloat(e.amount),used:this.sum(a,o),total:parseFloat(e.amount_total)};s[t]=n}return this.parseBalance(s)}async createOrder(e,t,i,s,a,o={}){if("market"===t)throw new r(this.id+" allows limit orders only");await this.loadMarkets(),s=s.toString(),a=a.toString();let n=this.market(e),d={tradetype:i.toUpperCase(),tradeamount:s,tradeprice:a,tradebase:1,pair:n.id};return{info:await this.privatePostTradePair(this.extend(d,o)),id:void 0}}async cancelOrder(e,t,i={}){return await this.privatePostCancelorder(this.extend({orderid:e},i))}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.version+"/";"private"===t&&(o+=t+"/"),o+=this.implodeParams(e,s);let n=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials();let e=this.nonce().toString();o+="?"+this.urlencode({nonce:e});let t=this.hmac(this.encode(o),this.encode(this.secret),"sha512","base64");a=this.urlencode(this.extend({apikey:this.apiKey,signature:t},n)),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("status"in n&&"success"!==n.status)throw new r(this.id+" "+this.json(n));return n}}},938:function(e,t,i){"use strict";const s=i(793);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"okcoincny",name:"OKCoin CNY",countries:["CN"],has:{CORS:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766792-8be9157a-5ee5-11e7-926c-6d69b8d3378d.jpg",api:{web:"https://www.okcoin.cn",public:"https://www.okcoin.cn/api",private:"https://www.okcoin.cn/api"},www:"https://www.okcoin.cn",doc:"https://www.okcoin.cn/rest_getStarted.html"},markets:{"BTC/CNY":{id:"btc_cny",symbol:"BTC/CNY",base:"BTC",quote:"CNY",type:"spot",spot:!0,future:!1},"LTC/CNY":{id:"ltc_cny",symbol:"LTC/CNY",base:"LTC",quote:"CNY",type:"spot",spot:!0,future:!1},"ETH/CNY":{id:"eth_cny",symbol:"ETH/CNY",base:"ETH",quote:"CNY",type:"spot",spot:!0,future:!1},"ETC/CNY":{id:"etc_cny",symbol:"ETC/CNY",base:"ETC",quote:"CNY",type:"spot",spot:!0,future:!1},"BCH/CNY":{id:"bcc_cny",symbol:"BCH/CNY",base:"BCH",quote:"CNY",type:"spot",spot:!0,future:!1}}})}}},939:function(e,t,i){"use strict";const s=i(793);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"okex",name:"OKEX",countries:["CN","US"],has:{CORS:!1,futures:!0,fetchTickers:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/32552768-0d6dd3c6-c4a6-11e7-90f8-c043b64756a7.jpg",api:{web:"https://www.okex.com/v2",public:"https://www.okex.com/api",private:"https://www.okex.com/api"},www:"https://www.okex.com",doc:"https://github.com/okcoin-okex/API-docs-OKEx.com",fees:"https://www.okex.com/fees.html"},commonCurrencies:{CAN:"Content And AD Network",FAIR:"FairGame",MAG:"Maggie",YOYO:"YOYOW"}})}calculateFee(e,t,i,s,r,a="taker",o={}){let n=this.markets[e],d="quote",c=n[a],h=parseFloat(this.costToPrecision(e,s*c));return"sell"===i?h*=r:d="base",{type:a,currency:n[d],rate:c,cost:parseFloat(this.feeToPrecision(e,h))}}async fetchMarkets(){let e=await super.fetchMarkets();for(let t=0;t<e.length;t++)e[t].spot?(e[t].maker=.0015,e[t].taker=.002):(e[t].maker=3e-4,e[t].taker=5e-4);return e}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTickers(this.extend({},t)),s=i.tickers,r=1e3*parseInt(i.date),a={};for(let o=0;o<s.length;o++){let e=s[o],t=void 0;if("symbol"in e){let i=e.symbol;i in this.markets_by_id&&(t=this.markets_by_id[i])}a[(e=this.parseTicker(this.extend(s[o],{timestamp:r}),t)).symbol]=e}return a}}},940:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"paymium",name:"Paymium",countries:["FR","EU"],rateLimit:2e3,version:"v1",has:{CORS:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27790564-a945a9d4-5ff9-11e7-9d2d-b635763f2f24.jpg",api:"https://paymium.com/api",www:"https://www.paymium.com",doc:["https://github.com/Paymium/api-documentation","https://www.paymium.com/page/developers"]},api:{public:{get:["countries","data/{id}/ticker","data/{id}/trades","data/{id}/depth","bitcoin_charts/{id}/trades","bitcoin_charts/{id}/depth"]},private:{get:["merchant/get_payment/{UUID}","user","user/addresses","user/addresses/{btc_address}","user/orders","user/orders/{UUID}","user/price_alerts"],post:["user/orders","user/addresses","user/payment_requests","user/price_alerts","merchant/create_payment"],delete:["user/orders/{UUID}/cancel","user/price_alerts/{id}"]}},markets:{"BTC/EUR":{id:"eur",symbol:"BTC/EUR",base:"BTC",quote:"EUR"}},fees:{trading:{maker:.0059,taker:.0059}}})}async fetchBalance(e={}){let t=await this.privateGetUser(),i={info:t},s=Object.keys(this.currencies);for(let r=0;r<s.length;r++){let e=s[r],a=e.toLowerCase(),o=this.account(),n="balance_"+a,d="locked_"+a;n in t&&(o.free=t[n]),d in t&&(o.used=t[d]),o.total=this.sum(o.free,o.used),i[e]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){let s=await this.publicGetDataIdDepth(this.extend({id:this.marketId(e)},i));return this.parseOrderBook(s,void 0,"bids","asks","price","amount")}async fetchTicker(e,t={}){let i=await this.publicGetDataIdTicker(this.extend({id:this.marketId(e)},t)),s=1e3*i.at,r=this.safeFloat(i,"vwap"),a=this.safeFloat(i,"volume"),o=a*r,n=this.safeFloat(i,"price");return{symbol:e,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(i,"high"),low:this.safeFloat(i,"low"),bid:this.safeFloat(i,"bid"),bidVolume:void 0,ask:this.safeFloat(i,"ask"),askVolume:void 0,vwap:r,open:this.safeFloat(i,"open"),close:n,last:n,previousClose:void 0,change:void 0,percentage:this.safeFloat(i,"variation"),average:void 0,baseVolume:a,quoteVolume:o,info:i}}parseTrade(e,t){let i=1e3*parseInt(e.created_at_int),s="traded_"+t.base.toLowerCase();return{info:e,id:e.uuid,order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:e.side,price:e.price,amount:e[s]}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetDataIdTrades(this.extend({id:r.id},s));return this.parseTrades(a,r,t,i)}async createOrder(e,t,i,s,r,a={}){let o={type:this.capitalize(t)+"Order",currency:this.marketId(e),direction:i,amount:s};"market"!==t&&(o.price=r);let n=await this.privatePostUserOrders(this.extend(o,a));return{info:n,id:n.uuid}}async cancelOrder(e,t,i={}){return await this.privateDeleteUserOrdersUUIDCancel(this.extend({UUID:e},i))}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.version+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials();let e=this.nonce().toString(),t=e+o;"POST"===i&&Object.keys(n).length&&(t+=a=this.json(n)),r={"Api-Key":this.apiKey,"Api-Signature":this.hmac(this.encode(t),this.encode(this.secret)),"Api-Nonce":e,"Content-Type":"application/json"}}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("errors"in n)throw new r(this.id+" "+this.json(n));return n}}},941:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,ExchangeNotAvailable:a,RequestTimeout:o,AuthenticationError:n,DDoSProtection:d,InsufficientFunds:c,OrderNotFound:h,OrderNotCached:l,InvalidOrder:u,AccountSuspended:p,CancelPending:m,InvalidNonce:f}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"poloniex",name:"Poloniex",countries:["US"],rateLimit:1e3,has:{createDepositAddress:!0,fetchDepositAddress:!0,CORS:!1,editOrder:!0,createMarketOrder:!1,fetchOHLCV:!0,fetchOrderTrades:!0,fetchMyTrades:!0,fetchOrder:"emulated",fetchOrders:"emulated",fetchOpenOrders:!0,fetchClosedOrders:"emulated",fetchTickers:!0,fetchTradingFees:!0,fetchCurrencies:!0,withdraw:!0},timeframes:{"5m":300,"15m":900,"30m":1800,"2h":7200,"4h":14400,"1d":86400},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766817-e9456312-5ee6-11e7-9b3c-b628ca5626a5.jpg",api:{public:"https://poloniex.com/public",private:"https://poloniex.com/tradingApi"},www:"https://poloniex.com",doc:["https://poloniex.com/support/api/","http://pastebin.com/dMX7mZE0"],fees:"https://poloniex.com/fees"},api:{public:{get:["return24hVolume","returnChartData","returnCurrencies","returnLoanOrders","returnOrderBook","returnTicker","returnTradeHistory"]},private:{post:["buy","cancelLoanOffer","cancelOrder","closeMarginPosition","createLoanOffer","generateNewAddress","getMarginPosition","marginBuy","marginSell","moveOrder","returnActiveLoans","returnAvailableAccountBalances","returnBalances","returnCompleteBalances","returnDepositAddresses","returnDepositsWithdrawals","returnFeeInfo","returnLendingHistory","returnMarginAccountSummary","returnOpenLoanOffers","returnOpenOrders","returnOrderTrades","returnTradableBalances","returnTradeHistory","sell","toggleAutoRenew","transferBalance","withdraw"]}},fees:{trading:{maker:.0015,taker:.0025},funding:{}},limits:{amount:{min:1e-8,max:1e9},price:{min:1e-8,max:1e9},cost:{min:0,max:1e9}},precision:{amount:8,price:8},commonCurrencies:{AIR:"AirCoin",APH:"AphroditeCoin",BCC:"BTCtalkcoin",BDG:"Badgercoin",BTM:"Bitmark",CON:"Coino",GOLD:"GoldEagles",GPUC:"GPU",HOT:"Hotcoin",ITC:"Information Coin",PLX:"ParallaxCoin",KEY:"KEYCoin",STR:"XLM",SOC:"SOCC",XAP:"API Coin"},options:{limits:{cost:{min:{BTC:1e-4,ETH:1e-4,XMR:1e-4,USDT:1}}}}})}calculateFee(e,t,i,s,r,a="taker",o={}){let n=this.markets[e],d="quote",c=n[a],h=parseFloat(this.costToPrecision(e,s*c));return"sell"===i?h*=r:d="base",{type:a,currency:n[d],rate:c,cost:parseFloat(this.feeToPrecision(e,h))}}parseOHLCV(e,t,i="5m",s,r){return[1e3*e.date,e.open,e.high,e.low,e.close,e.quoteVolume]}async fetchOHLCV(e,t="5m",i,s,r={}){await this.loadMarkets();let a=this.market(e);void 0===i&&(i=0);let o={currencyPair:a.id,period:this.timeframes[t],start:parseInt(i/1e3)};void 0!==s&&(o.end=this.sum(o.start,s*this.timeframes[t]));let n=await this.publicGetReturnChartData(this.extend(o,r));return this.parseOHLCVs(n,a,t,i,s)}async fetchMarkets(){let e=await this.publicGetReturnTicker(),t=Object.keys(e),i=[];for(let s=0;s<t.length;s++){let r=t[s],a=e[r],[o,n]=r.split("_"),d=(n=this.commonCurrencyCode(n))+"/"+(o=this.commonCurrencyCode(o)),c=this.safeFloat(this.options.limits.cost.min,o,0);i.push(this.extend(this.fees.trading,{id:r,symbol:d,base:n,quote:o,active:!0,precision:{amount:8,price:8},limits:{amount:{min:1e-8,max:1e9},price:{min:1e-8,max:1e9},cost:{min:c,max:1e9}},info:a}))}return i}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostReturnCompleteBalances(this.extend({account:"all"},e)),i={info:t},s=Object.keys(t);for(let r=0;r<s.length;r++){let e=s[r],a=t[e],o=this.commonCurrencyCode(e),n={free:parseFloat(a.available),used:parseFloat(a.onOrders),total:0};n.total=this.sum(n.free,n.used),i[o]=n}return this.parseBalance(i)}async fetchTradingFees(e={}){await this.loadMarkets();let t=await this.privatePostReturnFeeInfo();return{info:t,maker:this.safeFloat(t,"makerFee"),taker:this.safeFloat(t,"takerFee"),withdraw:{},deposit:{}}}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={currencyPair:this.marketId(e)};void 0!==t&&(s.depth=t);let r=await this.publicGetReturnOrderBook(this.extend(s,i)),a=this.parseOrderBook(r);return a.nonce=this.safeInteger(r,"sec"),a}parseTicker(e,t){let i=this.milliseconds(),s=void 0;t&&(s=t.symbol);let r=void 0,a=void 0,o=void 0,n=this.safeFloat(e,"last"),d=this.safeFloat(e,"percentChange");return-1!==d&&(a=n-(r=n/this.sum(1,d)),o=this.sum(n,r)/2),{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high24hr"),low:this.safeFloat(e,"low24hr"),bid:this.safeFloat(e,"highestBid"),bidVolume:void 0,ask:this.safeFloat(e,"lowestAsk"),askVolume:void 0,vwap:void 0,open:r,close:n,last:n,previousClose:void 0,change:a,percentage:100*d,average:o,baseVolume:this.safeFloat(e,"quoteVolume"),quoteVolume:this.safeFloat(e,"baseVolume"),info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetReturnTicker(t),s=Object.keys(i),r={};for(let a=0;a<s.length;a++){let e=s[a],t=this.markets_by_id[e],o=t.symbol,n=i[e];r[o]=this.parseTicker(n,t)}return r}async fetchCurrencies(e={}){let t=await this.publicGetReturnCurrencies(e),i=Object.keys(t),s={};for(let r=0;r<i.length;r++){let e=i[r],a=t[e],o=8,n=this.commonCurrencyCode(e),d=0===a.delisted&&!a.disabled;s[n]={id:e,code:n,info:a,name:a.name,active:d,fee:this.safeFloat(a,"txFee"),precision:o,limits:{amount:{min:Math.pow(10,-o),max:Math.pow(10,o)},price:{min:Math.pow(10,-o),max:Math.pow(10,o)},cost:{min:void 0,max:void 0},withdraw:{min:a.txFee,max:Math.pow(10,o)}}}}return s}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=(await this.publicGetReturnTicker(t))[i.id];return this.parseTicker(s,i)}parseTrade(e,t){let i=this.parse8601(e.date),s=void 0,r=void 0,a=void 0;if(!t&&"currencyPair"in e){let i=e.currencyPair;if(i in this.markets_by_id)t=this.markets_by_id[i];else{let e=i.split("_");a=e[0],s=(r=e[1])+"/"+a}}void 0!==t&&(s=t.symbol,r=t.base,a=t.quote);let o=e.type,n=void 0,d=this.safeFloat(e,"total"),c=this.safeFloat(e,"amount");if("fee"in e){let t=this.safeFloat(e,"fee"),i=void 0,s=void 0;"buy"===o?(s=r,i=c*t):(s=a,void 0!==d&&(i=d*t)),n={type:void 0,rate:t,cost:i,currency:s}}return{info:e,timestamp:i,datetime:this.iso8601(i),symbol:s,id:this.safeString(e,"tradeID"),order:this.safeString(e,"orderNumber"),type:"limit",side:o,price:this.safeFloat(e,"rate"),amount:c,cost:d,fee:n}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a={currencyPair:r.id};void 0!==t&&(a.start=parseInt(t/1e3),a.end=this.seconds());let o=await this.publicGetReturnTradeHistory(this.extend(a,s));return this.parseTrades(o,r,t,i)}async fetchMyTrades(e,t,i,s={}){await this.loadMarkets();let r=void 0;void 0!==e&&(r=this.market(e));let a={currencyPair:r?r.id:"all"};void 0!==t&&(a.start=parseInt(t/1e3),a.end=this.seconds()),void 0!==i&&(a.limit=parseInt(i));let o=await this.privatePostReturnTradeHistory(this.extend(a,s)),n=[];if(void 0!==r)n=this.parseTrades(o,r);else if(o){let e=Object.keys(o);for(let t=0;t<e.length;t++){let i=e[t],s=void 0;i in this.markets_by_id&&(s=this.markets_by_id[i]);let r=this.parseTrades(o[i],s);for(let e=0;e<r.length;e++)n.push(r[e])}}return this.filterBySinceLimit(n,t,i)}parseOrder(e,t){let i=this.safeInteger(e,"timestamp");i||(i=this.parse8601(e.date));let s=void 0;"resultingTrades"in e&&(s=this.parseTrades(e.resultingTrades,t));let r=void 0;t&&(r=t.symbol);let a=this.safeFloat(e,"price"),o=this.safeFloat(e,"amount"),n=this.safeFloat(e,"startingAmount",o),d=void 0,c=0;if(void 0!==n&&void 0!==o&&(d=n-o,void 0!==a&&(c=d*a)),void 0===d&&void 0!==s){d=0,c=0;for(let e=0;e<s.length;e++){let t=s[e],i=t.amount,r=t.price;d=this.sum(d,i),c+=r*i}}return{info:e,id:e.orderNumber,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,status:e.status,symbol:r,type:e.type,side:e.side,price:a,cost:c,amount:n,filled:d,remaining:o,trades:s,fee:void 0}}parseOpenOrders(e,t,i){for(let s=0;s<e.length;s++){let r=e[s],a=this.extend(r,{status:"open",type:"limit",side:r.type,price:r.rate});i.push(this.parseOrder(a,t))}return i}async fetchOrders(e,t,i,s={}){await this.loadMarkets();let r=void 0;void 0!==e&&(r=this.market(e));let a=r?r.id:"all",o=await this.privatePostReturnOpenOrders(this.extend({currencyPair:a})),n=[];if(void 0!==r)n=this.parseOpenOrders(o,r,n);else{let e=Object.keys(o);for(let t=0;t<e.length;t++){let i=e[t],s=o[i],r=this.markets_by_id[i];n=this.parseOpenOrders(s,r,n)}}for(let l=0;l<n.length;l++)this.orders[n[l].id]=n[l];let d=this.indexBy(n,"id"),c=Object.keys(this.orders),h=[];for(let l=0;l<c.length;l++){let t=c[l];if(t in d)this.orders[t]=this.extend(this.orders[t],d[t]);else{let e=this.orders[t];"open"===e.status&&(void 0===(e=this.extend(e,{status:"closed",cost:void 0,filled:e.amount,remaining:0})).cost&&void 0!==e.filled&&(e.cost=e.filled*e.price),this.orders[t]=e)}let i=this.orders[t];void 0!==r?i.symbol===e&&h.push(i):h.push(i)}return this.filterBySinceLimit(h,t,i)}async fetchOrder(e,t,i={}){let s=this.safeValue(i,"since"),r=this.safeValue(i,"limit"),a=this.omit(i,["since","limit"]),o=await this.fetchOrders(t,s,r,a);for(let n=0;n<o.length;n++)if(o[n].id===e)return o[n];throw new l(this.id+" order id "+e.toString()+' is not in "open" state and not found in cache')}filterOrdersByStatus(e,t){let i=[];for(let s=0;s<e.length;s++)e[s].status===t&&i.push(e[s]);return i}async fetchOpenOrders(e,t,i,s={}){let r=await this.fetchOrders(e,t,i,s);return this.filterOrdersByStatus(r,"open")}async fetchClosedOrders(e,t,i,s={}){let r=await this.fetchOrders(e,t,i,s);return this.filterOrdersByStatus(r,"closed")}async createOrder(e,t,i,s,a,o={}){if("market"===t)throw new r(this.id+" allows limit orders only");await this.loadMarkets();let n="privatePost"+this.capitalize(i),d=this.market(e);a=parseFloat(a),s=parseFloat(s);let c=await this[n](this.extend({currencyPair:d.id,rate:this.priceToPrecision(e,a),amount:this.amountToPrecision(e,s)},o)),h=this.milliseconds(),l=this.parseOrder(this.extend({timestamp:h,status:"open",type:t,side:i,price:a,amount:s},c),d),u=l.id;return this.orders[u]=l,this.extend({info:c},l)}async editOrder(e,t,i,s,r,a,o={}){await this.loadMarkets(),a=parseFloat(a);let n={orderNumber:e,rate:this.priceToPrecision(t,a)};void 0!==r&&(r=parseFloat(r),n.amount=this.amountToPrecision(t,r));let d=await this.privatePostMoveOrder(this.extend(n,o)),c=void 0;if(e in this.orders){this.orders[e].status="canceled";let t=d.orderNumber;this.orders[t]=this.extend(this.orders[e],{id:t,price:a,status:"open"}),void 0!==r&&(this.orders[t].amount=r),c=this.extend(this.orders[t],{info:d})}else{let e=void 0;void 0!==t&&(e=this.market(t)),c=this.parseOrder(d,e),this.orders[c.id]=c}return c}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=void 0;try{s=await this.privatePostCancelOrder(this.extend({orderNumber:e},i))}catch(t){throw t instanceof m&&e in this.orders&&(this.orders[e].status="canceled"),t}return e in this.orders&&(this.orders[e].status="canceled"),s}async fetchOrderStatus(e,t){await this.loadMarkets();let i=await this.fetchOpenOrders(t);return e in this.indexBy(i,"id")?"open":"closed"}async fetchOrderTrades(e,t,i={}){await this.loadMarkets();let s=await this.privatePostReturnOrderTrades(this.extend({orderNumber:e},i));return this.parseTrades(s)}async createDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privatePostGenerateNewAddress({currency:i.id}),r=void 0;return 1===s.success&&(r=this.safeString(s,"response")),this.checkAddress(r),{currency:e,address:r,tag:void 0,info:s}}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privatePostReturnDepositAddresses(),r=i.id,a=this.safeString(s,r);return this.checkAddress(a),{currency:e,address:a,tag:void 0,info:s}}async withdraw(e,t,i,s,r={}){this.checkAddress(i),await this.loadMarkets();let a={currency:this.currency(e).id,amount:t,address:i};s&&(a.paymentId=s);let o=await this.privatePostWithdraw(this.extend(a,r));return{info:o,id:o.response}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t],n=this.extend({command:e},s);return"public"===t?o+="?"+this.urlencode(n):(this.checkRequiredCredentials(),n.nonce=this.nonce(),a=this.urlencode(n),r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.hmac(this.encode(a),this.encode(this.secret),"sha512")}),{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,l,y){let b=void 0;try{b=JSON.parse(y)}catch(e){return}if("error"in b){const e=b.error,t=this.id+" "+this.json(b);throw"Invalid order number, or you are not the person who placed the order."===e?new h(t):"Connection timed out. Please try again."===e?new o(t):"Internal error. Please try again."===e?new a(t):"Order not found, or you are not the person who placed it."===e?new h(t):"Invalid API key/secret pair."===e?new n(t):"Please do not make more than 8 API calls per second."===e?new d(t):e.indexOf("Total must be at least")>=0?new u(t):e.indexOf("This account is frozen.")>=0?new p(t):e.indexOf("Not enough")>=0?new c(t):e.indexOf("Nonce must be greater")>=0?new f(t):e.indexOf("You have already called cancelOrder or moveOrder on this order.")>=0?new m(t):new r(this.id+" unknown error "+this.json(b))}}}},942:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,AuthenticationError:a}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"quadrigacx",name:"QuadrigaCX",countries:["CA"],rateLimit:1e3,version:"v2",has:{fetchDepositAddress:!0,fetchTickers:!0,CORS:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766825-98a6d0de-5ee7-11e7-9fa4-38e11a2c6f52.jpg",api:"https://api.quadrigacx.com",www:"https://www.quadrigacx.com",doc:"https://www.quadrigacx.com/api_info"},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},api:{public:{get:["order_book","ticker","transactions"]},private:{post:["balance","bitcoin_deposit_address","bitcoin_withdrawal","bitcoincash_deposit_address","bitcoincash_withdrawal","bitcoingold_deposit_address","bitcoingold_withdrawal","buy","cancel_order","ether_deposit_address","ether_withdrawal","litecoin_deposit_address","litecoin_withdrawal","lookup_order","open_orders","sell","user_transactions"]}},markets:{"BTC/CAD":{id:"btc_cad",symbol:"BTC/CAD",base:"BTC",quote:"CAD",maker:.005,taker:.005},"BTC/USD":{id:"btc_usd",symbol:"BTC/USD",base:"BTC",quote:"USD",maker:.005,taker:.005},"ETH/BTC":{id:"eth_btc",symbol:"ETH/BTC",base:"ETH",quote:"BTC",maker:.002,taker:.002},"ETH/CAD":{id:"eth_cad",symbol:"ETH/CAD",base:"ETH",quote:"CAD",maker:.005,taker:.005},"LTC/CAD":{id:"ltc_cad",symbol:"LTC/CAD",base:"LTC",quote:"CAD",maker:.005,taker:.005},"LTC/BTC":{id:"ltc_btc",symbol:"LTC/BTC",base:"LTC",quote:"BTC",maker:.005,taker:.005},"BCH/CAD":{id:"bch_cad",symbol:"BCH/CAD",base:"BCH",quote:"CAD",maker:.005,taker:.005},"BCH/BTC":{id:"bch_btc",symbol:"BCH/BTC",base:"BCH",quote:"BTC",maker:.005,taker:.005},"BTG/CAD":{id:"btg_cad",symbol:"BTG/CAD",base:"BTG",quote:"CAD",maker:.005,taker:.005},"BTG/BTC":{id:"btg_btc",symbol:"BTG/BTC",base:"BTG",quote:"BTC",maker:.005,taker:.005}},exceptions:{101:a}})}async fetchBalance(e={}){let t=await this.privatePostBalance(),i={info:t},s=Object.keys(this.currencies);for(let r=0;r<s.length;r++){let e=s[r],a=e.toLowerCase(),o={free:parseFloat(t[a+"_available"]),used:parseFloat(t[a+"_reserved"]),total:parseFloat(t[a+"_balance"])};i[e]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){let s=await this.publicGetOrderBook(this.extend({book:this.marketId(e)},i)),r=1e3*parseInt(s.timestamp);return this.parseOrderBook(s,r)}async fetchTickers(e,t={}){let i=await this.publicGetTicker(this.extend({book:"all"},t)),s=Object.keys(i),r={};for(let a=0;a<s.length;a++){let e=s[a],t=e,o=void 0;if(e in this.markets_by_id)t=(o=this.markets_by_id[e]).symbol;else{let[i,s]=e.split("_"),r=i.toUpperCase(),a=s.toUpperCase();o={symbol:t=(r=this.commonCurrencyCode(r))+"/"+(a=this.commonCurrencyCode(r))}}r[t]=this.parseTicker(i[e],o)}return r}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTicker(this.extend({book:i.id},t));return this.parseTicker(s,i)}parseTicker(e,t){let i=void 0;void 0!==t&&(i=t.symbol);let s=1e3*parseInt(e.timestamp),r=this.safeFloat(e,"vwap"),a=this.safeFloat(e,"volume"),o=a*r,n=this.safeFloat(e,"last");return{symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"bid"),bidVolume:void 0,ask:this.safeFloat(e,"ask"),askVolume:void 0,vwap:r,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:o,info:e}}parseTrade(e,t){let i=1e3*parseInt(e.date);return{info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,id:e.tid.toString(),order:void 0,type:void 0,side:e.side,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"amount")}}async fetchTrades(e,t,i,s={}){let r=this.market(e),a=await this.publicGetTransactions(this.extend({book:r.id},s));return this.parseTrades(a,r,t,i)}async createOrder(e,t,i,s,r,a={}){let o="privatePost"+this.capitalize(i),n={amount:s,book:this.marketId(e)};"limit"===t&&(n.price=r);let d=await this[o](this.extend(n,a));return{info:d,id:d.id.toString()}}async cancelOrder(e,t,i={}){return await this.privatePostCancelOrder(this.extend({id:e},i))}async fetchDepositAddress(e,t={}){let i="privatePost"+this.getCurrencyName(e)+"DepositAddress",s=await this[i](t);if(s.indexOf("rror")>=0)throw new r(this.id+" "+s);return this.checkAddress(s),{currency:e,address:s,tag:void 0,info:s}}getCurrencyName(e){return{ETH:"Ether",BTC:"Bitcoin",LTC:"Litecoin",BCH:"Bitcoincash",BTG:"Bitcoingold"}[e]}async withdraw(e,t,i,s,r={}){this.checkAddress(i),await this.loadMarkets();let a={amount:t,address:i},o="privatePost"+this.getCurrencyName(e)+"Withdrawal";return{info:await this[o](this.extend(a,r)),id:void 0}}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.version+"/"+e;if("public"===t)o+="?"+this.urlencode(s);else{this.checkRequiredCredentials();let e=this.nonce(),t=[e.toString(),this.uid,this.apiKey].join(""),i=this.hmac(this.encode(t),this.encode(this.secret)),o=this.extend({key:this.apiKey,nonce:e,signature:i},s);a=this.json(o),r={"Content-Type":"application/json"}}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if("string"==typeof o&&!(o.length<2||"{"!==o[0]&&"["!==o[0])){let e=JSON.parse(o),t=this.safeValue(e,"error");if(void 0!==t){const i=this.safeString(t,"code"),s=this.id+" "+this.json(e),a=this.exceptions;throw i in a?new a[i](s):new r(this.id+' unknown "error" value: '+this.json(e))}}}}},943:function(e,t,i){"use strict";const s=i(817);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"quoinex",name:"QUOINEX",countries:["JP","SG","VN"],version:"2",rateLimit:1e3,has:{CORS:!1,fetchTickers:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/35047114-0e24ad4a-fbaa-11e7-96a9-69c1a756083b.jpg",api:"https://api.quoine.com",www:"https://quoinex.com/",doc:["https://developers.quoine.com","https://developers.quoine.com/v2"],fees:"https://news.quoinex.com/fees/"}})}}},944:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,AuthenticationError:a,InsufficientFunds:o,InvalidOrder:n,OrderNotFound:d}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"rightbtc",name:"RightBTC",countries:["AE"],has:{privateAPI:!1,fetchTickers:!0,fetchOHLCV:!0,fetchOrders:!0,fetchOpenOrders:!0,fetchClosedOrders:!1,fetchOrder:"emulated",fetchMyTrades:!0},timeframes:{"1m":"min1","5m":"min5","15m":"min15","30m":"min30","1h":"hr1","1d":"day1","1w":"week"},urls:{logo:"https://user-images.githubusercontent.com/1294454/42633917-7d20757e-85ea-11e8-9f53-fffe9fbb7695.jpg",api:"https://www.rightbtc.com/api",www:"https://www.rightbtc.com",doc:["https://www.rightbtc.com/api/trader","https://www.rightbtc.com/api/public"]},api:{public:{get:["getAssetsTradingPairs/zh","trading_pairs","ticker/{trading_pair}","tickers","depth/{trading_pair}","depth/{trading_pair}/{count}","trades/{trading_pair}","trades/{trading_pair}/{count}","candlestick/latest/{trading_pair}","candlestick/{timeSymbol}/{trading_pair}","candlestick/{timeSymbol}/{trading_pair}/{count}"]},trader:{get:["balance/{symbol}","balances","deposits/{asset}/{page}","withdrawals/{asset}/{page}","orderpage/{trading_pair}/{cursor}","orders/{trading_pair}/{ids}","history/{trading_pair}/{ids}","historys/{trading_pair}/{page}","trading_pairs"],post:["order"],delete:["order/{trading_pair}/{ids}"]}},fees:{trading:{maker:.002,taker:.002},funding:{withdraw:{ETP:.01,BTC:.001,ETH:.01,ETC:.01,STORJ:3,LTC:.001,ZEC:.001,BCC:.001,XRB:0,NXS:.1}}},exceptions:{ERR_USERTOKEN_NOT_FOUND:a,ERR_ASSET_NOT_EXISTS:r,ERR_ASSET_NOT_AVAILABLE:r,ERR_BALANCE_NOT_ENOUGH:o,ERR_CREATE_ORDER:n}})}async fetchMarkets(){let e=await this.publicGetTradingPairs(),t=await this.publicGetGetAssetsTradingPairsZh(),i=this.extend(t.result,e.status.message),s=Object.keys(i),r=[];for(let a=0;a<s.length;a++){let e=s[a],t=i[e],o=t.bid_asset_symbol,n=t.ask_asset_symbol,d=this.commonCurrencyCode(o),c=this.commonCurrencyCode(n),h=d+"/"+c,l={amount:parseInt(t.bid_asset_decimals),price:parseInt(t.ask_asset_decimals)};r.push({id:e,symbol:h,base:d,quote:c,baseId:o,quoteId:n,active:!0,precision:l,limits:{amount:{min:Math.pow(10,-l.amount),max:Math.pow(10,l.price)},price:{min:Math.pow(10,-l.price),max:Math.pow(10,l.price)},cost:{min:void 0,max:void 0}},info:t})}return r}parseTicker(e,t){let i=t.symbol,s=e.date,r=this.safeFloat(e,"last")/1e8;return{symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(e,"high")/1e8,low:this.safeFloat(e,"low")/1e8,bid:this.safeFloat(e,"buy")/1e8,bidVolume:void 0,ask:this.safeFloat(e,"sell")/1e8,askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"vol24h")/1e8,quoteVolume:void 0,info:e}}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTickerTradingPair(this.extend({trading_pair:i.id},t));return this.parseTicker(s.result,i)}async fetchTickers(e,t={}){await this.loadMarkets();let i=(await this.publicGetTickers(t)).result,s={};for(let r=0;r<i.length;r++){let e=i[r],t=e.market;if(!(t in this.marketsById))continue;let a=this.marketsById[t];s[a.symbol]=this.parseTicker(e,a)}return s}async fetchOrderBook(e,t={}){await this.loadMarkets();let i=await this.publicGetDepthTradingPair(this.extend({trading_pair:this.marketId(e)},t)),s={},r=["bid","ask"];for(let a=0;a<r.length;a++){let e=r[a];s[e]=[];for(let t=0;t<i.result[e].length;t++){let[r,a,o]=i.result[e][t];s[e].push([r/1e8,a/1e8,o/1e8])}}return this.parseOrderBook(s,void 0,"bid","ask")}parseTrade(e,t){let i=this.safeInteger(e,"date");void 0===i&&"created_at"in e&&(i=this.parse8601(e.created_at));let s=this.safeString(e,"tid");s=this.safeString(e,"trade_id",s);let r=this.safeString(e,"order_id"),a=parseFloat(e.price);void 0!==a&&(a/=1e8);let o=this.safeFloat(e,"amount");void 0!==(o=this.safeFloat(e,"quantity",o))&&(o/=1e8);let n=void 0;if(void 0===t){let i=this.safeString(e,"trading_pair");i in this.markets_by_id&&(t=this.markets_by_id[i])}void 0!==t&&(n=t.symbol);let d=this.costToPrecision(n,a*o);d=parseFloat(d);let c=this.safeString(e,"side");return"b"===(c=c.toLowerCase())?c="buy":"s"===c&&(c="sell"),{timestamp:i,datetime:this.iso8601(i),symbol:n,id:s,order:r,type:"limit",side:c,price:a,amount:o,cost:d,fee:void 0,info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTradesTradingPair(this.extend({trading_pair:r.id},s));return this.parseTrades(a.result,r,t,i)}parseOHLCV(e,t,i="5m",s,r){return[e[0],e[2]/1e8,e[3]/1e8,e[4]/1e8,e[5]/1e8,e[1]/1e8]}async fetchOHLCV(e,t="5m",i,s,r={}){await this.loadMarkets();let a=this.market(e),o=await this.publicGetCandlestickTimeSymbolTradingPair(this.extend({trading_pair:a.id,timeSymbol:this.timeframes[t]},r));return this.parseOHLCVs(o.result,a,t,i,s)}async fetchBalance(e={}){await this.loadMarkets();let t=await this.traderGetBalances(e),i={info:t},s=t.result;for(let r=0;r<s.length;r++){let e=s[r],t=e.asset,a=this.commonCurrencyCode(t);t in this.currencies_by_id&&(a=this.currencies_by_id[t].code);let o=this.safeFloat(e,"balance"),n=this.safeFloat(e,"frozen"),d=void 0;void 0!==o&&(o/=1e8,void 0!==n&&(d=o-(n/=1e8)));let c={free:d,used:n,total:o};i[a]=c}return this.parseBalance(i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o={trading_pair:this.market(e).id,quantity:parseInt(1e8*s),limit:parseInt(1e8*r),type:t.toUpperCase(),side:i.toUpperCase()},n=await this.traderPostOrder(this.extend(o,a));return this.parseOrder(n)}async cancelOrder(e,t,i={}){if(void 0===t)throw new r(this.id+" cancelOrder requires a symbol argument");await this.loadMarkets();let s=this.market(t);return await this.traderDeleteOrderTradingPairIds(this.extend({trading_pair:s.id,ids:e},i))}parseOrderStatus(e){let t={NEW:"open",TRADE:"closed",CANCEL:"canceled"};return e in t?t[e]:e}parseOrder(e,t){let i=this.safeString(e,"id"),s=this.safeValue(e,"status");void 0!==s&&(s=this.parseOrderStatus(s));let r=this.safeString(e,"trading_pair");void 0===t&&r in this.markets_by_id&&(t=this.markets_by_id[r]);let a=r;void 0!==t&&(a=t.symbol);let o=this.safeInteger(e,"created");void 0===o&&(o=this.parse8601(e.created_at)),"time"in e?o=e.time:"transactTime"in e&&(o=e.transactTime);let n=this.safeFloat(e,"limit");void 0!==(n=this.safeFloat(e,"price",n))&&(n/=1e8);let d=this.safeFloat(e,"quantity");void 0!==d&&(d/=1e8);let c=this.safeFloat(e,"filled_quantity");void 0!==c&&(c/=1e8);let h=this.safeFloat(e,"rest");void 0!==h&&(h/=1e8);let l=this.safeFloat(e,"cost");void 0!==l&&(l/=1e8),void 0!==d&&(void 0===h&&void 0!==c&&(h=Math.max(0,d-c)),void 0===c&&void 0!==h&&(c=Math.max(0,d-h)));let u=this.safeString(e,"side");void 0!==u&&(u=u.toLowerCase());let p=this.safeFloat(e,"min_fee"),m=void 0;if(void 0!==p){p/=1e8;let i=void 0;void 0!==t&&(i=t.quote),m={rate:this.safeFloat(e,"fee"),cost:p,currency:i}}return{info:e,id:i,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:void 0,symbol:a,type:"limit",side:u,price:n,amount:d,cost:l,filled:c,remaining:h,status:s,fee:m,trades:void 0}}async fetchOrder(e,t,i={}){if(void 0===t)throw new r(this.id+" fetchOrder requires a symbol argument");await this.loadMarkets();let s=this.market(t),a={trading_pair:s.id,ids:e},o=await this.traderGetOrdersTradingPairIds(this.extend(a,i)),n=this.parseOrders(o.result,s),c=this.indexBy(n,"id");if(!(e in c))throw new d(this.id+" fetchOrder could not find order "+e.toString()+" in open orders.");return c[e]}async fetchOpenOrders(e,t,i,s={}){if(void 0===e)throw new r(this.id+" fetchOpenOrders requires a symbol argument");await this.loadMarkets();let a=this.market(e),o={trading_pair:a.id,cursor:0},n=await this.traderGetOrderpageTradingPairCursor(this.extend(o,s));return this.parseOrders(n.result.orders,a,t,i)}async fetchOrders(e,t,i,s={}){let a=this.safeString(s,"ids");if(void 0===e||void 0===a)throw new r(this.id+" fetchOrders requires a 'symbol' argument and an extra 'ids' parameter. The 'ids' should be an array or a string of one or more order ids separated with slashes.");Array.isArray(a)&&(a=a.join("/")),await this.loadMarkets();let o={trading_pair:this.market(e).id,ids:a},n=await this.traderGetHistoryTradingPairIds(this.extend(o,s));return this.parseOrders(n.result,void 0,t,i)}async fetchMyTrades(e,t,i,s={}){if(void 0===e)throw new r(this.id+" fetchMyTrades requires a symbol argument");await this.loadMarkets();let a=this.market(e),o=await this.traderGetHistorysTradingPairPage(this.extend({trading_pair:a.id,page:0},s));return this.parseTrades(o.result,void 0,t,i)}sign(e,t="public",i="GET",s={},r,a){let o=this.omit(s,this.extractParams(e)),n=this.urls.api+"/"+t+"/"+this.implodeParams(e,s);return"public"===t?Object.keys(o).length&&(n+="?"+this.urlencode(o)):(this.checkRequiredCredentials(),r={apikey:this.apiKey,signature:this.secret},"GET"===i?Object.keys(o).length&&(n+="?"+this.urlencode(o)):(a=this.json(o),r["Content-Type"]="application/json")),{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if("string"==typeof o&&!(o.length<2||"{"!==o[0]&&"["!==o[0])){let e=JSON.parse(o);if("success"in e){if("1"!==this.safeString(e,"success")){const t=this.safeString(e,"message"),i=this.id+" "+this.json(e),s=this.exceptions;if(t in s)throw new s[t](i);throw new r(i)}}}}}},945:function(e,t,i){"use strict";const s=i(788);let{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"southxchange",name:"SouthXchange",countries:["AR"],rateLimit:1e3,has:{CORS:!0,createDepositAddress:!0,fetchOpenOrders:!0,fetchTickers:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27838912-4f94ec8a-60f6-11e7-9e5d-bbf9bd50a559.jpg",api:"https://www.southxchange.com/api",www:"https://www.southxchange.com",doc:"https://www.southxchange.com/Home/Api"},api:{public:{get:["markets","price/{symbol}","prices","book/{symbol}","trades/{symbol}"]},private:{post:["cancelMarketOrders","cancelOrder","generatenewaddress","listOrders","listBalances","placeOrder","withdraw"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:.002,taker:.002}},commonCurrencies:{SMT:"SmartNode",MTC:"Marinecoin"}})}async fetchMarkets(){let e=await this.publicGetMarkets(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s[0],a=s[1],o=this.commonCurrencyCode(r),n=this.commonCurrencyCode(a),d=o+"/"+n,c=d;t.push({id:c,symbol:d,base:o,quote:n,baseId:r,quoteId:a,info:s})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privatePostListBalances();if(!t)throw new r(this.id+" fetchBalance got an unrecognized response");let i={info:t};for(let s=0;s<t.length;s++){let e=t[s],r=e.Currency.toUpperCase(),a=this.currencies_by_id[r].code,o=parseFloat(e.Available),n=parseFloat(e.Deposited),d=parseFloat(e.Unconfirmed),c=this.sum(n,d),h={free:o,used:c-o,total:c};i[a]=h}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetBookSymbol(this.extend({symbol:this.marketId(e)},i));return this.parseOrderBook(s,void 0,"BuyOrders","SellOrders","Price","Amount")}parseTicker(e,t){let i=this.milliseconds(),s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"Last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:void 0,low:void 0,bid:this.safeFloat(e,"Bid"),bidVolume:void 0,ask:this.safeFloat(e,"Ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:this.safeFloat(e,"Variation24Hr"),percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"Volume24Hr"),quoteVolume:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetPrices(t),s=this.indexBy(i,"Market"),r=Object.keys(s),a={};for(let o=0;o<r.length;o++){let e=r[o],t=e,i=void 0;e in this.markets_by_id&&(t=(i=this.markets_by_id[e]).symbol);let n=s[e];a[t]=this.parseTicker(n,i)}return a}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetPriceSymbol(this.extend({symbol:i.id},t));return this.parseTicker(s,i)}parseTrade(e,t){let i=1e3*e.At;return{info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,id:void 0,order:void 0,type:void 0,side:e.Type,price:e.Price,amount:e.Amount}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTradesSymbol(this.extend({symbol:r.id},s));return this.parseTrades(a,r,t,i)}parseOrder(e,t){let i=e.ListingCurrency+"/"+e.ReferenceCurrency,s=this.safeFloat(e,"LimitPrice"),r=this.safeFloat(e,"OriginalAmount"),a=this.safeFloat(e,"Amount"),o=void 0,n=void 0;void 0!==r&&(n=s*r,void 0!==a&&(o=r-a));let d=e.Type.toLowerCase();return{info:e,id:e.Code.toString(),timestamp:void 0,datetime:this.iso8601(void 0),lastTradeTimestamp:void 0,symbol:i,type:"limit",side:d,price:s,amount:r,cost:n,filled:o,remaining:a,status:"open",fee:void 0}}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=void 0;void 0!==e&&(r=this.market(e));let a=await this.privatePostListOrders();return this.parseOrders(a,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n={listingCurrency:o.base,referenceCurrency:o.quote,type:i,amount:s};"limit"===t&&(n.limitPrice=r);let d=await this.privatePostPlaceOrder(this.extend(n,a));return{info:d,id:d.toString()}}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privatePostCancelOrder(this.extend({orderCode:e},i))}async createDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privatePostGeneratenewaddress(this.extend({currency:i.id},t)),r=s.split("|"),a=r.length,o=r[0];this.checkAddress(o);let n=void 0;return a>1&&(n=r[1]),{currency:e,address:o,tag:n,info:s}}async withdraw(e,t,i,s,r={}){this.checkAddress(i);let a={currency:e,address:i,amount:t};return void 0!==s&&(a.address=i+"|"+s),{info:await this.privatePostWithdraw(this.extend(a,r)),id:void 0}}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));if("private"===t){this.checkRequiredCredentials();let e=this.nonce();n=this.extend({key:this.apiKey,nonce:e},n),a=this.json(n),r={"Content-Type":"application/json",Hash:this.hmac(this.encode(a),this.encode(this.secret),"sha512")}}return{url:o,method:i,body:a,headers:r}}}},946:function(e,t,i){"use strict";const s=i(790);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"surbitcoin",name:"SurBitcoin",countries:["VE"],has:{CORS:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/27991511-f0a50194-6481-11e7-99b5-8f02932424cc.jpg",api:{public:"https://api.blinktrade.com/api",private:"https://api.blinktrade.com/tapi"},www:"https://surbitcoin.com",doc:"https://blinktrade.com/docs"},options:{brokerId:"1"}})}}},947:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"therock",name:"TheRockTrading",countries:["MT"],rateLimit:1e3,version:"v1",has:{CORS:!1,fetchTickers:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766869-75057fa2-5ee9-11e7-9a6f-13e641fa4707.jpg",api:"https://api.therocktrading.com",www:"https://therocktrading.com",doc:["https://api.therocktrading.com/doc/v1/index.html","https://api.therocktrading.com/doc/"]},api:{public:{get:["funds/{id}/orderbook","funds/{id}/ticker","funds/{id}/trades","funds/tickers"]},private:{get:["balances","balances/{id}","discounts","discounts/{id}","funds","funds/{id}","funds/{id}/trades","funds/{fund_id}/orders","funds/{fund_id}/orders/{id}","funds/{fund_id}/position_balances","funds/{fund_id}/positions","funds/{fund_id}/positions/{id}","transactions","transactions/{id}","withdraw_limits/{id}","withdraw_limits"],post:["atms/withdraw","funds/{fund_id}/orders"],delete:["funds/{fund_id}/orders/{id}","funds/{fund_id}/orders/remove_all"]}},fees:{trading:{maker:.002,taker:.002},funding:{tierBased:!1,percentage:!1,withdraw:{BTC:5e-4,BCH:5e-4,PPC:.02,ETH:.001,ZEC:.001,LTC:.002,EUR:2.5},deposit:{BTC:0,BCH:0,PPC:0,ETH:0,ZEC:0,LTC:0,EUR:0}}}})}async fetchMarkets(){let e=await this.publicGetFundsTickers(),t=[];for(let i=0;i<e.tickers.length;i++){let s=e.tickers[i],r=s.fund_id,a=r.slice(0,3),o=r.slice(3),n=a+"/"+o;t.push({id:r,symbol:n,base:a,quote:o,info:s})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetBalances(),i=t.balances,s={info:t};for(let r=0;r<i.length;r++){let e=i[r],t=e.currency,a=e.trading_balance,o=e.balance,n={free:a,used:o-a,total:o};s[t]=n}return this.parseBalance(s)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetFundsIdOrderbook(this.extend({id:this.marketId(e)},i)),r=this.parse8601(s.date);return this.parseOrderBook(s,r,"bids","asks","price","amount")}parseTicker(e,t){let i=this.parse8601(e.date),s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"bid"),bidVolume:void 0,ask:this.safeFloat(e,"ask"),askVolume:void 0,vwap:void 0,open:this.safeFloat(e,"open"),close:r,last:r,previousClose:this.safeFloat(e,"close"),change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(e,"volume_traded"),quoteVolume:this.safeFloat(e,"volume"),info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetFundsTickers(t),s=this.indexBy(i.tickers,"fund_id"),r=Object.keys(s),a={};for(let o=0;o<r.length;o++){let e=r[o],t=this.markets_by_id[e],i=t.symbol,n=s[e];a[i]=this.parseTicker(n,t)}return a}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetFundsIdTicker(this.extend({id:i.id},t));return this.parseTicker(s,i)}parseTrade(e,t){t||(t=this.markets_by_id[e.fund_id]);let i=this.parse8601(e.date);return{info:e,id:e.id.toString(),order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:e.side,price:e.price,amount:e.amount}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetFundsIdTrades(this.extend({id:r.id},s));return this.parseTrades(a.trades,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets(),"market"===t&&(r=0);let o=await this.privatePostFundsFundIdOrders(this.extend({fund_id:this.marketId(e),side:i,amount:s,price:r},a));return{info:o,id:o.id.toString()}}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privateDeleteFundsFundIdOrdersId(this.extend({id:e},i))}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/"+this.version+"/"+this.implodeParams(e,s),n=this.omit(s,this.extractParams(e));if("private"===t){this.checkRequiredCredentials();let e=this.nonce().toString(),t=e+o;r={"X-TRT-KEY":this.apiKey,"X-TRT-NONCE":e,"X-TRT-SIGN":this.hmac(this.encode(t),this.encode(this.secret),"sha512")},Object.keys(n).length&&(a=this.json(n),r["Content-Type"]="application/json")}return{url:o,method:i,body:a,headers:r}}async request(e,t="public",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("errors"in n)throw new r(this.id+" "+this.json(n));return n}}},948:function(e,t,i){"use strict";const s=i(788),{InsufficientFunds:r,OrderNotFound:a}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"tidebit",name:"TideBit",countries:["HK"],rateLimit:1e3,version:"v2",has:{fetchDepositAddress:!0,CORS:!0,fetchTickers:!0,fetchOHLCV:!0,withdraw:!0},timeframes:{"1m":"1","5m":"5","15m":"15","30m":"30","1h":"60","2h":"120","4h":"240","12h":"720","1d":"1440","3d":"4320","1w":"10080"},urls:{logo:"https://user-images.githubusercontent.com/1294454/39034921-e3acf016-4480-11e8-9945-a6086a1082fe.jpg",api:"https://www.tidebit.com",www:"https://www.tidebit.com",doc:"https://www.tidebit.com/documents/api_v2"},api:{public:{get:["v2/markets","v2/tickers","v2/tickers/{market}","v2/trades","v2/trades/{market}","v2/order_book","v2/order","v2/k_with_pending_trades","v2/k","v2/depth"],post:[]},private:{get:["v2/deposits","v2/deposit_address","v2/deposit","v2/members/me","v2/addresses/{address}"],post:["v2/order/delete","v2/order","v2/order/multi","v2/order/clear"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:.002,taker:.002},funding:{tierBased:!1,percentage:!0,withdraw:{}}},exceptions:{2002:r,2003:a}})}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e),s=await this.privateGetV2DepositAddress(this.extend({currency:i.id},t));if("success"in s&&s.success){let t=this.safeString(s,"address"),i=this.safeString(s,"addressTag");return{currency:e,address:this.checkAddress(t),tag:i,info:s}}}async fetchMarkets(){let e=await this.publicGetV2Markets(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.id,a=s.name,[o,n]=a.split("/"),d=this.commonCurrencyCode(o),c=this.commonCurrencyCode(n);t.push({id:r,symbol:a,base:d,quote:c,baseId:o,quoteId:n,info:s})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privateGetV2MembersMe()).accounts,i={info:t};for(let s=0;s<t.length;s++){let e=t[s],r=e.currency,a=r.toUpperCase();r in this.currencies_by_id&&(a=this.currencies_by_id[r].code);let o={free:parseFloat(e.balance),used:parseFloat(e.locked),total:0};o.total=this.sum(o.free,o.used),i[a]=o}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r={market:s.id};void 0===t&&(r.limit=t),r.market=s.id;let a=await this.publicGetV2Depth(this.extend(r,i)),o=1e3*a.timestamp;return this.parseOrderBook(a,o)}parseTicker(e,t){let i=1e3*e.at;e=e.ticker;let s=void 0;void 0!==t&&(s=t.symbol);let r=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"buy"),ask:this.safeFloat(e,"sell"),bidVolume:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,change:void 0,percentage:void 0,previousClose:void 0,average:void 0,baseVolume:this.safeFloat(e,"vol"),quoteVolume:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetV2Tickers(t),s=Object.keys(i),r={};for(let a=0;a<s.length;a++){let e=s[a],t=void 0,o=e;if(e in this.markets_by_id)o=(t=this.markets_by_id[e]).symbol;else{let t=e.slice(0,3),i=e.slice(3,6);t=t.toUpperCase(),i=i.toUpperCase(),o=(t=this.commonCurrencyCode(t))+"/"+(i=this.commonCurrencyCode(i))}let n=i[e];r[o]=this.parseTicker(n,t)}return r}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetV2TickersMarket(this.extend({market:i.id},t));return this.parseTicker(s,i)}parseTrade(e,t){let i=this.parse8601(e.created_at);return{id:e.id.toString(),timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:void 0,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"volume"),cost:this.safeFloat(e,"funds"),info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetV2Trades(this.extend({market:r.id},s));return this.parseTrades(a,r,t,i)}parseOHLCV(e,t,i="1m",s,r){return[1e3*e[0],e[1],e[2],e[3],e[4],e[5]]}async fetchOHLCV(e,t="1m",i,s,r={}){await this.loadMarkets();let a=this.market(e);void 0===s&&(s=30);let o={market:a.id,period:this.timeframes[t],limit:s};o.timestamp=void 0!==i?i:18e5;let n=await this.publicGetV2K(this.extend(o,r));return this.parseOHLCVs(n,a,t,i,s)}parseOrder(e,t){let i=void 0;if(void 0!==t)i=t.symbol;else{let t=e.market;i=this.markets_by_id[t].symbol}let s=this.parse8601(e.created_at),r=e.state,a=void 0;return"done"===r?a="closed":"wait"===r?a="open":"cancel"===r&&(a="canceled"),{id:e.id.toString(),timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,status:a,symbol:i,type:e.ord_type,side:e.side,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"volume"),filled:this.safeFloat(e,"executed_volume"),remaining:this.safeFloat(e,"remaining_volume"),trades:void 0,fee:void 0,info:e}}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o={market:this.marketId(e),side:i,volume:s.toString(),ord_type:t};"limit"===t&&(o.price=r.toString());let n=await this.privatePostV2Order(this.extend(o,a)),d=this.markets_by_id[n.market];return this.parseOrder(n,d)}async cancelOrder(e,t,i={}){await this.loadMarkets();let s=await this.privatePostV2OrderDelete({id:e}),r=this.parseOrder(s),o=r.status;if("closed"===o||"canceled"===o)throw new a(this.id+" "+this.json(r));return r}async withdraw(e,t,i,s,r={}){return this.checkAddress(i),await this.loadMarkets(),{info:await this.privatePostWithdraw(this.extend({currency:e.toLowerCase(),sum:t,address:i},r)),id:void 0}}nonce(){return this.milliseconds()}encodeParams(e){return this.urlencode(this.keysort(e))}sign(e,t="public",i="GET",s={},r,a){let o="/api/"+this.implodeParams(e,s)+".json",n=this.omit(s,this.extractParams(e)),d=this.urls.api+o;if("public"===t)Object.keys(n).length&&(d+="?"+this.urlencode(n));else{this.checkRequiredCredentials();let e=this.nonce().toString(),t=this.keysort(this.extend({access_key:this.apiKey,tonce:e},s)),n=this.urlencode(t),c=i+"|"+o+"|"+n,h=n+"&signature="+this.hmac(this.encode(c),this.encode(this.secret));"GET"===i?d+="?"+h:(a=h,r={"Content-Type":"application/x-www-form-urlencoded"})}return{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a){if(400===e){const e=JSON.parse(a),t=this.safeValue(e,"error"),i=this.safeString(t,"code"),s=this.id+" "+this.json(e),r=this.exceptions;if(i in r)throw new r[i](s)}}}},949:function(e,t,i){"use strict";const s=i(791);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"tidex",name:"Tidex",countries:["UK"],rateLimit:2e3,version:"3",has:{fetchCurrencies:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/30781780-03149dc4-a12e-11e7-82bb-313b269d24d4.jpg",api:{web:"https://web.tidex.com/api",public:"https://api.tidex.com/api/3",private:"https://api.tidex.com/tapi"},www:"https://tidex.com",doc:"https://tidex.com/exchange/public-api",fees:["https://tidex.com/exchange/assets-spec","https://tidex.com/exchange/pairs-spec"]},api:{web:{get:["currency","pairs","tickers","orders","ordershistory","trade-data","trade-data/{id}"]}},fees:{trading:{tierBased:!1,percentage:!0,taker:.001,maker:.001}},commonCurrencies:{MGO:"WMGO",EMGO:"MGO"}})}async fetchCurrencies(e={}){let t=await this.webGetCurrency(e),i={};for(let s=0;s<t.length;s++){let e=t[s],r=e.symbol,a=e.amountPoint,o=r.toUpperCase();o=this.commonCurrencyCode(o);let n=!0===e.visible,d=!0===e.withdrawEnable,c=!0===e.depositEnable;d&&c||(n=!1),i[o]={id:r,code:o,name:e.name,active:n,precision:a,funding:{withdraw:{active:d,fee:e.withdrawFee},deposit:{active:c,fee:0}},limits:{amount:{min:void 0,max:Math.pow(10,a)},price:{min:Math.pow(10,-a),max:Math.pow(10,a)},cost:{min:void 0,max:void 0},withdraw:{min:e.withdrawMinAmout,max:void 0},deposit:{min:e.depositMinAmount,max:void 0}},info:e}}return i}getVersionString(){return""}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t],n=this.omit(s,this.extractParams(e));if("private"===t){this.checkRequiredCredentials();let t=this.nonce();a=this.urlencode(this.extend({nonce:t,method:e},n));let i=this.signBodyWithSecret(a);r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:i}}else"public"===t?(o+=this.getVersionString()+"/"+this.implodeParams(e,s),Object.keys(n).length&&(o+="?"+this.urlencode(n))):(o+="/"+this.implodeParams(e,s),"GET"===i?Object.keys(n).length&&(o+="?"+this.urlencode(n)):Object.keys(n).length&&(a=this.urlencode(n),r={"Content-Type":"application/x-www-form-urlencoded"}));return{url:o,method:i,body:a,headers:r}}}},950:function(e,t,i){"use strict";const s=i(790);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"urdubit",name:"UrduBit",countries:["PK"],has:{CORS:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/27991453-156bf3ae-6480-11e7-82eb-7295fe1b5bb4.jpg",api:{public:"https://api.blinktrade.com/api",private:"https://api.blinktrade.com/tapi"},www:"https://urdubit.com",doc:"https://blinktrade.com/docs"},options:{brokerId:"8"}})}}},951:function(e,t,i){"use strict";const s=i(788);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"vaultoro",name:"Vaultoro",countries:["CH"],rateLimit:1e3,version:"1",has:{CORS:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766880-f205e870-5ee9-11e7-8fe2-0d5b15880752.jpg",api:"https://api.vaultoro.com",www:"https://www.vaultoro.com",doc:"https://api.vaultoro.com"},commonCurrencies:{GLD:"Gold"},api:{public:{get:["bidandask","buyorders","latest","latesttrades","markets","orderbook","sellorders","transactions/day","transactions/hour","transactions/month"]},private:{get:["balance","mytrades","orders"],post:["buy/{symbol}/{type}","cancel/{id}","sell/{symbol}/{type}","withdraw"]}}})}async fetchMarkets(){let e=[],t=(await this.publicGetMarkets()).data,i=t.MarketCurrency,s=t.BaseCurrency,r=this.commonCurrencyCode(i),a=this.commonCurrencyCode(s),o=r+"/"+a,n=t.MarketName;return e.push({id:n,symbol:o,base:r,quote:a,baseId:i,quoteId:s,info:t}),e}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privateGetBalance()).data,i={info:t};for(let s=0;s<t.length;s++){let e=t[s],r=e.currency_code.toUpperCase(),a=r;r in this.currencies_by_id[r]&&(a=this.currencies_by_id[r].code);let o=e.cash,n=e.reserved,d={free:o,used:n,total:this.sum(o,n)};i[a]=d}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetOrderbook(i),r={bids:s.data[0].b,asks:s.data[1].s};return this.parseOrderBook(r,void 0,"bids","asks","Gold_Price","Gold_Amount")}async fetchTicker(e,t={}){await this.loadMarkets();let i=await this.publicGetBidandask(t),s=i.bids.length,r=i.bids[s-1],a=i.asks[0],o=(await this.publicGetMarkets(t)).data,n=this.milliseconds(),d=this.safeFloat(o,"LastPrice");return{symbol:e,timestamp:n,datetime:this.iso8601(n),high:this.safeFloat(o,"24hHigh"),low:this.safeFloat(o,"24hLow"),bid:r[0],bidVolume:void 0,ask:a[0],askVolume:void 0,vwap:void 0,open:void 0,close:d,last:d,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:this.safeFloat(o,"24hVolume"),info:o}}parseTrade(e,t){let i=this.parse8601(e.Time);return{id:void 0,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:void 0,type:void 0,side:void 0,price:e.Gold_Price,amount:e.Gold_Amount}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTransactionsDay(s);return this.parseTrades(a,r,t,i)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o=this.market(e),n="privatePost"+this.capitalize(i)+"SymbolType",d=await this[n](this.extend({symbol:o.quoteId.toLowerCase(),type:t,gld:s,price:r||1},a));return{info:d,id:d.data.Order_ID}}async cancelOrder(e,t,i={}){return await this.loadMarkets(),await this.privatePostCancelId(this.extend({id:e},i))}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/";if("public"===t)o+=e;else{this.checkRequiredCredentials();let t=this.nonce();o+=this.version+"/"+this.implodeParams(e,s);let i=this.extend({nonce:t,apikey:this.apiKey},this.omit(s,this.extractParams(e)));o+="?"+this.urlencode(i),r={"Content-Type":"application/json","X-Signature":this.hmac(this.encode(o),this.encode(this.secret))}}return{url:o,method:i,body:a,headers:r}}}},952:function(e,t,i){"use strict";const s=i(790);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"vbtc",name:"VBTC",countries:["VN"],has:{CORS:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/27991481-1f53d1d8-6481-11e7-884e-21d17e7939db.jpg",api:{public:"https://api.blinktrade.com/api",private:"https://api.blinktrade.com/tapi"},www:"https://vbtc.exchange",doc:"https://blinktrade.com/docs"},options:{brokerId:"3"}})}}},953:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"virwox",name:"VirWoX",countries:["AT","EU"],rateLimit:1e3,has:{CORS:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766894-6da9d360-5eea-11e7-90aa-41f2711b7405.jpg",api:{public:"http://api.virwox.com/api/json.php",private:"https://www.virwox.com/api/trading.php"},www:"https://www.virwox.com",doc:"https://www.virwox.com/developers.php"},requiredCredentials:{apiKey:!0,secret:!1,login:!0,password:!0},api:{public:{get:["getInstruments","getBestPrices","getMarketDepth","estimateMarketOrder","getTradedPriceVolume","getRawTradeData","getStatistics","getTerminalList","getGridList","getGridStatistics"],post:["getInstruments","getBestPrices","getMarketDepth","estimateMarketOrder","getTradedPriceVolume","getRawTradeData","getStatistics","getTerminalList","getGridList","getGridStatistics"]},private:{get:["cancelOrder","getBalances","getCommissionDiscount","getOrders","getTransactions","placeOrder"],post:["cancelOrder","getBalances","getCommissionDiscount","getOrders","getTransactions","placeOrder"]}}})}async fetchMarkets(){let e=await this.publicGetGetInstruments(),t=Object.keys(e.result),i=[];for(let s=0;s<t.length;s++){let r=e.result[t[s]],a=r.instrumentID,o=r.symbol,n=r.longCurrency,d=r.shortCurrency;i.push({id:a,symbol:o,base:n,quote:d,info:r})}return i}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privatePostGetBalances()).result.accountList,i={info:t};for(let s=0;s<t.length;s++){let e=t[s],r=e.currency,a=e.balance,o={free:a,used:0,total:a};i[r]=o}return this.parseBalance(i)}async fetchMarketPrice(e,t={}){await this.loadMarkets();let i=(await this.publicPostGetBestPrices(this.extend({symbols:[e]},t))).result;return{bid:this.safeFloat(i[0],"bestBuyPrice"),ask:this.safeFloat(i[0],"bestSellPrice")}}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s={symbols:[e]};void 0!==t&&(s.buyDepth=t,s.sellDepth=t);let r=(await this.publicPostGetMarketDepth(this.extend(s,i))).result[0];return this.parseOrderBook(r,void 0,"buy","sell","price","volume")}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.milliseconds(),s=i-864e5,r=(await this.publicGetGetTradedPriceVolume(this.extend({instrument:e,endDate:this.ymdhms(i),startDate:this.ymdhms(s),HLOC:1},t))).result.priceVolumeList,a=Object.keys(r),o=r[a[a.length-1]],n=this.milliseconds(),d=this.safeFloat(o,"close");return{symbol:e,timestamp:n,datetime:this.iso8601(n),high:this.safeFloat(o,"high"),low:this.safeFloat(o,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeFloat(o,"open"),close:d,last:d,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeFloat(o,"longVolume"),quoteVolume:this.safeFloat(o,"shortVolume"),info:o}}parseTrade(e,t){let i=1e3*this.safeInteger(e,"time");return{id:e.tid,timestamp:i,datetime:this.iso8601(i),order:void 0,symbol:t,type:void 0,side:void 0,price:this.safeFloat(e,"price"),amount:this.safeFloat(e,"vol"),fee:void 0,info:e}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=(await this.publicGetGetRawTradeData(this.extend({instrument:e,timespan:3600},s))).result.data;return this.parseTrades(a,r)}async createOrder(e,t,i,s,r,a={}){await this.loadMarkets();let o={instrument:this.market(e).symbol,orderType:i.toUpperCase(),amount:s};"limit"===t&&(o.price=r);let n=await this.privatePostPlaceOrder(this.extend(o,a));return{info:n,id:n.result.orderID.toString()}}async cancelOrder(e,t,i={}){return await this.privatePostCancelOrder(this.extend({orderID:e},i))}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api[t],n={};"private"===t&&(this.checkRequiredCredentials(),n.key=this.apiKey,n.user=this.login,n.pass=this.password);let d=this.nonce();return"GET"===i?o+="?"+this.urlencode(this.extend({method:e,id:d},n,s)):(r={"Content-Type":"application/json"},a=this.json({method:e,params:this.extend(n,s),id:d})),{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,o){if(200===e){if("{"!==o[0]&&"["!==o[0])throw new r(this.id+" returned a non-JSON reply: "+o);{let e=JSON.parse(o);if(!("result"in e))throw new r(this.id+" malformed response: no result in response: "+o);{let t=e.result;if("errorCode"in t){if("OK"!==t.errorCode)throw new r(this.id+" error returned: "+o)}}}}}}},954:function(e,t,i){"use strict";const s=i(791),{ExchangeError:r,InsufficientFunds:a,OrderNotFound:o,DDoSProtection:n}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"wex",name:"WEX",countries:["NZ"],version:"3",has:{CORS:!1,fetchTickers:!0,fetchDepositAddress:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/30652751-d74ec8f8-9e31-11e7-98c5-71469fcef03e.jpg",api:{public:"https://wex.nz/api",private:"https://wex.nz/tapi"},www:"https://wex.nz",doc:["https://wex.nz/api/3/docs","https://wex.nz/tapi/docs"],fees:"https://wex.nz/fees"},api:{public:{get:["info","ticker/{pair}","depth/{pair}","trades/{pair}"]},private:{post:["getInfo","Trade","ActiveOrders","OrderInfo","CancelOrder","TradeHistory","TransHistory","CoinDepositAddress","WithdrawCoin","CreateCoupon","RedeemCoupon"]}},fees:{trading:{maker:.002,taker:.002},funding:{withdraw:{BTC:.001,LTC:.001,NMC:.1,NVC:.1,PPC:.1,DASH:.001,ETH:.003,BCH:.001,ZEC:.001}}},exceptions:{messages:{"bad status":o,"Requests too often":n,"not available":n,"external service unavailable":n}},commonCurrencies:{RUR:"RUB"}})}parseTicker(e,t){let i=1e3*e.updated,s=void 0;t&&(s=t.symbol);let r=this.safeFloat(e,"last");return{symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"high"),low:this.safeFloat(e,"low"),bid:this.safeFloat(e,"sell"),bidVolume:void 0,ask:this.safeFloat(e,"buy"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeFloat(e,"avg"),baseVolume:this.safeFloat(e,"vol_cur"),quoteVolume:this.safeFloat(e,"vol"),info:e}}async fetchDepositAddress(e,t={}){let i={coinName:this.commonCurrencyCode(e)},s=await this.privatePostCoinDepositAddress(this.extend(i,t));return{currency:e,address:s.return.address,tag:void 0,info:s}}handleErrors(e,t,i,s,o,n){if(200===e){if("{"!==n[0])return;let e=JSON.parse(n);if("success"in e&&!e.success){const t=this.safeString(e,"error");if(!t)throw new r(this.id+" returned a malformed error: "+n);if("no orders"===t)return;const i=this.id+" "+this.json(e),s=this.exceptions.messages;if(t in s)throw new s[t](i);throw t.indexOf("It is not enough")>=0?new a(i):new r(i)}}}}},955:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r,NotSupported:a,AuthenticationError:o}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"xbtce",name:"xBTCe",countries:["RU"],rateLimit:2e3,version:"v1",has:{publicAPI:!1,CORS:!1,fetchTickers:!0,createMarketOrder:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/28059414-e235970c-662c-11e7-8c3a-08e31f78684b.jpg",api:"https://cryptottlivewebapi.xbtce.net:8443/api",www:"https://www.xbtce.com",doc:["https://www.xbtce.com/tradeapi","https://support.xbtce.info/Knowledgebase/Article/View/52/25/xbtce-exchange-api"]},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},api:{public:{get:["currency","currency/{filter}","level2","level2/{filter}","quotehistory/{symbol}/{periodicity}/bars/ask","quotehistory/{symbol}/{periodicity}/bars/bid","quotehistory/{symbol}/level2","quotehistory/{symbol}/ticks","symbol","symbol/{filter}","tick","tick/{filter}","ticker","ticker/{filter}","tradesession"]},private:{get:["tradeserverinfo","tradesession","currency","currency/{filter}","level2","level2/{filter}","symbol","symbol/{filter}","tick","tick/{filter}","account","asset","asset/{id}","position","position/{id}","trade","trade/{id}","quotehistory/{symbol}/{periodicity}/bars/ask","quotehistory/{symbol}/{periodicity}/bars/ask/info","quotehistory/{symbol}/{periodicity}/bars/bid","quotehistory/{symbol}/{periodicity}/bars/bid/info","quotehistory/{symbol}/level2","quotehistory/{symbol}/level2/info","quotehistory/{symbol}/periodicities","quotehistory/{symbol}/ticks","quotehistory/{symbol}/ticks/info","quotehistory/cache/{symbol}/{periodicity}/bars/ask","quotehistory/cache/{symbol}/{periodicity}/bars/bid","quotehistory/cache/{symbol}/level2","quotehistory/cache/{symbol}/ticks","quotehistory/symbols","quotehistory/version"],post:["trade","tradehistory"],put:["trade"],delete:["trade"]}}})}async fetchMarkets(){let e=await this.privateGetSymbol(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.Symbol,a=s.MarginCurrency,o=s.ProfitCurrency;"DSH"===a&&(a="DASH");let n=a+"/"+o;n=s.IsTradeAllowed?n:r,t.push({id:r,symbol:n,base:a,quote:o,info:s})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=await this.privateGetAsset(),i={info:t};for(let s=0;s<t.length;s++){let e=t[s],r=e.Currency.toUpperCase();"DSH"===r&&(r="DASH");let a={free:e.FreeAmount,used:e.LockedAmount,total:e.Amount};i[r]=a}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=this.market(e),r=await this.privateGetLevel2Filter(this.extend({filter:s.id},i)),a=(r=r[0]).Timestamp;return this.parseOrderBook(r,a,"Bids","Asks","Price","Volume")}parseTicker(e,t){let i=0,s=void 0;"LastBuyTimestamp"in e&&i<e.LastBuyTimestamp&&(i=e.LastBuyTimestamp,s=e.LastBuyPrice),"LastSellTimestamp"in e&&i<e.LastSellTimestamp&&(i=e.LastSellTimestamp,s=e.LastSellPrice),i||(i=this.milliseconds());let r=void 0;return t&&(r=t.symbol),{symbol:r,timestamp:i,datetime:this.iso8601(i),high:e.DailyBestBuyPrice,low:e.DailyBestSellPrice,bid:e.BestBid,bidVolume:void 0,ask:e.BestAsk,askVolume:void 0,vwap:void 0,open:void 0,close:s,last:s,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:e.DailyTradedTotalVolume,quoteVolume:void 0,info:e}}async fetchTickers(e,t={}){await this.loadMarkets();let i=await this.publicGetTicker(t);i=this.indexBy(i,"Symbol");let s=Object.keys(i),r={};for(let a=0;a<s.length;a++){let e=s[a],t=void 0,o=void 0;if(e in this.markets_by_id)o=(t=this.markets_by_id[e]).symbol;else{let t=e.slice(0,3),i=e.slice(3,6);"DSH"===t&&(t="DASH"),"DSH"===i&&(i="DASH"),o=t+"/"+i}let n=i[e];r[o]=this.parseTicker(n,t)}return r}async fetchTicker(e,t={}){await this.loadMarkets();let i=this.market(e),s=await this.publicGetTickerFilter(this.extend({filter:i.id},t));if(s.length<1)throw new r(this.id+" fetchTicker returned empty response, xBTCe public API error");let a=(s=this.indexBy(s,"Symbol"))[i.id];return this.parseTicker(a,i)}async fetchTrades(e,t,i,s={}){return await this.loadMarkets(),await this.privateGetTrade(s)}parseOHLCV(e,t,i="1m",s,r){return[e.Timestamp,e.Open,e.High,e.Low,e.Close,e.Volume]}async fetchOHLCV(e,t="1m",i,s,r={}){throw new a(this.id+" fetchOHLCV is disabled by the exchange")}async createOrder(e,t,i,s,a,o={}){if(await this.loadMarkets(),"market"===t)throw new r(this.id+" allows limit orders only");let n=await this.privatePostTrade(this.extend({pair:this.marketId(e),type:i,amount:s,rate:a},o));return{info:n,id:n.Id.toString()}}async cancelOrder(e,t,i={}){return await this.privateDeleteTrade(this.extend({Type:"Cancel",Id:e},i))}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r,a){if(!this.apiKey)throw new o(this.id+" requires apiKey for all requests, their public API is always busy");if(!this.uid)throw new o(this.id+" requires uid property for authentication and trading, their public API is always busy");let n=this.urls.api+"/"+this.version;"public"===t&&(n+="/"+t),n+="/"+this.implodeParams(e,s);let d=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(d).length&&(n+="?"+this.urlencode(d));else{this.checkRequiredCredentials(),r={"Accept-Encoding":"gzip, deflate"};let e=this.nonce().toString();"POST"===i&&(Object.keys(d).length?(r["Content-Type"]="application/json",a=this.json(d)):n+="?"+this.urlencode(d));let t=e+this.uid+this.apiKey+i+n;a&&(t+=a);let s=this.hmac(this.encode(t),this.encode(this.secret),"sha256","base64"),o=this.uid+":"+this.apiKey+":"+e+":"+this.binaryToString(s);r.Authorization="HMAC "+o}return{url:n,method:i,body:a,headers:r}}}},956:function(e,t,i){"use strict";const s=i(791),{ExchangeError:r,InsufficientFunds:a,InvalidOrder:o,DDoSProtection:n}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"yobit",name:"YoBit",countries:["RU"],rateLimit:3e3,version:"3",has:{createDepositAddress:!0,fetchDepositAddress:!0,CORS:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766910-cdcbfdae-5eea-11e7-9859-03fea873272d.jpg",api:{public:"https://yobit.net/api",private:"https://yobit.net/tapi"},www:"https://www.yobit.net",doc:"https://www.yobit.net/en/api/",fees:"https://www.yobit.net/en/fees/"},api:{public:{get:["depth/{pair}","info","ticker/{pair}","trades/{pair}"]},private:{post:["ActiveOrders","CancelOrder","GetDepositAddress","getInfo","OrderInfo","Trade","TradeHistory","WithdrawCoinsToAddress"]}},fees:{trading:{maker:.002,taker:.002},funding:{withdraw:{}}},commonCurrencies:{AIR:"AirCoin",ANI:"ANICoin",ANT:"AntsCoin",ATMCHA:"ATM",ASN:"Ascension",AST:"Astral",ATM:"Autumncoin",BCC:"BCH",BCS:"BitcoinStake",BLN:"Bulleon",BOT:"BOTcoin",BON:"BONES",BPC:"BitcoinPremium",BTS:"Bitshares2",CAT:"BitClave",CMT:"CometCoin",COV:"Coven Coin",COVX:"COV",CPC:"Capricoin",CRC:"CryCash",CS:"CryptoSpots",DCT:"Discount",DGD:"DarkGoldCoin",DIRT:"DIRTY",DROP:"FaucetCoin",EKO:"EkoCoin",ENTER:"ENTRC",EPC:"ExperienceCoin",ERT:"Eristica Token",ESC:"EdwardSnowden",EUROPE:"EUROP",EXT:"LifeExtension",FUNK:"FUNKCoin",GCC:"GlobalCryptocurrency",GEN:"Genstake",GENE:"Genesiscoin",GOLD:"GoldMint",HTML5:"HTML",HYPERX:"HYPER",ICN:"iCoin",INSANE:"INSN",JNT:"JointCoin",JPC:"JupiterCoin",KNC:"KingN Coin",LBTCX:"LiteBitcoin",LIZI:"LiZi",LOC:"LocoCoin",LOCX:"LOC",LUNYR:"LUN",LUN:"LunarCoin",MDT:"Midnight",NAV:"NavajoCoin",NBT:"NiceBytes",OMG:"OMGame",PAC:"$PAC",PLAY:"PlayCoin",PIVX:"Darknet",PRS:"PRE",PUTIN:"PUT",STK:"StakeCoin",SUB:"Subscriptio",PAY:"EPAY",PLC:"Platin Coin",RCN:"RCoin",REP:"Republicoin",RUR:"RUB",XIN:"XINCoin"},options:{fetchOrdersRequiresSymbol:!0}})}parseOrderStatus(e){let t={0:"open",1:"closed",2:"canceled",3:"open"};return e in t?t[e]:e}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privatePostGetInfo()).return,i={info:t},s={free:"funds",total:"funds_incl_orders"},r=Object.keys(s);for(let a=0;a<r.length;a++){let e=r[a],o=s[e];if(o in t){let s=Object.keys(t[o]);for(let r=0;r<s.length;r++){let a=s[r],n=a.toUpperCase(),d=this.commonCurrencyCode(n),c=void 0;(c=d in i?i[d]:this.account())[e]=t[o][a],void 0!==c.total&&void 0!==c.free&&(c.used=c.total-c.free),i[d]=c}}}return this.parseBalance(i)}async createDepositAddress(e,t={}){let i=await this.fetchDepositAddress(e,this.extend({need_new:1},t)),s=this.safeString(i,"address");return this.checkAddress(s),{currency:e,address:s,tag:void 0,info:i.info}}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i={coinName:this.currency(e).id,need_new:0},s=await this.privatePostGetDepositAddress(this.extend(i,t)),r=this.safeString(s.return,"address");return this.checkAddress(r),{currency:e,address:r,tag:void 0,info:s}}async withdraw(e,t,i,s,r={}){this.checkAddress(i),await this.loadMarkets();let a=this.currency(e);return{info:await this.privatePostWithdrawCoinsToAddress(this.extend({coinName:a.id,amount:t,address:i},r)),id:void 0}}handleErrors(e,t,i,s,d,c){if("{"===c[0]){let e=JSON.parse(c);if("success"in e&&!e.success){if("error_log"in e){if(e.error_log.indexOf("Insufficient funds")>=0)throw new a(this.id+" "+this.json(e));if("Requests too often"===e.error_log)throw new n(this.id+" "+this.json(e));if("not available"===e.error_log||"external service unavailable"===e.error_log)throw new n(this.id+" "+this.json(e));if("Total transaction amount"===e.error_log)throw new o(this.id+" "+this.json(e))}throw new r(this.id+" "+this.json(e))}}}}},957:function(e,t,i){"use strict";const s=i(797);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"yunbi",name:"YUNBI",countries:["CN"],rateLimit:1e3,version:"v2",has:{CORS:!1,fetchTickers:!0,fetchOHLCV:!0},timeframes:{"1m":"1","5m":"5","15m":"15","30m":"30","1h":"60","2h":"120","4h":"240","12h":"720","1d":"1440","3d":"4320","1w":"10080"},urls:{logo:"https://user-images.githubusercontent.com/1294454/28570548-4d646c40-7147-11e7-9cf6-839b93e6d622.jpg",extension:".json",api:"https://yunbi.com",www:"https://yunbi.com",doc:["https://yunbi.com/documents/api/guide","https://yunbi.com/swagger/"]},api:{public:{get:["tickers","tickers/{market}","markets","order_book","k","depth","trades","k_with_pending_trades","timestamp","addresses/{address}","partners/orders/{id}/trades"]},private:{get:["deposits","members/me","deposit","deposit_address","order","orders","trades/my"],post:["order/delete","orders","orders/multi","orders/clear"]}}})}}},958:function(e,t,i){"use strict";const s=i(788),{ExchangeError:r}=i(787);e.exports=class extends s{describe(){return this.deepExtend(super.describe(),{id:"zaif",name:"Zaif",countries:["JP"],rateLimit:2e3,version:"1",has:{CORS:!1,createMarketOrder:!1,fetchOpenOrders:!0,fetchClosedOrders:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766927-39ca2ada-5eeb-11e7-972f-1b4199518ca6.jpg",api:"https://api.zaif.jp",www:"https://zaif.jp",doc:["http://techbureau-api-document.readthedocs.io/ja/latest/index.html","https://corp.zaif.jp/api-docs","https://corp.zaif.jp/api-docs/api_links","https://www.npmjs.com/package/zaif.jp","https://github.com/you21979/node-zaif"],fees:"https://zaif.jp/fee?lang=en"},fees:{trading:{percentage:!0,taker:-1e-4,maker:-5e-4}},api:{public:{get:["depth/{pair}","currencies/{pair}","currencies/all","currency_pairs/{pair}","currency_pairs/all","last_price/{pair}","ticker/{pair}","trades/{pair}"]},private:{post:["active_orders","cancel_order","deposit_history","get_id_info","get_info","get_info2","get_personal_info","trade","trade_history","withdraw","withdraw_history"]},ecapi:{post:["createInvoice","getInvoice","getInvoiceIdsByOrderNumber","cancelInvoice"]},tlapi:{post:["get_positions","position_history","active_positions","create_position","change_position","cancel_position"]},fapi:{get:["groups/{group_id}","last_price/{group_id}/{pair}","ticker/{group_id}/{pair}","trades/{group_id}/{pair}","depth/{group_id}/{pair}"]}}})}async fetchMarkets(){let e=await this.publicGetCurrencyPairsAll(),t=[];for(let i=0;i<e.length;i++){let s=e[i],r=s.currency_pair,a=s.name,[o,n]=a.split("/"),d={amount:-Math.log10(s.item_unit_step),price:s.aux_unit_point};t.push({id:r,symbol:a,base:o,quote:n,active:!0,precision:d,limits:{amount:{min:this.safeFloat(s,"item_unit_min"),max:void 0},price:{min:this.safeFloat(s,"aux_unit_min"),max:void 0},cost:{min:void 0,max:void 0}},info:s})}return t}async fetchBalance(e={}){await this.loadMarkets();let t=(await this.privatePostGetInfo()).return,i={info:t},s=Object.keys(t.funds);for(let r=0;r<s.length;r++){let e=s[r],a=t.funds[e],o=e.toUpperCase(),n={free:a,used:0,total:a};"deposit"in t&&e in t.deposit&&(n.total=t.deposit[e],n.used=n.total-n.free),i[o]=n}return this.parseBalance(i)}async fetchOrderBook(e,t,i={}){await this.loadMarkets();let s=await this.publicGetDepthPair(this.extend({pair:this.marketId(e)},i));return this.parseOrderBook(s)}async fetchTicker(e,t={}){await this.loadMarkets();let i=await this.publicGetTickerPair(this.extend({pair:this.marketId(e)},t)),s=this.milliseconds(),r=i.vwap,a=i.volume,o=a*r,n=i.last;return{symbol:e,timestamp:s,datetime:this.iso8601(s),high:i.high,low:i.low,bid:i.bid,bidVolume:void 0,ask:i.ask,askVolume:void 0,vwap:r,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:o,info:i}}parseTrade(e,t){let i="bid"===e.trade_type?"buy":"sell",s=1e3*e.date,r=this.safeString(e,"id");return r=this.safeString(e,"tid",r),t||(t=this.markets_by_id[e.currency_pair]),{id:r.toString(),info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:void 0,side:i,price:e.price,amount:e.amount}}async fetchTrades(e,t,i,s={}){await this.loadMarkets();let r=this.market(e),a=await this.publicGetTradesPair(this.extend({pair:r.id},s));if(1===a.length){let e=a[0];Object.keys(e).length||(a=[])}return this.parseTrades(a,r,t,i)}async createOrder(e,t,i,s,a,o={}){if(await this.loadMarkets(),"market"===t)throw new r(this.id+" allows limit orders only");let n=await this.privatePostTrade(this.extend({currency_pair:this.marketId(e),action:"buy"===i?"bid":"ask",amount:s,price:a},o));return{info:n,id:n.return.order_id.toString()}}async cancelOrder(e,t,i={}){return await this.privatePostCancelOrder(this.extend({order_id:e},i))}parseOrder(e,t){let i="bid"===e.action?"buy":"sell",s=1e3*parseInt(e.timestamp);t||(t=this.markets_by_id[e.currency_pair]);let r=e.price,a=e.amount;return{id:e.id.toString(),timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,status:"open",symbol:t.symbol,type:"limit",side:i,price:r,cost:r*a,amount:a,filled:void 0,remaining:void 0,trades:void 0,fee:void 0}}parseOrders(e,t,i,s){let r=Object.keys(e),a=[];for(let o=0;o<r.length;o++){let i=r[o],s=e[i],n=this.extend(s,{id:i});a.push(this.parseOrder(n,t))}return this.filterBySinceLimit(a,i,s)}async fetchOpenOrders(e,t,i,s={}){await this.loadMarkets();let r=void 0,a={};void 0!==e&&(r=this.market(e),a.currency_pair=r.id);let o=await this.privatePostActiveOrders(this.extend(a,s));return this.parseOrders(o.return,r,t,i)}async fetchClosedOrders(e,t,i,s={}){await this.loadMarkets();let r=void 0,a={};void 0!==e&&(r=this.market(e),a.currency_pair=r.id);let o=await this.privatePostTradeHistory(this.extend(a,s));return this.parseOrders(o.return,r,t,i)}async withdraw(e,t,i,s,a={}){if(this.checkAddress(i),await this.loadMarkets(),"JPY"===e)throw new r(this.id+" does not allow "+e+" withdrawals");let o=await this.privatePostWithdraw(this.extend({currency:e,amount:t,address:i},a));return{info:o,id:o.return.txid,fee:o.return.fee}}nonce(){return parseFloat(this.milliseconds()/1e3).toFixed(8)}sign(e,t="public",i="GET",s={},r,a){let o=this.urls.api+"/";if("public"===t)o+="api/"+this.version+"/"+this.implodeParams(e,s);else if("fapi"===t)o+="fapi/"+this.version+"/"+this.implodeParams(e,s);else{this.checkRequiredCredentials(),o+="ecapi"===t?"ecapi":"tlapi"===t?"tlapi":"tapi";let i=this.nonce();a=this.urlencode(this.extend({method:e,nonce:i},s)),r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.hmac(this.encode(a),this.encode(this.secret),"sha512")}}return{url:o,method:i,body:a,headers:r}}async request(e,t="api",i="GET",s={},a,o){let n=await this.fetch2(e,t,i,s,a,o);if("error"in n)throw new r(this.id+" "+n.error);if("success"in n&&!n.success)throw new r(this.id+" "+this.json(n));return n}}}})});